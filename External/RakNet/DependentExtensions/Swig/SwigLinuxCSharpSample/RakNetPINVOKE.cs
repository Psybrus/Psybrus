/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace RakNet {

using System;
using System.Runtime.InteropServices;

class RakNetPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [DllImport("RakNet", EntryPoint="SWIGRegisterExceptionCallbacks_RakNet")]
    public static extern void SWIGRegisterExceptionCallbacks_RakNet(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [DllImport("RakNet", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_RakNet")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_RakNet(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_RakNet(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_RakNet(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [ThreadStatic]
    private static Exception pendingException = null;
    private static int numExceptionsPending = 0;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(Exception e) {
      if (pendingException != null)
        throw new ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(typeof(RakNetPINVOKE)) {
        numExceptionsPending++;
      }
    }

    public static Exception Retrieve() {
      Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(typeof(RakNetPINVOKE)) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [DllImport("RakNet", EntryPoint="SWIGRegisterStringCallback_RakNet")]
    public static extern void SWIGRegisterStringCallback_RakNet(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_RakNet(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  [DllImport("RakNet", EntryPoint="CSharp_SWIG_CSHARP_NO_IMCLASS_STATIC_CONSTRUCTOR_get")]
  public static extern int SWIG_CSHARP_NO_IMCLASS_STATIC_CONSTRUCTOR_get();

  [DllImport("RakNet", EntryPoint="CSharp_new_ColumnDescriptor__SWIG_0")]
  public static extern IntPtr new_ColumnDescriptor__SWIG_0();

  [DllImport("RakNet", EntryPoint="CSharp_delete_ColumnDescriptor")]
  public static extern void delete_ColumnDescriptor(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_ColumnDescriptor__SWIG_1")]
  public static extern IntPtr new_ColumnDescriptor__SWIG_1(string jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_ColumnDescriptor_columnName_set")]
  public static extern void ColumnDescriptor_columnName_set(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_ColumnDescriptor_columnName_get")]
  public static extern string ColumnDescriptor_columnName_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_ColumnDescriptor_columnType_set")]
  public static extern void ColumnDescriptor_columnType_set(HandleRef jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_ColumnDescriptor_columnType_get")]
  public static extern int ColumnDescriptor_columnType_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_Cell__SWIG_0")]
  public static extern IntPtr new_Cell__SWIG_0();

  [DllImport("RakNet", EntryPoint="CSharp_delete_Cell")]
  public static extern void delete_Cell(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_Cell_Clear")]
  public static extern void Cell_Clear(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_Cell_Set__SWIG_0")]
  public static extern void Cell_Set__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_Cell_Set__SWIG_1")]
  public static extern void Cell_Set__SWIG_1(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_Cell_Set__SWIG_2")]
  public static extern void Cell_Set__SWIG_2(HandleRef jarg1, double jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_Cell_Set__SWIG_3")]
  public static extern void Cell_Set__SWIG_3(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_Cell_Get__SWIG_0")]
  public static extern void Cell_Get__SWIG_0(HandleRef jarg1, out int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_Cell_Get__SWIG_1")]
  public static extern void Cell_Get__SWIG_1(HandleRef jarg1, out double jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_Cell_ToString")]
  public static extern IntPtr Cell_ToString(HandleRef jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_Cell_CopyData")]
  public static extern IntPtr Cell_CopyData(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_new_Cell__SWIG_1")]
  public static extern IntPtr new_Cell__SWIG_1(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_Cell_EstimateColumnType")]
  public static extern int Cell_EstimateColumnType(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_Cell_isEmpty_set")]
  public static extern void Cell_isEmpty_set(HandleRef jarg1, bool jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_Cell_isEmpty_get")]
  public static extern bool Cell_isEmpty_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_Cell_i_set")]
  public static extern void Cell_i_set(HandleRef jarg1, double jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_Cell_i_get")]
  public static extern double Cell_i_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_Cell_Set__SWIG_4")]
  public static extern void Cell_Set__SWIG_4(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_Cell_Get__SWIG_2")]
  public static extern void Cell_Get__SWIG_2(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, out int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_Cell_GetHelper")]
  public static extern string Cell_GetHelper(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_Row_cells_set")]
  public static extern void Row_cells_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_Row_cells_get")]
  public static extern IntPtr Row_cells_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_Row_UpdateCell__SWIG_0")]
  public static extern void Row_UpdateCell__SWIG_0(HandleRef jarg1, uint jarg2, double jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_Row_UpdateCell__SWIG_1")]
  public static extern void Row_UpdateCell__SWIG_1(HandleRef jarg1, uint jarg2, string jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_Row_UpdateCell__SWIG_2")]
  public static extern void Row_UpdateCell__SWIG_2(HandleRef jarg1, uint jarg2, int jarg3, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_new_Row")]
  public static extern IntPtr new_Row();

  [DllImport("RakNet", EntryPoint="CSharp_delete_Row")]
  public static extern void delete_Row(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_FilterQuery__SWIG_0")]
  public static extern IntPtr new_FilterQuery__SWIG_0();

  [DllImport("RakNet", EntryPoint="CSharp_delete_FilterQuery")]
  public static extern void delete_FilterQuery(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_FilterQuery__SWIG_1")]
  public static extern IntPtr new_FilterQuery__SWIG_1(uint jarg1, HandleRef jarg2, int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_FilterQuery_columnName_set")]
  public static extern void FilterQuery_columnName_set(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_FilterQuery_columnName_get")]
  public static extern string FilterQuery_columnName_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FilterQuery_columnIndex_set")]
  public static extern void FilterQuery_columnIndex_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_FilterQuery_columnIndex_get")]
  public static extern uint FilterQuery_columnIndex_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FilterQuery_cellValue_set")]
  public static extern void FilterQuery_cellValue_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_FilterQuery_cellValue_get")]
  public static extern IntPtr FilterQuery_cellValue_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FilterQuery_operation_set")]
  public static extern void FilterQuery_operation_set(HandleRef jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_FilterQuery_operation_get")]
  public static extern int FilterQuery_operation_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_SortQuery_columnIndex_set")]
  public static extern void SortQuery_columnIndex_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_SortQuery_columnIndex_get")]
  public static extern uint SortQuery_columnIndex_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_SortQuery_operation_set")]
  public static extern void SortQuery_operation_set(HandleRef jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_SortQuery_operation_get")]
  public static extern int SortQuery_operation_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_SortQuery")]
  public static extern IntPtr new_SortQuery();

  [DllImport("RakNet", EntryPoint="CSharp_delete_SortQuery")]
  public static extern void delete_SortQuery(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_OnFileStruct_fileIndex_set")]
  public static extern void OnFileStruct_fileIndex_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_OnFileStruct_fileIndex_get")]
  public static extern uint OnFileStruct_fileIndex_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_OnFileStruct_fileName_set")]
  public static extern void OnFileStruct_fileName_set(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_OnFileStruct_fileName_get")]
  public static extern string OnFileStruct_fileName_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_OnFileStruct_fileData_set")]
  public static extern void OnFileStruct_fileData_set(HandleRef jarg1, IntPtr jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_OnFileStruct_fileData_get")]
  public static extern IntPtr OnFileStruct_fileData_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_OnFileStruct_byteLengthOfThisFile_set")]
  public static extern void OnFileStruct_byteLengthOfThisFile_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_OnFileStruct_byteLengthOfThisFile_get")]
  public static extern uint OnFileStruct_byteLengthOfThisFile_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_OnFileStruct_bytesDownloadedForThisFile_set")]
  public static extern void OnFileStruct_bytesDownloadedForThisFile_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_OnFileStruct_bytesDownloadedForThisFile_get")]
  public static extern uint OnFileStruct_bytesDownloadedForThisFile_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_OnFileStruct_setID_set")]
  public static extern void OnFileStruct_setID_set(HandleRef jarg1, ushort jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_OnFileStruct_setID_get")]
  public static extern ushort OnFileStruct_setID_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_OnFileStruct_numberOfFilesInThisSet_set")]
  public static extern void OnFileStruct_numberOfFilesInThisSet_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_OnFileStruct_numberOfFilesInThisSet_get")]
  public static extern uint OnFileStruct_numberOfFilesInThisSet_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_OnFileStruct_byteLengthOfThisSet_set")]
  public static extern void OnFileStruct_byteLengthOfThisSet_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_OnFileStruct_byteLengthOfThisSet_get")]
  public static extern uint OnFileStruct_byteLengthOfThisSet_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_OnFileStruct_bytesDownloadedForThisSet_set")]
  public static extern void OnFileStruct_bytesDownloadedForThisSet_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_OnFileStruct_bytesDownloadedForThisSet_get")]
  public static extern uint OnFileStruct_bytesDownloadedForThisSet_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_OnFileStruct_context_set")]
  public static extern void OnFileStruct_context_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_OnFileStruct_context_get")]
  public static extern IntPtr OnFileStruct_context_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_OnFileStruct")]
  public static extern IntPtr new_OnFileStruct();

  [DllImport("RakNet", EntryPoint="CSharp_OnFileStruct_SetFileData")]
  public static extern void OnFileStruct_SetFileData(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_delete_OnFileStruct")]
  public static extern void delete_OnFileStruct(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FileProgressStruct_onFileStruct_set")]
  public static extern void FileProgressStruct_onFileStruct_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_FileProgressStruct_onFileStruct_get")]
  public static extern IntPtr FileProgressStruct_onFileStruct_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FileProgressStruct_partCount_set")]
  public static extern void FileProgressStruct_partCount_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_FileProgressStruct_partCount_get")]
  public static extern uint FileProgressStruct_partCount_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FileProgressStruct_partTotal_set")]
  public static extern void FileProgressStruct_partTotal_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_FileProgressStruct_partTotal_get")]
  public static extern uint FileProgressStruct_partTotal_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FileProgressStruct_dataChunkLength_set")]
  public static extern void FileProgressStruct_dataChunkLength_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_FileProgressStruct_dataChunkLength_get")]
  public static extern uint FileProgressStruct_dataChunkLength_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FileProgressStruct_firstDataChunk_set")]
  public static extern void FileProgressStruct_firstDataChunk_set(HandleRef jarg1, IntPtr jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_FileProgressStruct_firstDataChunk_get")]
  public static extern IntPtr FileProgressStruct_firstDataChunk_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FileProgressStruct_iriDataChunk_set")]
  public static extern void FileProgressStruct_iriDataChunk_set(HandleRef jarg1, IntPtr jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_FileProgressStruct_iriDataChunk_get")]
  public static extern IntPtr FileProgressStruct_iriDataChunk_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FileProgressStruct_iriWriteOffset_set")]
  public static extern void FileProgressStruct_iriWriteOffset_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_FileProgressStruct_iriWriteOffset_get")]
  public static extern uint FileProgressStruct_iriWriteOffset_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FileProgressStruct_allocateIrIDataChunkAutomatically_set")]
  public static extern void FileProgressStruct_allocateIrIDataChunkAutomatically_set(HandleRef jarg1, bool jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_FileProgressStruct_allocateIrIDataChunkAutomatically_get")]
  public static extern bool FileProgressStruct_allocateIrIDataChunkAutomatically_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_FileProgressStruct")]
  public static extern IntPtr new_FileProgressStruct();

  [DllImport("RakNet", EntryPoint="CSharp_FileProgressStruct_SetFirstDataChunk")]
  public static extern void FileProgressStruct_SetFirstDataChunk(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_FileProgressStruct_SetIriDataChunk")]
  public static extern void FileProgressStruct_SetIriDataChunk(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_delete_FileProgressStruct")]
  public static extern void delete_FileProgressStruct(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_StatisticsToStringHelper")]
  public static extern string StatisticsToStringHelper(HandleRef jarg1, string jarg2, int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp___GET_TIME_64BIT_get")]
  public static extern int __GET_TIME_64BIT_get();

  [DllImport("RakNet", EntryPoint="CSharp_MAX_ALLOCA_STACK_ALLOCATION_get")]
  public static extern int MAX_ALLOCA_STACK_ALLOCATION_get();

  [DllImport("RakNet", EntryPoint="CSharp__USE_RAK_MEMORY_OVERRIDE_get")]
  public static extern int _USE_RAK_MEMORY_OVERRIDE_get();

  [DllImport("RakNet", EntryPoint="CSharp_BITSTREAM_STACK_ALLOCATION_SIZE_get")]
  public static extern int BITSTREAM_STACK_ALLOCATION_SIZE_get();

  [DllImport("RakNet", EntryPoint="CSharp_MAXIMUM_NUMBER_OF_INTERNAL_IDS_get")]
  public static extern int MAXIMUM_NUMBER_OF_INTERNAL_IDS_get();

  [DllImport("RakNet", EntryPoint="CSharp_DATAGRAM_MESSAGE_ID_ARRAY_LENGTH_get")]
  public static extern int DATAGRAM_MESSAGE_ID_ARRAY_LENGTH_get();

  [DllImport("RakNet", EntryPoint="CSharp_RESEND_BUFFER_ARRAY_LENGTH_get")]
  public static extern int RESEND_BUFFER_ARRAY_LENGTH_get();

  [DllImport("RakNet", EntryPoint="CSharp_RESEND_BUFFER_ARRAY_MASK_get")]
  public static extern int RESEND_BUFFER_ARRAY_MASK_get();

  [DllImport("RakNet", EntryPoint="CSharp_GET_TIME_SPIKE_LIMIT_get")]
  public static extern int GET_TIME_SPIKE_LIMIT_get();

  [DllImport("RakNet", EntryPoint="CSharp_LIBCAT_SECURITY_get")]
  public static extern int LIBCAT_SECURITY_get();

  [DllImport("RakNet", EntryPoint="CSharp__RAKNET_SUPPORT_ConnectionGraph2_get")]
  public static extern int _RAKNET_SUPPORT_ConnectionGraph2_get();

  [DllImport("RakNet", EntryPoint="CSharp__RAKNET_SUPPORT_DirectoryDeltaTransfer_get")]
  public static extern int _RAKNET_SUPPORT_DirectoryDeltaTransfer_get();

  [DllImport("RakNet", EntryPoint="CSharp__RAKNET_SUPPORT_FileListTransfer_get")]
  public static extern int _RAKNET_SUPPORT_FileListTransfer_get();

  [DllImport("RakNet", EntryPoint="CSharp__RAKNET_SUPPORT_FullyConnectedMesh_get")]
  public static extern int _RAKNET_SUPPORT_FullyConnectedMesh_get();

  [DllImport("RakNet", EntryPoint="CSharp__RAKNET_SUPPORT_FullyConnectedMesh2_get")]
  public static extern int _RAKNET_SUPPORT_FullyConnectedMesh2_get();

  [DllImport("RakNet", EntryPoint="CSharp__RAKNET_SUPPORT_MessageFilter_get")]
  public static extern int _RAKNET_SUPPORT_MessageFilter_get();

  [DllImport("RakNet", EntryPoint="CSharp__RAKNET_SUPPORT_NatPunchthroughClient_get")]
  public static extern int _RAKNET_SUPPORT_NatPunchthroughClient_get();

  [DllImport("RakNet", EntryPoint="CSharp__RAKNET_SUPPORT_NatPunchthroughServer_get")]
  public static extern int _RAKNET_SUPPORT_NatPunchthroughServer_get();

  [DllImport("RakNet", EntryPoint="CSharp__RAKNET_SUPPORT_NatTypeDetectionClient_get")]
  public static extern int _RAKNET_SUPPORT_NatTypeDetectionClient_get();

  [DllImport("RakNet", EntryPoint="CSharp__RAKNET_SUPPORT_NatTypeDetectionServer_get")]
  public static extern int _RAKNET_SUPPORT_NatTypeDetectionServer_get();

  [DllImport("RakNet", EntryPoint="CSharp__RAKNET_SUPPORT_PacketLogger_get")]
  public static extern int _RAKNET_SUPPORT_PacketLogger_get();

  [DllImport("RakNet", EntryPoint="CSharp__RAKNET_SUPPORT_ReadyEvent_get")]
  public static extern int _RAKNET_SUPPORT_ReadyEvent_get();

  [DllImport("RakNet", EntryPoint="CSharp__RAKNET_SUPPORT_ReplicaManager3_get")]
  public static extern int _RAKNET_SUPPORT_ReplicaManager3_get();

  [DllImport("RakNet", EntryPoint="CSharp__RAKNET_SUPPORT_Router2_get")]
  public static extern int _RAKNET_SUPPORT_Router2_get();

  [DllImport("RakNet", EntryPoint="CSharp__RAKNET_SUPPORT_RPC4Plugin_get")]
  public static extern int _RAKNET_SUPPORT_RPC4Plugin_get();

  [DllImport("RakNet", EntryPoint="CSharp__RAKNET_SUPPORT_TeamBalancer_get")]
  public static extern int _RAKNET_SUPPORT_TeamBalancer_get();

  [DllImport("RakNet", EntryPoint="CSharp__RAKNET_SUPPORT_UDPProxyClient_get")]
  public static extern int _RAKNET_SUPPORT_UDPProxyClient_get();

  [DllImport("RakNet", EntryPoint="CSharp__RAKNET_SUPPORT_UDPProxyCoordinator_get")]
  public static extern int _RAKNET_SUPPORT_UDPProxyCoordinator_get();

  [DllImport("RakNet", EntryPoint="CSharp__RAKNET_SUPPORT_UDPProxyServer_get")]
  public static extern int _RAKNET_SUPPORT_UDPProxyServer_get();

  [DllImport("RakNet", EntryPoint="CSharp__RAKNET_SUPPORT_ConsoleServer_get")]
  public static extern int _RAKNET_SUPPORT_ConsoleServer_get();

  [DllImport("RakNet", EntryPoint="CSharp__RAKNET_SUPPORT_RakNetTransport_get")]
  public static extern int _RAKNET_SUPPORT_RakNetTransport_get();

  [DllImport("RakNet", EntryPoint="CSharp__RAKNET_SUPPORT_TelnetTransport_get")]
  public static extern int _RAKNET_SUPPORT_TelnetTransport_get();

  [DllImport("RakNet", EntryPoint="CSharp__RAKNET_SUPPORT_TCPInterface_get")]
  public static extern int _RAKNET_SUPPORT_TCPInterface_get();

  [DllImport("RakNet", EntryPoint="CSharp__RAKNET_SUPPORT_LogCommandParser_get")]
  public static extern int _RAKNET_SUPPORT_LogCommandParser_get();

  [DllImport("RakNet", EntryPoint="CSharp__RAKNET_SUPPORT_RakNetCommandParser_get")]
  public static extern int _RAKNET_SUPPORT_RakNetCommandParser_get();

  [DllImport("RakNet", EntryPoint="CSharp__RAKNET_SUPPORT_EmailSender_get")]
  public static extern int _RAKNET_SUPPORT_EmailSender_get();

  [DllImport("RakNet", EntryPoint="CSharp__RAKNET_SUPPORT_HTTPConnection_get")]
  public static extern int _RAKNET_SUPPORT_HTTPConnection_get();

  [DllImport("RakNet", EntryPoint="CSharp__RAKNET_SUPPORT_PacketizedTCP_get")]
  public static extern int _RAKNET_SUPPORT_PacketizedTCP_get();

  [DllImport("RakNet", EntryPoint="CSharp_new_SimpleMutex")]
  public static extern IntPtr new_SimpleMutex();

  [DllImport("RakNet", EntryPoint="CSharp_delete_SimpleMutex")]
  public static extern void delete_SimpleMutex(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_SimpleMutex_Lock")]
  public static extern void SimpleMutex_Lock(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_SimpleMutex_Unlock")]
  public static extern void SimpleMutex_Unlock(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_INVALID_SOCKET_get")]
  public static extern int INVALID_SOCKET_get();

  [DllImport("RakNet", EntryPoint="CSharp_MAX_RPC_MAP_SIZE_get")]
  public static extern int MAX_RPC_MAP_SIZE_get();

  [DllImport("RakNet", EntryPoint="CSharp_UNDEFINED_RPC_INDEX_get")]
  public static extern int UNDEFINED_RPC_INDEX_get();

  [DllImport("RakNet", EntryPoint="CSharp_PRINTF_64_BIT_MODIFIER_get")]
  public static extern string PRINTF_64_BIT_MODIFIER_get();

  [DllImport("RakNet", EntryPoint="CSharp_PublicKey_publicKeyMode_set")]
  public static extern void PublicKey_publicKeyMode_set(HandleRef jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_PublicKey_publicKeyMode_get")]
  public static extern int PublicKey_publicKeyMode_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_PublicKey_remoteServerPublicKey_set")]
  public static extern void PublicKey_remoteServerPublicKey_set(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_PublicKey_remoteServerPublicKey_get")]
  public static extern string PublicKey_remoteServerPublicKey_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_PublicKey_myPublicKey_set")]
  public static extern void PublicKey_myPublicKey_set(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_PublicKey_myPublicKey_get")]
  public static extern string PublicKey_myPublicKey_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_PublicKey_myPrivateKey_set")]
  public static extern void PublicKey_myPrivateKey_set(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_PublicKey_myPrivateKey_get")]
  public static extern string PublicKey_myPrivateKey_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_PublicKey")]
  public static extern IntPtr new_PublicKey();

  [DllImport("RakNet", EntryPoint="CSharp_delete_PublicKey")]
  public static extern void delete_PublicKey(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_SocketDescriptor__SWIG_0")]
  public static extern IntPtr new_SocketDescriptor__SWIG_0();

  [DllImport("RakNet", EntryPoint="CSharp_new_SocketDescriptor__SWIG_1")]
  public static extern IntPtr new_SocketDescriptor__SWIG_1(ushort jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_SocketDescriptor_port_set")]
  public static extern void SocketDescriptor_port_set(HandleRef jarg1, ushort jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_SocketDescriptor_port_get")]
  public static extern ushort SocketDescriptor_port_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_SocketDescriptor_hostAddress_set")]
  public static extern void SocketDescriptor_hostAddress_set(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_SocketDescriptor_hostAddress_get")]
  public static extern string SocketDescriptor_hostAddress_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_SocketDescriptor_remotePortRakNetWasStartedOn_PS3_set")]
  public static extern void SocketDescriptor_remotePortRakNetWasStartedOn_PS3_set(HandleRef jarg1, ushort jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_SocketDescriptor_remotePortRakNetWasStartedOn_PS3_get")]
  public static extern ushort SocketDescriptor_remotePortRakNetWasStartedOn_PS3_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_delete_SocketDescriptor")]
  public static extern void delete_SocketDescriptor(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_NonNumericHostString")]
  public static extern bool NonNumericHostString(string jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_SystemAddress__SWIG_0")]
  public static extern IntPtr new_SystemAddress__SWIG_0();

  [DllImport("RakNet", EntryPoint="CSharp_new_SystemAddress__SWIG_1")]
  public static extern IntPtr new_SystemAddress__SWIG_1(string jarg1, ushort jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_new_SystemAddress__SWIG_2")]
  public static extern IntPtr new_SystemAddress__SWIG_2(uint jarg1, ushort jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_SystemAddress_binaryAddress_set")]
  public static extern void SystemAddress_binaryAddress_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_SystemAddress_binaryAddress_get")]
  public static extern uint SystemAddress_binaryAddress_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_SystemAddress_port_set")]
  public static extern void SystemAddress_port_set(HandleRef jarg1, ushort jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_SystemAddress_port_get")]
  public static extern ushort SystemAddress_port_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_SystemAddress_systemIndex_set")]
  public static extern void SystemAddress_systemIndex_set(HandleRef jarg1, ushort jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_SystemAddress_systemIndex_get")]
  public static extern ushort SystemAddress_systemIndex_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_SystemAddress_size")]
  public static extern int SystemAddress_size();

  [DllImport("RakNet", EntryPoint="CSharp_SystemAddress_ToString")]
  public static extern string SystemAddress_ToString(HandleRef jarg1, bool jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_SystemAddress_SetBinaryAddress")]
  public static extern void SystemAddress_SetBinaryAddress(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_SystemAddress_CopyData")]
  public static extern IntPtr SystemAddress_CopyData(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_SystemAddress_Equals")]
  public static extern bool SystemAddress_Equals(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_SystemAddress_OpNotEqual")]
  public static extern bool SystemAddress_OpNotEqual(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_SystemAddress_OpGreater")]
  public static extern bool SystemAddress_OpGreater(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_SystemAddress_OpLess")]
  public static extern bool SystemAddress_OpLess(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_delete_SystemAddress")]
  public static extern void delete_SystemAddress(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_RakNetGUID__SWIG_0")]
  public static extern IntPtr new_RakNetGUID__SWIG_0();

  [DllImport("RakNet", EntryPoint="CSharp_new_RakNetGUID__SWIG_1")]
  public static extern IntPtr new_RakNetGUID__SWIG_1(ulong jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetGUID_g_set")]
  public static extern void RakNetGUID_g_set(HandleRef jarg1, ulong jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetGUID_g_get")]
  public static extern ulong RakNetGUID_g_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetGUID_ToString")]
  public static extern string RakNetGUID_ToString(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetGUID_FromString")]
  public static extern bool RakNetGUID_FromString(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetGUID_CopyData")]
  public static extern IntPtr RakNetGUID_CopyData(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetGUID_systemIndex_set")]
  public static extern void RakNetGUID_systemIndex_set(HandleRef jarg1, ushort jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetGUID_systemIndex_get")]
  public static extern ushort RakNetGUID_systemIndex_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetGUID_size")]
  public static extern int RakNetGUID_size();

  [DllImport("RakNet", EntryPoint="CSharp_RakNetGUID_Equals")]
  public static extern bool RakNetGUID_Equals(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetGUID_OpNotEqual")]
  public static extern bool RakNetGUID_OpNotEqual(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetGUID_OpGreater")]
  public static extern bool RakNetGUID_OpGreater(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetGUID_OpLess")]
  public static extern bool RakNetGUID_OpLess(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_delete_RakNetGUID")]
  public static extern void delete_RakNetGUID(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_AddressOrGUID_rakNetGuid_set")]
  public static extern void AddressOrGUID_rakNetGuid_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_AddressOrGUID_rakNetGuid_get")]
  public static extern IntPtr AddressOrGUID_rakNetGuid_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_AddressOrGUID_systemAddress_set")]
  public static extern void AddressOrGUID_systemAddress_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_AddressOrGUID_systemAddress_get")]
  public static extern IntPtr AddressOrGUID_systemAddress_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_AddressOrGUID_GetSystemIndex")]
  public static extern ushort AddressOrGUID_GetSystemIndex(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_AddressOrGUID_IsUndefined")]
  public static extern bool AddressOrGUID_IsUndefined(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_AddressOrGUID_SetUndefined")]
  public static extern void AddressOrGUID_SetUndefined(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_AddressOrGUID__SWIG_0")]
  public static extern IntPtr new_AddressOrGUID__SWIG_0();

  [DllImport("RakNet", EntryPoint="CSharp_new_AddressOrGUID__SWIG_1")]
  public static extern IntPtr new_AddressOrGUID__SWIG_1(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_AddressOrGUID__SWIG_2")]
  public static extern IntPtr new_AddressOrGUID__SWIG_2(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_AddressOrGUID__SWIG_3")]
  public static extern IntPtr new_AddressOrGUID__SWIG_3(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_AddressOrGUID_CopyData__SWIG_0")]
  public static extern IntPtr AddressOrGUID_CopyData__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_AddressOrGUID_CopyData__SWIG_1")]
  public static extern IntPtr AddressOrGUID_CopyData__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_AddressOrGUID_CopyData__SWIG_2")]
  public static extern IntPtr AddressOrGUID_CopyData__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_delete_AddressOrGUID")]
  public static extern void delete_AddressOrGUID(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_Packet_systemAddress_set")]
  public static extern void Packet_systemAddress_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_Packet_systemAddress_get")]
  public static extern IntPtr Packet_systemAddress_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_Packet_guid_set")]
  public static extern void Packet_guid_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_Packet_guid_get")]
  public static extern IntPtr Packet_guid_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_Packet_length_set")]
  public static extern void Packet_length_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_Packet_length_get")]
  public static extern uint Packet_length_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_Packet_bitSize_set")]
  public static extern void Packet_bitSize_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_Packet_bitSize_get")]
  public static extern uint Packet_bitSize_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_Packet_data_set")]
  public static extern void Packet_data_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_Packet_data_get")]
  public static extern IntPtr Packet_data_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_Packet_deleteData_set")]
  public static extern void Packet_deleteData_set(HandleRef jarg1, bool jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_Packet_deleteData_get")]
  public static extern bool Packet_deleteData_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_Packet")]
  public static extern IntPtr new_Packet();

  [DllImport("RakNet", EntryPoint="CSharp_Packet_SetPacketData")]
  public static extern void Packet_SetPacketData(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_delete_Packet")]
  public static extern void delete_Packet(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_UNASSIGNED_PLAYER_INDEX_get")]
  public static extern ushort UNASSIGNED_PLAYER_INDEX_get();

  [DllImport("RakNet", EntryPoint="CSharp_UNASSIGNED_NETWORK_ID_get")]
  public static extern ulong UNASSIGNED_NETWORK_ID_get();

  [DllImport("RakNet", EntryPoint="CSharp_PING_TIMES_ARRAY_SIZE_get")]
  public static extern int PING_TIMES_ARRAY_SIZE_get();

  [DllImport("RakNet", EntryPoint="CSharp_uint24_t_val_set")]
  public static extern void uint24_t_val_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_uint24_t_val_get")]
  public static extern uint uint24_t_val_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_uint24_t__SWIG_0")]
  public static extern IntPtr new_uint24_t__SWIG_0();

  [DllImport("RakNet", EntryPoint="CSharp_new_uint24_t__SWIG_1")]
  public static extern IntPtr new_uint24_t__SWIG_1(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_uint24_t_OpPlusPlus")]
  public static extern IntPtr uint24_t_OpPlusPlus(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_uint24_t_OpMinusMinus")]
  public static extern IntPtr uint24_t_OpMinusMinus(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_uint24_t_CopyData__SWIG_0")]
  public static extern IntPtr uint24_t_CopyData__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_uint24_t_Equals__SWIG_0")]
  public static extern bool uint24_t_Equals__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_uint24_t_OpNotEqual__SWIG_0")]
  public static extern bool uint24_t_OpNotEqual__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_uint24_t_OpGreater__SWIG_0")]
  public static extern bool uint24_t_OpGreater__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_uint24_t_OpLess__SWIG_0")]
  public static extern bool uint24_t_OpLess__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_uint24_t_OpPlus__SWIG_0")]
  public static extern IntPtr uint24_t_OpPlus__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_uint24_t_OpMinus__SWIG_0")]
  public static extern IntPtr uint24_t_OpMinus__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_uint24_t_OpDivide__SWIG_0")]
  public static extern IntPtr uint24_t_OpDivide__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_uint24_t_OpMultiply__SWIG_0")]
  public static extern IntPtr uint24_t_OpMultiply__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_new_uint24_t__SWIG_2")]
  public static extern IntPtr new_uint24_t__SWIG_2(uint jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_uint24_t_CopyData__SWIG_1")]
  public static extern IntPtr uint24_t_CopyData__SWIG_1(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_uint24_t_Equals__SWIG_1")]
  public static extern bool uint24_t_Equals__SWIG_1(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_uint24_t_OpNotEqual__SWIG_1")]
  public static extern bool uint24_t_OpNotEqual__SWIG_1(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_uint24_t_OpGreater__SWIG_1")]
  public static extern bool uint24_t_OpGreater__SWIG_1(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_uint24_t_OpLess__SWIG_1")]
  public static extern bool uint24_t_OpLess__SWIG_1(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_uint24_t_OpPlus__SWIG_1")]
  public static extern IntPtr uint24_t_OpPlus__SWIG_1(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_uint24_t_OpMinus__SWIG_1")]
  public static extern IntPtr uint24_t_OpMinus__SWIG_1(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_uint24_t_OpDivide__SWIG_1")]
  public static extern IntPtr uint24_t_OpDivide__SWIG_1(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_uint24_t_OpMultiply__SWIG_1")]
  public static extern IntPtr uint24_t_OpMultiply__SWIG_1(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_delete_uint24_t")]
  public static extern void delete_uint24_t(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_RakString__SWIG_0")]
  public static extern IntPtr new_RakString__SWIG_0();

  [DllImport("RakNet", EntryPoint="CSharp_new_RakString__SWIG_1")]
  public static extern IntPtr new_RakString__SWIG_1(char jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_RakString__SWIG_2")]
  public static extern IntPtr new_RakString__SWIG_2(byte jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_RakString__SWIG_3")]
  public static extern IntPtr new_RakString__SWIG_3(string jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_delete_RakString")]
  public static extern void delete_RakString(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_RakString__SWIG_4")]
  public static extern IntPtr new_RakString__SWIG_4(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_C_String")]
  public static extern string RakString_C_String(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_C_StringUnsafe")]
  public static extern string RakString_C_StringUnsafe(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_CopyData__SWIG_0")]
  public static extern IntPtr RakString_CopyData__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_CopyData__SWIG_1")]
  public static extern IntPtr RakString_CopyData__SWIG_1(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_CopyData__SWIG_2")]
  public static extern IntPtr RakString_CopyData__SWIG_2(HandleRef jarg1, char jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_OpArray")]
  public static extern byte RakString_OpArray(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_Find__SWIG_0")]
  public static extern uint RakString_Find__SWIG_0(HandleRef jarg1, string jarg2, uint jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_Find__SWIG_1")]
  public static extern uint RakString_Find__SWIG_1(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_Equals__SWIG_0")]
  public static extern bool RakString_Equals__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_Equals__SWIG_1")]
  public static extern bool RakString_Equals__SWIG_1(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_OpLess")]
  public static extern bool RakString_OpLess(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_OpLessEquals")]
  public static extern bool RakString_OpLessEquals(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_OpGreater")]
  public static extern bool RakString_OpGreater(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_OpGreaterEquals")]
  public static extern bool RakString_OpGreaterEquals(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_OpNotEqual__SWIG_0")]
  public static extern bool RakString_OpNotEqual__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_OpNotEqual__SWIG_1")]
  public static extern bool RakString_OpNotEqual__SWIG_1(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_ToLower")]
  public static extern string RakString_ToLower(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_ToUpper")]
  public static extern string RakString_ToUpper(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_Set")]
  public static extern void RakString_Set(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_Assign")]
  public static extern IntPtr RakString_Assign(HandleRef jarg1, string jarg2, uint jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_IsEmpty")]
  public static extern bool RakString_IsEmpty(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_GetLength")]
  public static extern uint RakString_GetLength(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_Replace")]
  public static extern void RakString_Replace(HandleRef jarg1, uint jarg2, uint jarg3, byte jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_SetChar__SWIG_0")]
  public static extern void RakString_SetChar__SWIG_0(HandleRef jarg1, uint jarg2, byte jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_SetChar__SWIG_1")]
  public static extern void RakString_SetChar__SWIG_1(HandleRef jarg1, uint jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_Truncate")]
  public static extern void RakString_Truncate(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_SubStr")]
  public static extern IntPtr RakString_SubStr(HandleRef jarg1, uint jarg2, uint jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_Erase")]
  public static extern void RakString_Erase(HandleRef jarg1, uint jarg2, uint jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_TerminateAtFirstCharacter")]
  public static extern void RakString_TerminateAtFirstCharacter(HandleRef jarg1, char jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_TerminateAtLastCharacter")]
  public static extern void RakString_TerminateAtLastCharacter(HandleRef jarg1, char jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_RemoveCharacter")]
  public static extern void RakString_RemoveCharacter(HandleRef jarg1, char jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_NonVariadic")]
  public static extern IntPtr RakString_NonVariadic(string jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_ToInteger__SWIG_0")]
  public static extern uint RakString_ToInteger__SWIG_0(string jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_ToInteger__SWIG_1")]
  public static extern uint RakString_ToInteger__SWIG_1(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_StrCmp")]
  public static extern int RakString_StrCmp(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_StrICmp")]
  public static extern int RakString_StrICmp(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_Clear")]
  public static extern void RakString_Clear(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_Printf")]
  public static extern void RakString_Printf(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_IPAddressMatch")]
  public static extern bool RakString_IPAddressMatch(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_ContainsNonprintableExceptSpaces")]
  public static extern bool RakString_ContainsNonprintableExceptSpaces(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_IsEmailAddress")]
  public static extern bool RakString_IsEmailAddress(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_URLEncode")]
  public static extern IntPtr RakString_URLEncode(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_URLDecode")]
  public static extern IntPtr RakString_URLDecode(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_SQLEscape")]
  public static extern IntPtr RakString_SQLEscape(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_MakeFilePath")]
  public static extern IntPtr RakString_MakeFilePath(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_FreeMemory")]
  public static extern void RakString_FreeMemory();

  [DllImport("RakNet", EntryPoint="CSharp_RakString_FreeMemoryNoMutex")]
  public static extern void RakString_FreeMemoryNoMutex();

  [DllImport("RakNet", EntryPoint="CSharp_RakString_Serialize__SWIG_0")]
  public static extern void RakString_Serialize__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_Serialize__SWIG_1")]
  public static extern void RakString_Serialize__SWIG_1(string jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_SerializeCompressed__SWIG_0")]
  public static extern void RakString_SerializeCompressed__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, bool jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_SerializeCompressed__SWIG_1")]
  public static extern void RakString_SerializeCompressed__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_SerializeCompressed__SWIG_2")]
  public static extern void RakString_SerializeCompressed__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_SerializeCompressed__SWIG_3")]
  public static extern void RakString_SerializeCompressed__SWIG_3(string jarg1, HandleRef jarg2, int jarg3, bool jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_SerializeCompressed__SWIG_4")]
  public static extern void RakString_SerializeCompressed__SWIG_4(string jarg1, HandleRef jarg2, int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_SerializeCompressed__SWIG_5")]
  public static extern void RakString_SerializeCompressed__SWIG_5(string jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_Deserialize__SWIG_0")]
  public static extern bool RakString_Deserialize__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_Deserialize__SWIG_1")]
  public static extern bool RakString_Deserialize__SWIG_1(string jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_DeserializeCompressed__SWIG_0")]
  public static extern bool RakString_DeserializeCompressed__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_DeserializeCompressed__SWIG_1")]
  public static extern bool RakString_DeserializeCompressed__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_DeserializeCompressed__SWIG_2")]
  public static extern bool RakString_DeserializeCompressed__SWIG_2(string jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_DeserializeCompressed__SWIG_3")]
  public static extern bool RakString_DeserializeCompressed__SWIG_3(string jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_ToString__SWIG_0")]
  public static extern string RakString_ToString__SWIG_0(long jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_ToString__SWIG_1")]
  public static extern string RakString_ToString__SWIG_1(ulong jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_GetSizeToAllocate")]
  public static extern uint RakString_GetSizeToAllocate(uint jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_nPos_set")]
  public static extern void RakString_nPos_set(uint jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_nPos_get")]
  public static extern uint RakString_nPos_get();

  [DllImport("RakNet", EntryPoint="CSharp_RakString_RakStringComp")]
  public static extern int RakString_RakStringComp(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakString_LockMutex")]
  public static extern void RakString_LockMutex();

  [DllImport("RakNet", EntryPoint="CSharp_RakString_UnlockMutex")]
  public static extern void RakString_UnlockMutex();

  [DllImport("RakNet", EntryPoint="CSharp_RakString_AppendBytes")]
  public static extern void RakString_AppendBytes(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, uint jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_OpPlus")]
  public static extern IntPtr OpPlus(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_GetInstance")]
  public static extern IntPtr BitStream_GetInstance();

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_DestroyInstance")]
  public static extern void BitStream_DestroyInstance(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_BitStream__SWIG_0")]
  public static extern IntPtr new_BitStream__SWIG_0();

  [DllImport("RakNet", EntryPoint="CSharp_new_BitStream__SWIG_1")]
  public static extern IntPtr new_BitStream__SWIG_1(uint jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_BitStream__SWIG_2")]
  public static extern IntPtr new_BitStream__SWIG_2([In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg1, uint jarg2, bool jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_delete_BitStream")]
  public static extern void delete_BitStream(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_Reset")]
  public static extern void BitStream_Reset(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeFloat16")]
  public static extern bool BitStream_SerializeFloat16(HandleRef jarg1, bool jarg2, ref float jarg3, float jarg4, float jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeBits__SWIG_0")]
  public static extern bool BitStream_SerializeBits__SWIG_0(HandleRef jarg1, bool jarg2, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg3, uint jarg4, bool jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeBits__SWIG_1")]
  public static extern bool BitStream_SerializeBits__SWIG_1(HandleRef jarg1, bool jarg2, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_Read__SWIG_1")]
  public static extern bool BitStream_Read__SWIG_1(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_Read__SWIG_2")]
  public static extern bool BitStream_Read__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_Write__SWIG_1")]
  public static extern void BitStream_Write__SWIG_1(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_Write__SWIG_2")]
  public static extern void BitStream_Write__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteFloat16")]
  public static extern void BitStream_WriteFloat16(HandleRef jarg1, float jarg2, float jarg3, float jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ReadFloat16")]
  public static extern bool BitStream_ReadFloat16(HandleRef jarg1, out float jarg2, float jarg3, float jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ResetReadPointer")]
  public static extern void BitStream_ResetReadPointer(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ResetWritePointer")]
  public static extern void BitStream_ResetWritePointer(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_AssertStreamEmpty")]
  public static extern void BitStream_AssertStreamEmpty(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_PrintBits")]
  public static extern void BitStream_PrintBits(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_PrintHex")]
  public static extern void BitStream_PrintHex(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_IgnoreBits")]
  public static extern void BitStream_IgnoreBits(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_IgnoreBytes")]
  public static extern void BitStream_IgnoreBytes(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SetWriteOffset")]
  public static extern void BitStream_SetWriteOffset(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_GetNumberOfBitsUsed")]
  public static extern uint BitStream_GetNumberOfBitsUsed(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_GetWriteOffset")]
  public static extern uint BitStream_GetWriteOffset(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_GetNumberOfBytesUsed")]
  public static extern uint BitStream_GetNumberOfBytesUsed(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_GetReadOffset")]
  public static extern uint BitStream_GetReadOffset(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SetReadOffset")]
  public static extern void BitStream_SetReadOffset(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_GetNumberOfUnreadBits")]
  public static extern uint BitStream_GetNumberOfUnreadBits(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SetData")]
  public static extern void BitStream_SetData(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteBits__SWIG_0")]
  public static extern void BitStream_WriteBits__SWIG_0(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, uint jarg3, bool jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteBits__SWIG_1")]
  public static extern void BitStream_WriteBits__SWIG_1(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, uint jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteAlignedBytes")]
  public static extern void BitStream_WriteAlignedBytes(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, uint jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_EndianSwapBytes")]
  public static extern void BitStream_EndianSwapBytes(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ReadAlignedBytes")]
  public static extern bool BitStream_ReadAlignedBytes(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, uint jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_AlignWriteToByteBoundary")]
  public static extern void BitStream_AlignWriteToByteBoundary(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_AlignReadToByteBoundary")]
  public static extern void BitStream_AlignReadToByteBoundary(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ReadBits__SWIG_0")]
  public static extern bool BitStream_ReadBits__SWIG_0(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, uint jarg3, bool jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ReadBits__SWIG_1")]
  public static extern bool BitStream_ReadBits__SWIG_1(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, uint jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_Write0")]
  public static extern void BitStream_Write0(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_Write1")]
  public static extern void BitStream_Write1(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ReadBit")]
  public static extern bool BitStream_ReadBit(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_AssertCopyData")]
  public static extern void BitStream_AssertCopyData(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SetNumberOfBitsAllocated")]
  public static extern void BitStream_SetNumberOfBitsAllocated(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_AddBitsAndReallocate")]
  public static extern void BitStream_AddBitsAndReallocate(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_GetNumberOfBitsAllocated")]
  public static extern uint BitStream_GetNumberOfBitsAllocated(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_PadWithZeroToByteLength")]
  public static extern void BitStream_PadWithZeroToByteLength(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_NumberOfLeadingZeroes__SWIG_0")]
  public static extern int BitStream_NumberOfLeadingZeroes__SWIG_0(byte jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_NumberOfLeadingZeroes__SWIG_1")]
  public static extern int BitStream_NumberOfLeadingZeroes__SWIG_1(ushort jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_NumberOfLeadingZeroes__SWIG_2")]
  public static extern int BitStream_NumberOfLeadingZeroes__SWIG_2(uint jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_NumberOfLeadingZeroes__SWIG_3")]
  public static extern int BitStream_NumberOfLeadingZeroes__SWIG_3(ulong jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_NumberOfLeadingZeroes__SWIG_4")]
  public static extern int BitStream_NumberOfLeadingZeroes__SWIG_4(sbyte jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_NumberOfLeadingZeroes__SWIG_5")]
  public static extern int BitStream_NumberOfLeadingZeroes__SWIG_5(short jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_NumberOfLeadingZeroes__SWIG_6")]
  public static extern int BitStream_NumberOfLeadingZeroes__SWIG_6(int jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_NumberOfLeadingZeroes__SWIG_7")]
  public static extern int BitStream_NumberOfLeadingZeroes__SWIG_7(long jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_Write__SWIG_3")]
  public static extern void BitStream_Write__SWIG_3(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_Write__SWIG_4")]
  public static extern void BitStream_Write__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteCompressed__SWIG_1")]
  public static extern void BitStream_WriteCompressed__SWIG_1(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteCompressed__SWIG_2")]
  public static extern void BitStream_WriteCompressed__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_DoEndianSwap")]
  public static extern bool BitStream_DoEndianSwap();

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_IsBigEndian")]
  public static extern bool BitStream_IsBigEndian();

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_IsNetworkOrder")]
  public static extern bool BitStream_IsNetworkOrder();

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_IsNetworkOrderInternal")]
  public static extern bool BitStream_IsNetworkOrderInternal();

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ReverseBytes")]
  public static extern void BitStream_ReverseBytes([In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, uint jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ReverseBytesInPlace")]
  public static extern void BitStream_ReverseBytesInPlace([In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_CSharpStringReader")]
  public static extern string BitStream_CSharpStringReader(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_CSharpByteReader")]
  public static extern bool BitStream_CSharpByteReader(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, uint jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_CSharpStringReaderCompressedDelta")]
  public static extern string BitStream_CSharpStringReaderCompressedDelta(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_CSharpStringReaderDelta")]
  public static extern string BitStream_CSharpStringReaderDelta(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_CSharpStringReaderCompressed")]
  public static extern string BitStream_CSharpStringReaderCompressed(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_Write__SWIG_7")]
  public static extern void BitStream_Write__SWIG_7(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, uint jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_CSharpCopyDataHelper")]
  public static extern uint BitStream_CSharpCopyDataHelper(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_CSharpPrintBitsHelper")]
  public static extern string BitStream_CSharpPrintBitsHelper(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_CSharpPrintHexHelper")]
  public static extern string BitStream_CSharpPrintHexHelper(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_Serialize__SWIG_1")]
  public static extern void BitStream_Serialize__SWIG_1(HandleRef jarg1, bool jarg2, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ReadAlignedBytesSafe__SWIG_0")]
  public static extern bool BitStream_ReadAlignedBytesSafe__SWIG_0(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, int jarg3, int jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ReadAlignedBytesSafe__SWIG_1")]
  public static extern bool BitStream_ReadAlignedBytesSafe__SWIG_1(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, uint jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteAlignedVar8")]
  public static extern void BitStream_WriteAlignedVar8(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ReadAlignedVar8")]
  public static extern bool BitStream_ReadAlignedVar8(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteAlignedVar16")]
  public static extern void BitStream_WriteAlignedVar16(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ReadAlignedVar16")]
  public static extern bool BitStream_ReadAlignedVar16(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteAlignedVar32")]
  public static extern void BitStream_WriteAlignedVar32(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ReadAlignedVar32")]
  public static extern bool BitStream_ReadAlignedVar32(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteAlignedBytesSafe")]
  public static extern void BitStream_WriteAlignedBytesSafe(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, uint jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_Serialize__SWIG_2")]
  public static extern bool BitStream_Serialize__SWIG_2(HandleRef jarg1, bool jarg2, ref bool jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_Serialize__SWIG_3")]
  public static extern bool BitStream_Serialize__SWIG_3(HandleRef jarg1, bool jarg2, ref byte jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_Serialize__SWIG_4")]
  public static extern bool BitStream_Serialize__SWIG_4(HandleRef jarg1, bool jarg2, ref int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_Serialize__SWIG_5")]
  public static extern bool BitStream_Serialize__SWIG_5(HandleRef jarg1, bool jarg2, ref long jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_Serialize__SWIG_6")]
  public static extern bool BitStream_Serialize__SWIG_6(HandleRef jarg1, bool jarg2, ref float jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_Serialize__SWIG_7")]
  public static extern bool BitStream_Serialize__SWIG_7(HandleRef jarg1, bool jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_Serialize__SWIG_8")]
  public static extern bool BitStream_Serialize__SWIG_8(HandleRef jarg1, bool jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_Serialize__SWIG_9")]
  public static extern bool BitStream_Serialize__SWIG_9(HandleRef jarg1, bool jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeDelta__SWIG_2")]
  public static extern bool BitStream_SerializeDelta__SWIG_2(HandleRef jarg1, bool jarg2, ref bool jarg3, bool jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeDelta__SWIG_3")]
  public static extern bool BitStream_SerializeDelta__SWIG_3(HandleRef jarg1, bool jarg2, ref bool jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeDelta__SWIG_4")]
  public static extern bool BitStream_SerializeDelta__SWIG_4(HandleRef jarg1, bool jarg2, ref byte jarg3, byte jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeDelta__SWIG_5")]
  public static extern bool BitStream_SerializeDelta__SWIG_5(HandleRef jarg1, bool jarg2, ref byte jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeDelta__SWIG_6")]
  public static extern bool BitStream_SerializeDelta__SWIG_6(HandleRef jarg1, bool jarg2, ref int jarg3, int jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeDelta__SWIG_7")]
  public static extern bool BitStream_SerializeDelta__SWIG_7(HandleRef jarg1, bool jarg2, ref int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeDelta__SWIG_8")]
  public static extern bool BitStream_SerializeDelta__SWIG_8(HandleRef jarg1, bool jarg2, ref long jarg3, long jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeDelta__SWIG_9")]
  public static extern bool BitStream_SerializeDelta__SWIG_9(HandleRef jarg1, bool jarg2, ref long jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeDelta__SWIG_10")]
  public static extern bool BitStream_SerializeDelta__SWIG_10(HandleRef jarg1, bool jarg2, ref float jarg3, float jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeDelta__SWIG_11")]
  public static extern bool BitStream_SerializeDelta__SWIG_11(HandleRef jarg1, bool jarg2, ref float jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeDelta__SWIG_12")]
  public static extern bool BitStream_SerializeDelta__SWIG_12(HandleRef jarg1, bool jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeDelta__SWIG_13")]
  public static extern bool BitStream_SerializeDelta__SWIG_13(HandleRef jarg1, bool jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeDelta__SWIG_14")]
  public static extern bool BitStream_SerializeDelta__SWIG_14(HandleRef jarg1, bool jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeDelta__SWIG_15")]
  public static extern bool BitStream_SerializeDelta__SWIG_15(HandleRef jarg1, bool jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeDelta__SWIG_16")]
  public static extern bool BitStream_SerializeDelta__SWIG_16(HandleRef jarg1, bool jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeDelta__SWIG_17")]
  public static extern bool BitStream_SerializeDelta__SWIG_17(HandleRef jarg1, bool jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeCompressed__SWIG_1")]
  public static extern bool BitStream_SerializeCompressed__SWIG_1(HandleRef jarg1, bool jarg2, ref bool jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeCompressed__SWIG_2")]
  public static extern bool BitStream_SerializeCompressed__SWIG_2(HandleRef jarg1, bool jarg2, ref byte jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeCompressed__SWIG_3")]
  public static extern bool BitStream_SerializeCompressed__SWIG_3(HandleRef jarg1, bool jarg2, ref int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeCompressed__SWIG_4")]
  public static extern bool BitStream_SerializeCompressed__SWIG_4(HandleRef jarg1, bool jarg2, ref long jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeCompressed__SWIG_5")]
  public static extern bool BitStream_SerializeCompressed__SWIG_5(HandleRef jarg1, bool jarg2, ref float jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeCompressed__SWIG_6")]
  public static extern bool BitStream_SerializeCompressed__SWIG_6(HandleRef jarg1, bool jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeCompressed__SWIG_7")]
  public static extern bool BitStream_SerializeCompressed__SWIG_7(HandleRef jarg1, bool jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeCompressed__SWIG_8")]
  public static extern bool BitStream_SerializeCompressed__SWIG_8(HandleRef jarg1, bool jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeCompressedDelta__SWIG_2")]
  public static extern bool BitStream_SerializeCompressedDelta__SWIG_2(HandleRef jarg1, bool jarg2, ref bool jarg3, bool jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeCompressedDelta__SWIG_3")]
  public static extern bool BitStream_SerializeCompressedDelta__SWIG_3(HandleRef jarg1, bool jarg2, ref bool jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeCompressedDelta__SWIG_4")]
  public static extern bool BitStream_SerializeCompressedDelta__SWIG_4(HandleRef jarg1, bool jarg2, ref byte jarg3, byte jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeCompressedDelta__SWIG_5")]
  public static extern bool BitStream_SerializeCompressedDelta__SWIG_5(HandleRef jarg1, bool jarg2, ref byte jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeCompressedDelta__SWIG_6")]
  public static extern bool BitStream_SerializeCompressedDelta__SWIG_6(HandleRef jarg1, bool jarg2, ref int jarg3, int jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeCompressedDelta__SWIG_7")]
  public static extern bool BitStream_SerializeCompressedDelta__SWIG_7(HandleRef jarg1, bool jarg2, ref int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeCompressedDelta__SWIG_8")]
  public static extern bool BitStream_SerializeCompressedDelta__SWIG_8(HandleRef jarg1, bool jarg2, ref long jarg3, long jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeCompressedDelta__SWIG_9")]
  public static extern bool BitStream_SerializeCompressedDelta__SWIG_9(HandleRef jarg1, bool jarg2, ref long jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeCompressedDelta__SWIG_10")]
  public static extern bool BitStream_SerializeCompressedDelta__SWIG_10(HandleRef jarg1, bool jarg2, ref float jarg3, float jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeCompressedDelta__SWIG_11")]
  public static extern bool BitStream_SerializeCompressedDelta__SWIG_11(HandleRef jarg1, bool jarg2, ref float jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeCompressedDelta__SWIG_12")]
  public static extern bool BitStream_SerializeCompressedDelta__SWIG_12(HandleRef jarg1, bool jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeCompressedDelta__SWIG_13")]
  public static extern bool BitStream_SerializeCompressedDelta__SWIG_13(HandleRef jarg1, bool jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeCompressedDelta__SWIG_14")]
  public static extern bool BitStream_SerializeCompressedDelta__SWIG_14(HandleRef jarg1, bool jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeCompressedDelta__SWIG_15")]
  public static extern bool BitStream_SerializeCompressedDelta__SWIG_15(HandleRef jarg1, bool jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeCompressedDelta__SWIG_16")]
  public static extern bool BitStream_SerializeCompressedDelta__SWIG_16(HandleRef jarg1, bool jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_SerializeCompressedDelta__SWIG_17")]
  public static extern bool BitStream_SerializeCompressedDelta__SWIG_17(HandleRef jarg1, bool jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_Write__SWIG_9")]
  public static extern void BitStream_Write__SWIG_9(HandleRef jarg1, bool jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_Write__SWIG_10")]
  public static extern void BitStream_Write__SWIG_10(HandleRef jarg1, byte jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_Write__SWIG_11")]
  public static extern void BitStream_Write__SWIG_11(HandleRef jarg1, char jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_Write__SWIG_12")]
  public static extern void BitStream_Write__SWIG_12(HandleRef jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_Write__SWIG_13")]
  public static extern void BitStream_Write__SWIG_13(HandleRef jarg1, long jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_Write__SWIG_14")]
  public static extern void BitStream_Write__SWIG_14(HandleRef jarg1, float jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_Write__SWIG_15")]
  public static extern void BitStream_Write__SWIG_15(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_Write__SWIG_16")]
  public static extern void BitStream_Write__SWIG_16(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_Write__SWIG_17")]
  public static extern void BitStream_Write__SWIG_17(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_2")]
  public static extern void BitStream_WriteDelta__SWIG_2(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_3")]
  public static extern void BitStream_WriteDelta__SWIG_3(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_4")]
  public static extern void BitStream_WriteDelta__SWIG_4(HandleRef jarg1, bool jarg2, bool jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_5")]
  public static extern void BitStream_WriteDelta__SWIG_5(HandleRef jarg1, bool jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_6")]
  public static extern void BitStream_WriteDelta__SWIG_6(HandleRef jarg1, byte jarg2, byte jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_7")]
  public static extern void BitStream_WriteDelta__SWIG_7(HandleRef jarg1, byte jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_8")]
  public static extern void BitStream_WriteDelta__SWIG_8(HandleRef jarg1, char jarg2, char jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_9")]
  public static extern void BitStream_WriteDelta__SWIG_9(HandleRef jarg1, char jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_10")]
  public static extern void BitStream_WriteDelta__SWIG_10(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_11")]
  public static extern void BitStream_WriteDelta__SWIG_11(HandleRef jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_12")]
  public static extern void BitStream_WriteDelta__SWIG_12(HandleRef jarg1, long jarg2, long jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_13")]
  public static extern void BitStream_WriteDelta__SWIG_13(HandleRef jarg1, long jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_14")]
  public static extern void BitStream_WriteDelta__SWIG_14(HandleRef jarg1, float jarg2, float jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_15")]
  public static extern void BitStream_WriteDelta__SWIG_15(HandleRef jarg1, float jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_16")]
  public static extern void BitStream_WriteDelta__SWIG_16(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_17")]
  public static extern void BitStream_WriteDelta__SWIG_17(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_18")]
  public static extern void BitStream_WriteDelta__SWIG_18(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_19")]
  public static extern void BitStream_WriteDelta__SWIG_19(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_20")]
  public static extern void BitStream_WriteDelta__SWIG_20(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_21")]
  public static extern void BitStream_WriteDelta__SWIG_21(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteCompressed__SWIG_6")]
  public static extern void BitStream_WriteCompressed__SWIG_6(HandleRef jarg1, bool jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteCompressed__SWIG_7")]
  public static extern void BitStream_WriteCompressed__SWIG_7(HandleRef jarg1, byte jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteCompressed__SWIG_8")]
  public static extern void BitStream_WriteCompressed__SWIG_8(HandleRef jarg1, char jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteCompressed__SWIG_9")]
  public static extern void BitStream_WriteCompressed__SWIG_9(HandleRef jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteCompressed__SWIG_10")]
  public static extern void BitStream_WriteCompressed__SWIG_10(HandleRef jarg1, long jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteCompressed__SWIG_11")]
  public static extern void BitStream_WriteCompressed__SWIG_11(HandleRef jarg1, float jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteCompressed__SWIG_12")]
  public static extern void BitStream_WriteCompressed__SWIG_12(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteCompressed__SWIG_13")]
  public static extern void BitStream_WriteCompressed__SWIG_13(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteCompressed__SWIG_14")]
  public static extern void BitStream_WriteCompressed__SWIG_14(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_2")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_2(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_3")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_3(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_4")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_4(HandleRef jarg1, bool jarg2, bool jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_5")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_5(HandleRef jarg1, bool jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_6")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_6(HandleRef jarg1, byte jarg2, byte jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_7")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_7(HandleRef jarg1, byte jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_8")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_8(HandleRef jarg1, char jarg2, char jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_9")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_9(HandleRef jarg1, char jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_10")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_10(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_11")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_11(HandleRef jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_12")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_12(HandleRef jarg1, long jarg2, long jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_13")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_13(HandleRef jarg1, long jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_14")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_14(HandleRef jarg1, float jarg2, float jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_15")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_15(HandleRef jarg1, float jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_16")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_16(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_17")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_17(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_18")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_18(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_19")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_19(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_20")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_20(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_21")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_21(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_Read__SWIG_3")]
  public static extern bool BitStream_Read__SWIG_3(HandleRef jarg1, out bool jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_Read__SWIG_4")]
  public static extern bool BitStream_Read__SWIG_4(HandleRef jarg1, out byte jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_Read__SWIG_5")]
  public static extern bool BitStream_Read__SWIG_5(HandleRef jarg1, out int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_Read__SWIG_6")]
  public static extern bool BitStream_Read__SWIG_6(HandleRef jarg1, out long jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_Read__SWIG_7")]
  public static extern bool BitStream_Read__SWIG_7(HandleRef jarg1, out float jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_Read__SWIG_8")]
  public static extern bool BitStream_Read__SWIG_8(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_Read__SWIG_9")]
  public static extern bool BitStream_Read__SWIG_9(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_Read__SWIG_10")]
  public static extern bool BitStream_Read__SWIG_10(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ReadDelta__SWIG_1")]
  public static extern bool BitStream_ReadDelta__SWIG_1(HandleRef jarg1, out bool jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ReadDelta__SWIG_2")]
  public static extern bool BitStream_ReadDelta__SWIG_2(HandleRef jarg1, out byte jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ReadDelta__SWIG_3")]
  public static extern bool BitStream_ReadDelta__SWIG_3(HandleRef jarg1, out int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ReadDelta__SWIG_4")]
  public static extern bool BitStream_ReadDelta__SWIG_4(HandleRef jarg1, out long jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ReadDelta__SWIG_5")]
  public static extern bool BitStream_ReadDelta__SWIG_5(HandleRef jarg1, out float jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ReadDelta__SWIG_6")]
  public static extern bool BitStream_ReadDelta__SWIG_6(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ReadDelta__SWIG_7")]
  public static extern bool BitStream_ReadDelta__SWIG_7(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ReadDelta__SWIG_8")]
  public static extern bool BitStream_ReadDelta__SWIG_8(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ReadCompressed__SWIG_1")]
  public static extern bool BitStream_ReadCompressed__SWIG_1(HandleRef jarg1, out bool jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ReadCompressed__SWIG_2")]
  public static extern bool BitStream_ReadCompressed__SWIG_2(HandleRef jarg1, out byte jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ReadCompressed__SWIG_3")]
  public static extern bool BitStream_ReadCompressed__SWIG_3(HandleRef jarg1, out int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ReadCompressed__SWIG_4")]
  public static extern bool BitStream_ReadCompressed__SWIG_4(HandleRef jarg1, out long jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ReadCompressed__SWIG_5")]
  public static extern bool BitStream_ReadCompressed__SWIG_5(HandleRef jarg1, out float jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ReadCompressed__SWIG_6")]
  public static extern bool BitStream_ReadCompressed__SWIG_6(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ReadCompressed__SWIG_7")]
  public static extern bool BitStream_ReadCompressed__SWIG_7(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ReadCompressed__SWIG_8")]
  public static extern bool BitStream_ReadCompressed__SWIG_8(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ReadCompressedDelta__SWIG_1")]
  public static extern bool BitStream_ReadCompressedDelta__SWIG_1(HandleRef jarg1, out bool jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ReadCompressedDelta__SWIG_2")]
  public static extern bool BitStream_ReadCompressedDelta__SWIG_2(HandleRef jarg1, out byte jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ReadCompressedDelta__SWIG_3")]
  public static extern bool BitStream_ReadCompressedDelta__SWIG_3(HandleRef jarg1, out int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ReadCompressedDelta__SWIG_4")]
  public static extern bool BitStream_ReadCompressedDelta__SWIG_4(HandleRef jarg1, out long jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ReadCompressedDelta__SWIG_5")]
  public static extern bool BitStream_ReadCompressedDelta__SWIG_5(HandleRef jarg1, out float jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ReadCompressedDelta__SWIG_6")]
  public static extern bool BitStream_ReadCompressedDelta__SWIG_6(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ReadCompressedDelta__SWIG_7")]
  public static extern bool BitStream_ReadCompressedDelta__SWIG_7(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_BitStream_ReadCompressedDelta__SWIG_8")]
  public static extern bool BitStream_ReadCompressedDelta__SWIG_8(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_MAX_UNSIGNED_LONG_get")]
  public static extern uint MAX_UNSIGNED_LONG_get();

  [DllImport("RakNet", EntryPoint="CSharp_new_ByteQueue")]
  public static extern IntPtr new_ByteQueue();

  [DllImport("RakNet", EntryPoint="CSharp_delete_ByteQueue")]
  public static extern void delete_ByteQueue(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_ByteQueue_GetBytesWritten")]
  public static extern uint ByteQueue_GetBytesWritten(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_ByteQueue_IncrementReadOffset")]
  public static extern void ByteQueue_IncrementReadOffset(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_ByteQueue_DecrementReadOffset")]
  public static extern void ByteQueue_DecrementReadOffset(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_ByteQueue_Clear")]
  public static extern void ByteQueue_Clear(HandleRef jarg1, string jarg2, uint jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_ByteQueue_Print")]
  public static extern void ByteQueue_Print(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_ByteQueue_WriteBytes")]
  public static extern void ByteQueue_WriteBytes(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, uint jarg3, string jarg4, uint jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_ByteQueue_ReadBytes")]
  public static extern bool ByteQueue_ReadBytes(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, uint jarg3, bool jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_ByteQueue_PeekContiguousBytesHelper")]
  public static extern IntPtr ByteQueue_PeekContiguousBytesHelper(HandleRef jarg1, out uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_new_RakNetSocket")]
  public static extern IntPtr new_RakNetSocket();

  [DllImport("RakNet", EntryPoint="CSharp_delete_RakNetSocket")]
  public static extern void delete_RakNetSocket(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetSocket_s_set")]
  public static extern void RakNetSocket_s_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetSocket_s_get")]
  public static extern uint RakNetSocket_s_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetSocket_userConnectionSocketIndex_set")]
  public static extern void RakNetSocket_userConnectionSocketIndex_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetSocket_userConnectionSocketIndex_get")]
  public static extern uint RakNetSocket_userConnectionSocketIndex_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetSocket_boundAddress_set")]
  public static extern void RakNetSocket_boundAddress_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetSocket_boundAddress_get")]
  public static extern IntPtr RakNetSocket_boundAddress_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetSocket_remotePortRakNetWasStartedOn_PS3_set")]
  public static extern void RakNetSocket_remotePortRakNetWasStartedOn_PS3_set(HandleRef jarg1, ushort jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetSocket_remotePortRakNetWasStartedOn_PS3_get")]
  public static extern ushort RakNetSocket_remotePortRakNetWasStartedOn_PS3_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetStatistics_valueOverLastSecond_set")]
  public static extern void RakNetStatistics_valueOverLastSecond_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetStatistics_valueOverLastSecond_get")]
  public static extern IntPtr RakNetStatistics_valueOverLastSecond_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetStatistics_runningTotal_set")]
  public static extern void RakNetStatistics_runningTotal_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetStatistics_runningTotal_get")]
  public static extern IntPtr RakNetStatistics_runningTotal_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetStatistics_connectionStartTime_set")]
  public static extern void RakNetStatistics_connectionStartTime_set(HandleRef jarg1, ulong jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetStatistics_connectionStartTime_get")]
  public static extern ulong RakNetStatistics_connectionStartTime_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetStatistics_isLimitedByCongestionControl_set")]
  public static extern void RakNetStatistics_isLimitedByCongestionControl_set(HandleRef jarg1, bool jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetStatistics_isLimitedByCongestionControl_get")]
  public static extern bool RakNetStatistics_isLimitedByCongestionControl_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetStatistics_BPSLimitByCongestionControl_set")]
  public static extern void RakNetStatistics_BPSLimitByCongestionControl_set(HandleRef jarg1, ulong jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetStatistics_BPSLimitByCongestionControl_get")]
  public static extern ulong RakNetStatistics_BPSLimitByCongestionControl_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetStatistics_isLimitedByOutgoingBandwidthLimit_set")]
  public static extern void RakNetStatistics_isLimitedByOutgoingBandwidthLimit_set(HandleRef jarg1, bool jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetStatistics_isLimitedByOutgoingBandwidthLimit_get")]
  public static extern bool RakNetStatistics_isLimitedByOutgoingBandwidthLimit_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetStatistics_BPSLimitByOutgoingBandwidthLimit_set")]
  public static extern void RakNetStatistics_BPSLimitByOutgoingBandwidthLimit_set(HandleRef jarg1, ulong jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetStatistics_BPSLimitByOutgoingBandwidthLimit_get")]
  public static extern ulong RakNetStatistics_BPSLimitByOutgoingBandwidthLimit_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetStatistics_messageInSendBuffer_set")]
  public static extern void RakNetStatistics_messageInSendBuffer_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetStatistics_messageInSendBuffer_get")]
  public static extern IntPtr RakNetStatistics_messageInSendBuffer_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetStatistics_bytesInSendBuffer_set")]
  public static extern void RakNetStatistics_bytesInSendBuffer_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetStatistics_bytesInSendBuffer_get")]
  public static extern IntPtr RakNetStatistics_bytesInSendBuffer_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetStatistics_messagesInResendBuffer_set")]
  public static extern void RakNetStatistics_messagesInResendBuffer_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetStatistics_messagesInResendBuffer_get")]
  public static extern uint RakNetStatistics_messagesInResendBuffer_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetStatistics_bytesInResendBuffer_set")]
  public static extern void RakNetStatistics_bytesInResendBuffer_set(HandleRef jarg1, ulong jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetStatistics_bytesInResendBuffer_get")]
  public static extern ulong RakNetStatistics_bytesInResendBuffer_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetStatistics_packetlossLastSecond_set")]
  public static extern void RakNetStatistics_packetlossLastSecond_set(HandleRef jarg1, float jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetStatistics_packetlossLastSecond_get")]
  public static extern float RakNetStatistics_packetlossLastSecond_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetStatistics_packetlossTotal_set")]
  public static extern void RakNetStatistics_packetlossTotal_set(HandleRef jarg1, float jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetStatistics_packetlossTotal_get")]
  public static extern float RakNetStatistics_packetlossTotal_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetStatistics_SetBytesInSendBuffer")]
  public static extern void RakNetStatistics_SetBytesInSendBuffer(HandleRef jarg1, [In, MarshalAs(UnmanagedType.LPArray)]double[] jarg2, int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetStatistics_SetMessageInSendBuffer")]
  public static extern void RakNetStatistics_SetMessageInSendBuffer(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]uint[] jarg2, int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetStatistics_SetRunningTotal")]
  public static extern void RakNetStatistics_SetRunningTotal(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]ulong[] jarg2, int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetStatistics_SetValueOverLastSecond")]
  public static extern void RakNetStatistics_SetValueOverLastSecond(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]ulong[] jarg2, int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_new_RakNetStatistics")]
  public static extern IntPtr new_RakNetStatistics();

  [DllImport("RakNet", EntryPoint="CSharp_delete_RakNetStatistics")]
  public static extern void delete_RakNetStatistics(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_NetworkIDObject")]
  public static extern IntPtr new_NetworkIDObject();

  [DllImport("RakNet", EntryPoint="CSharp_delete_NetworkIDObject")]
  public static extern void delete_NetworkIDObject(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_NetworkIDObject_SetNetworkIDManagerOrig")]
  public static extern void NetworkIDObject_SetNetworkIDManagerOrig(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_NetworkIDObject_SetNetworkIDManagerOrigSwigExplicitNetworkIDObject")]
  public static extern void NetworkIDObject_SetNetworkIDManagerOrigSwigExplicitNetworkIDObject(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_NetworkIDObject_GetNetworkIDManager")]
  public static extern IntPtr NetworkIDObject_GetNetworkIDManager(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_NetworkIDObject_GetNetworkIDManagerSwigExplicitNetworkIDObject")]
  public static extern IntPtr NetworkIDObject_GetNetworkIDManagerSwigExplicitNetworkIDObject(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_NetworkIDObject_GetNetworkID")]
  public static extern ulong NetworkIDObject_GetNetworkID(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_NetworkIDObject_GetNetworkIDSwigExplicitNetworkIDObject")]
  public static extern ulong NetworkIDObject_GetNetworkIDSwigExplicitNetworkIDObject(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_NetworkIDObject_SetNetworkID")]
  public static extern void NetworkIDObject_SetNetworkID(HandleRef jarg1, ulong jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_NetworkIDObject_SetNetworkIDSwigExplicitNetworkIDObject")]
  public static extern void NetworkIDObject_SetNetworkIDSwigExplicitNetworkIDObject(HandleRef jarg1, ulong jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_NetworkIDObject_director_connect")]
  public static extern void NetworkIDObject_director_connect(HandleRef jarg1, NetworkIDObject.SwigDelegateNetworkIDObject_0 delegate0, NetworkIDObject.SwigDelegateNetworkIDObject_1 delegate1, NetworkIDObject.SwigDelegateNetworkIDObject_2 delegate2, NetworkIDObject.SwigDelegateNetworkIDObject_3 delegate3);

  [DllImport("RakNet", EntryPoint="CSharp_NETWORK_ID_MANAGER_HASH_LENGTH_get")]
  public static extern int NETWORK_ID_MANAGER_HASH_LENGTH_get();

  [DllImport("RakNet", EntryPoint="CSharp_NetworkIDManager_GetInstance")]
  public static extern IntPtr NetworkIDManager_GetInstance();

  [DllImport("RakNet", EntryPoint="CSharp_NetworkIDManager_DestroyInstance")]
  public static extern void NetworkIDManager_DestroyInstance(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_NetworkIDManager")]
  public static extern IntPtr new_NetworkIDManager();

  [DllImport("RakNet", EntryPoint="CSharp_delete_NetworkIDManager")]
  public static extern void delete_NetworkIDManager(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_NetworkIDManager_GET_BASE_OBJECT_FROM_IDORIG")]
  public static extern IntPtr NetworkIDManager_GET_BASE_OBJECT_FROM_IDORIG(HandleRef jarg1, ulong jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_new_PluginInterface2")]
  public static extern IntPtr new_PluginInterface2();

  [DllImport("RakNet", EntryPoint="CSharp_delete_PluginInterface2")]
  public static extern void delete_PluginInterface2(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_PluginInterface2_GetRakPeerInterface")]
  public static extern IntPtr PluginInterface2_GetRakPeerInterface(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_GetInstance")]
  public static extern IntPtr RakPeerInterface_GetInstance();

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_DestroyInstance")]
  public static extern void RakPeerInterface_DestroyInstance(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_delete_RakPeerInterface")]
  public static extern void delete_RakPeerInterface(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_Startup__SWIG_0")]
  public static extern int RakPeerInterface_Startup__SWIG_0(HandleRef jarg1, ushort jarg2, HandleRef jarg3, uint jarg4, int jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_Startup__SWIG_1")]
  public static extern int RakPeerInterface_Startup__SWIG_1(HandleRef jarg1, ushort jarg2, HandleRef jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_InitializeSecurity__SWIG_0")]
  public static extern bool RakPeerInterface_InitializeSecurity__SWIG_0(HandleRef jarg1, string jarg2, string jarg3, bool jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_InitializeSecurity__SWIG_1")]
  public static extern bool RakPeerInterface_InitializeSecurity__SWIG_1(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_DisableSecurity")]
  public static extern void RakPeerInterface_DisableSecurity(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_AddToSecurityExceptionList")]
  public static extern void RakPeerInterface_AddToSecurityExceptionList(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_RemoveFromSecurityExceptionList")]
  public static extern void RakPeerInterface_RemoveFromSecurityExceptionList(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_IsInSecurityExceptionList")]
  public static extern bool RakPeerInterface_IsInSecurityExceptionList(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_SetMaximumIncomingConnections")]
  public static extern void RakPeerInterface_SetMaximumIncomingConnections(HandleRef jarg1, ushort jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_GetMaximumIncomingConnections")]
  public static extern ushort RakPeerInterface_GetMaximumIncomingConnections(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_NumberOfConnections")]
  public static extern ushort RakPeerInterface_NumberOfConnections(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_SetIncomingPassword__SWIG_0")]
  public static extern void RakPeerInterface_SetIncomingPassword__SWIG_0(HandleRef jarg1, string jarg2, int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_Connect__SWIG_0")]
  public static extern int RakPeerInterface_Connect__SWIG_0(HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, int jarg5, HandleRef jarg6, uint jarg7, uint jarg8, uint jarg9, uint jarg10);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_Connect__SWIG_1")]
  public static extern int RakPeerInterface_Connect__SWIG_1(HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, int jarg5, HandleRef jarg6, uint jarg7, uint jarg8, uint jarg9);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_Connect__SWIG_2")]
  public static extern int RakPeerInterface_Connect__SWIG_2(HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, int jarg5, HandleRef jarg6, uint jarg7, uint jarg8);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_Connect__SWIG_3")]
  public static extern int RakPeerInterface_Connect__SWIG_3(HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, int jarg5, HandleRef jarg6, uint jarg7);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_Connect__SWIG_4")]
  public static extern int RakPeerInterface_Connect__SWIG_4(HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, int jarg5, HandleRef jarg6);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_Connect__SWIG_5")]
  public static extern int RakPeerInterface_Connect__SWIG_5(HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, int jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_Shutdown__SWIG_0")]
  public static extern void RakPeerInterface_Shutdown__SWIG_0(HandleRef jarg1, uint jarg2, byte jarg3, int jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_Shutdown__SWIG_1")]
  public static extern void RakPeerInterface_Shutdown__SWIG_1(HandleRef jarg1, uint jarg2, byte jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_Shutdown__SWIG_2")]
  public static extern void RakPeerInterface_Shutdown__SWIG_2(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_IsActive")]
  public static extern bool RakPeerInterface_IsActive(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_GetNextSendReceipt")]
  public static extern uint RakPeerInterface_GetNextSendReceipt(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_IncrementNextSendReceipt")]
  public static extern uint RakPeerInterface_IncrementNextSendReceipt(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_Send__SWIG_0")]
  public static extern uint RakPeerInterface_Send__SWIG_0(HandleRef jarg1, string jarg2, int jarg3, int jarg4, int jarg5, char jarg6, HandleRef jarg7, bool jarg8, uint jarg9);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_Send__SWIG_1")]
  public static extern uint RakPeerInterface_Send__SWIG_1(HandleRef jarg1, string jarg2, int jarg3, int jarg4, int jarg5, char jarg6, HandleRef jarg7, bool jarg8);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_SendLoopback__SWIG_0")]
  public static extern void RakPeerInterface_SendLoopback__SWIG_0(HandleRef jarg1, string jarg2, int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_Send__SWIG_2")]
  public static extern uint RakPeerInterface_Send__SWIG_2(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, char jarg5, HandleRef jarg6, bool jarg7, uint jarg8);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_Send__SWIG_3")]
  public static extern uint RakPeerInterface_Send__SWIG_3(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, char jarg5, HandleRef jarg6, bool jarg7);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_Receive")]
  public static extern IntPtr RakPeerInterface_Receive(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_DeallocatePacket")]
  public static extern void RakPeerInterface_DeallocatePacket(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_GetMaximumNumberOfPeers")]
  public static extern ushort RakPeerInterface_GetMaximumNumberOfPeers(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_CloseConnection__SWIG_0")]
  public static extern void RakPeerInterface_CloseConnection__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3, byte jarg4, int jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_CloseConnection__SWIG_1")]
  public static extern void RakPeerInterface_CloseConnection__SWIG_1(HandleRef jarg1, HandleRef jarg2, bool jarg3, byte jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_CloseConnection__SWIG_2")]
  public static extern void RakPeerInterface_CloseConnection__SWIG_2(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_GetConnectionState")]
  public static extern int RakPeerInterface_GetConnectionState(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_CancelConnectionAttempt")]
  public static extern void RakPeerInterface_CancelConnectionAttempt(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_GetIndexFromSystemAddress")]
  public static extern int RakPeerInterface_GetIndexFromSystemAddress(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_GetSystemAddressFromIndex")]
  public static extern IntPtr RakPeerInterface_GetSystemAddressFromIndex(HandleRef jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_GetGUIDFromIndex")]
  public static extern IntPtr RakPeerInterface_GetGUIDFromIndex(HandleRef jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_GetSystemList")]
  public static extern void RakPeerInterface_GetSystemList(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_AddToBanList__SWIG_0")]
  public static extern void RakPeerInterface_AddToBanList__SWIG_0(HandleRef jarg1, string jarg2, uint jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_AddToBanList__SWIG_1")]
  public static extern void RakPeerInterface_AddToBanList__SWIG_1(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_RemoveFromBanList")]
  public static extern void RakPeerInterface_RemoveFromBanList(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_ClearBanList")]
  public static extern void RakPeerInterface_ClearBanList(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_IsBanned")]
  public static extern bool RakPeerInterface_IsBanned(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_SetLimitIPConnectionFrequency")]
  public static extern void RakPeerInterface_SetLimitIPConnectionFrequency(HandleRef jarg1, bool jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_Ping__SWIG_0")]
  public static extern void RakPeerInterface_Ping__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_Ping__SWIG_1")]
  public static extern bool RakPeerInterface_Ping__SWIG_1(HandleRef jarg1, string jarg2, ushort jarg3, bool jarg4, uint jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_Ping__SWIG_2")]
  public static extern bool RakPeerInterface_Ping__SWIG_2(HandleRef jarg1, string jarg2, ushort jarg3, bool jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_GetAveragePing")]
  public static extern int RakPeerInterface_GetAveragePing(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_GetLastPing")]
  public static extern int RakPeerInterface_GetLastPing(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_GetLowestPing")]
  public static extern int RakPeerInterface_GetLowestPing(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_SetOccasionalPing")]
  public static extern void RakPeerInterface_SetOccasionalPing(HandleRef jarg1, bool jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_SetOfflinePingResponse__SWIG_0")]
  public static extern void RakPeerInterface_SetOfflinePingResponse__SWIG_0(HandleRef jarg1, string jarg2, uint jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_GetInternalID__SWIG_0")]
  public static extern IntPtr RakPeerInterface_GetInternalID__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_GetInternalID__SWIG_1")]
  public static extern IntPtr RakPeerInterface_GetInternalID__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_GetInternalID__SWIG_2")]
  public static extern IntPtr RakPeerInterface_GetInternalID__SWIG_2(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_GetExternalID")]
  public static extern IntPtr RakPeerInterface_GetExternalID(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_GetMyGUID")]
  public static extern IntPtr RakPeerInterface_GetMyGUID(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_Get64BitUniqueRandomNumber")]
  public static extern ulong RakPeerInterface_Get64BitUniqueRandomNumber();

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_GetGuidFromSystemAddress")]
  public static extern IntPtr RakPeerInterface_GetGuidFromSystemAddress(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_GetSystemAddressFromGuid")]
  public static extern IntPtr RakPeerInterface_GetSystemAddressFromGuid(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_GetClientPublicKeyFromSystemAddress")]
  public static extern bool RakPeerInterface_GetClientPublicKeyFromSystemAddress(HandleRef jarg1, HandleRef jarg2, string jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_SetTimeoutTime")]
  public static extern void RakPeerInterface_SetTimeoutTime(HandleRef jarg1, uint jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_GetTimeoutTime")]
  public static extern uint RakPeerInterface_GetTimeoutTime(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_GetMTUSize")]
  public static extern int RakPeerInterface_GetMTUSize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_GetNumberOfAddresses")]
  public static extern uint RakPeerInterface_GetNumberOfAddresses(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_GetLocalIP")]
  public static extern string RakPeerInterface_GetLocalIP(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_IsLocalIP")]
  public static extern bool RakPeerInterface_IsLocalIP(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_AllowConnectionResponseIPMigration")]
  public static extern void RakPeerInterface_AllowConnectionResponseIPMigration(HandleRef jarg1, bool jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_AdvertiseSystem__SWIG_0")]
  public static extern bool RakPeerInterface_AdvertiseSystem__SWIG_0(HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, int jarg5, uint jarg6);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_AdvertiseSystem__SWIG_1")]
  public static extern bool RakPeerInterface_AdvertiseSystem__SWIG_1(HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, int jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_SetSplitMessageProgressInterval")]
  public static extern void RakPeerInterface_SetSplitMessageProgressInterval(HandleRef jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_GetSplitMessageProgressInterval")]
  public static extern int RakPeerInterface_GetSplitMessageProgressInterval(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_SetUnreliableTimeout")]
  public static extern void RakPeerInterface_SetUnreliableTimeout(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_SendTTL__SWIG_0")]
  public static extern void RakPeerInterface_SendTTL__SWIG_0(HandleRef jarg1, string jarg2, ushort jarg3, int jarg4, uint jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_SendTTL__SWIG_1")]
  public static extern void RakPeerInterface_SendTTL__SWIG_1(HandleRef jarg1, string jarg2, ushort jarg3, int jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_AttachPlugin")]
  public static extern void RakPeerInterface_AttachPlugin(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_DetachPlugin")]
  public static extern void RakPeerInterface_DetachPlugin(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_PushBackPacket")]
  public static extern void RakPeerInterface_PushBackPacket(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_ChangeSystemAddress")]
  public static extern void RakPeerInterface_ChangeSystemAddress(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_AllocatePacket")]
  public static extern IntPtr RakPeerInterface_AllocatePacket(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_WriteOutOfBandHeader")]
  public static extern void RakPeerInterface_WriteOutOfBandHeader(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_ApplyNetworkSimulator")]
  public static extern void RakPeerInterface_ApplyNetworkSimulator(HandleRef jarg1, float jarg2, ushort jarg3, ushort jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_SetPerConnectionOutgoingBandwidthLimit")]
  public static extern void RakPeerInterface_SetPerConnectionOutgoingBandwidthLimit(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_IsNetworkSimulatorActive")]
  public static extern bool RakPeerInterface_IsNetworkSimulatorActive(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_GetStatistics__SWIG_0")]
  public static extern IntPtr RakPeerInterface_GetStatistics__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_GetStatistics__SWIG_1")]
  public static extern IntPtr RakPeerInterface_GetStatistics__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_GetStatistics__SWIG_2")]
  public static extern bool RakPeerInterface_GetStatistics__SWIG_2(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_GetReceiveBufferSize")]
  public static extern uint RakPeerInterface_GetReceiveBufferSize(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_SendOutOfBand__SWIG_0")]
  public static extern bool RakPeerInterface_SendOutOfBand__SWIG_0(HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, uint jarg5, uint jarg6);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_SendOutOfBand__SWIG_1")]
  public static extern bool RakPeerInterface_SendOutOfBand__SWIG_1(HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, uint jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_Send__SWIG_4")]
  public static extern uint RakPeerInterface_Send__SWIG_4(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, int jarg3, int jarg4, int jarg5, char jarg6, HandleRef jarg7, bool jarg8);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_SendLoopback__SWIG_1")]
  public static extern void RakPeerInterface_SendLoopback__SWIG_1(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_SetOfflinePingResponse__SWIG_1")]
  public static extern void RakPeerInterface_SetOfflinePingResponse__SWIG_1(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, uint jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_AdvertiseSystem__SWIG_2")]
  public static extern bool RakPeerInterface_AdvertiseSystem__SWIG_2(HandleRef jarg1, string jarg2, ushort jarg3, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg4, int jarg5, uint jarg6);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_AdvertiseSystem__SWIG_3")]
  public static extern bool RakPeerInterface_AdvertiseSystem__SWIG_3(HandleRef jarg1, string jarg2, ushort jarg3, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg4, int jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_CSharpGetIncomingPasswordHelper")]
  public static extern string RakPeerInterface_CSharpGetIncomingPasswordHelper(HandleRef jarg1, string jarg2, ref int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_SetIncomingPassword__SWIG_1")]
  public static extern void RakPeerInterface_SetIncomingPassword__SWIG_1(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_GetIncomingPassword")]
  public static extern void RakPeerInterface_GetIncomingPassword(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, ref int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_CSharpGetOfflinePingResponseHelper")]
  public static extern void RakPeerInterface_CSharpGetOfflinePingResponseHelper(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, out uint jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerInterface_GetConnectionList")]
  public static extern bool RakPeerInterface_GetConnectionList(HandleRef jarg1, HandleRef jarg2, ref ushort jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RemoteSystemIndex_index_set")]
  public static extern void RemoteSystemIndex_index_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RemoteSystemIndex_index_get")]
  public static extern uint RemoteSystemIndex_index_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RemoteSystemIndex_next_set")]
  public static extern void RemoteSystemIndex_next_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RemoteSystemIndex_next_get")]
  public static extern IntPtr RemoteSystemIndex_next_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_RemoteSystemIndex")]
  public static extern IntPtr new_RemoteSystemIndex();

  [DllImport("RakNet", EntryPoint="CSharp_delete_RemoteSystemIndex")]
  public static extern void delete_RemoteSystemIndex(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_RakPeer")]
  public static extern IntPtr new_RakPeer();

  [DllImport("RakNet", EntryPoint="CSharp_delete_RakPeer")]
  public static extern void delete_RakPeer(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_Startup__SWIG_0")]
  public static extern int RakPeer_Startup__SWIG_0(HandleRef jarg1, ushort jarg2, HandleRef jarg3, uint jarg4, int jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_Startup__SWIG_1")]
  public static extern int RakPeer_Startup__SWIG_1(HandleRef jarg1, ushort jarg2, HandleRef jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_InitializeSecurity__SWIG_0")]
  public static extern bool RakPeer_InitializeSecurity__SWIG_0(HandleRef jarg1, string jarg2, string jarg3, bool jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_InitializeSecurity__SWIG_1")]
  public static extern bool RakPeer_InitializeSecurity__SWIG_1(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_DisableSecurity")]
  public static extern void RakPeer_DisableSecurity(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_AddToSecurityExceptionList")]
  public static extern void RakPeer_AddToSecurityExceptionList(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_RemoveFromSecurityExceptionList")]
  public static extern void RakPeer_RemoveFromSecurityExceptionList(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_IsInSecurityExceptionList")]
  public static extern bool RakPeer_IsInSecurityExceptionList(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_SetMaximumIncomingConnections")]
  public static extern void RakPeer_SetMaximumIncomingConnections(HandleRef jarg1, ushort jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_GetMaximumIncomingConnections")]
  public static extern ushort RakPeer_GetMaximumIncomingConnections(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_NumberOfConnections")]
  public static extern ushort RakPeer_NumberOfConnections(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_SetIncomingPassword__SWIG_0")]
  public static extern void RakPeer_SetIncomingPassword__SWIG_0(HandleRef jarg1, string jarg2, int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_Connect__SWIG_0")]
  public static extern int RakPeer_Connect__SWIG_0(HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, int jarg5, HandleRef jarg6, uint jarg7, uint jarg8, uint jarg9, uint jarg10);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_Connect__SWIG_1")]
  public static extern int RakPeer_Connect__SWIG_1(HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, int jarg5, HandleRef jarg6, uint jarg7, uint jarg8, uint jarg9);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_Connect__SWIG_2")]
  public static extern int RakPeer_Connect__SWIG_2(HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, int jarg5, HandleRef jarg6, uint jarg7, uint jarg8);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_Connect__SWIG_3")]
  public static extern int RakPeer_Connect__SWIG_3(HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, int jarg5, HandleRef jarg6, uint jarg7);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_Connect__SWIG_4")]
  public static extern int RakPeer_Connect__SWIG_4(HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, int jarg5, HandleRef jarg6);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_Connect__SWIG_5")]
  public static extern int RakPeer_Connect__SWIG_5(HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, int jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_Shutdown__SWIG_0")]
  public static extern void RakPeer_Shutdown__SWIG_0(HandleRef jarg1, uint jarg2, byte jarg3, int jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_Shutdown__SWIG_1")]
  public static extern void RakPeer_Shutdown__SWIG_1(HandleRef jarg1, uint jarg2, byte jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_Shutdown__SWIG_2")]
  public static extern void RakPeer_Shutdown__SWIG_2(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_IsActive")]
  public static extern bool RakPeer_IsActive(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_GetNextSendReceipt")]
  public static extern uint RakPeer_GetNextSendReceipt(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_IncrementNextSendReceipt")]
  public static extern uint RakPeer_IncrementNextSendReceipt(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_Send__SWIG_0")]
  public static extern uint RakPeer_Send__SWIG_0(HandleRef jarg1, string jarg2, int jarg3, int jarg4, int jarg5, char jarg6, HandleRef jarg7, bool jarg8, uint jarg9);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_Send__SWIG_1")]
  public static extern uint RakPeer_Send__SWIG_1(HandleRef jarg1, string jarg2, int jarg3, int jarg4, int jarg5, char jarg6, HandleRef jarg7, bool jarg8);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_SendLoopback__SWIG_0")]
  public static extern void RakPeer_SendLoopback__SWIG_0(HandleRef jarg1, string jarg2, int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_Send__SWIG_2")]
  public static extern uint RakPeer_Send__SWIG_2(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, char jarg5, HandleRef jarg6, bool jarg7, uint jarg8);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_Send__SWIG_3")]
  public static extern uint RakPeer_Send__SWIG_3(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, char jarg5, HandleRef jarg6, bool jarg7);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_Receive")]
  public static extern IntPtr RakPeer_Receive(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_DeallocatePacket")]
  public static extern void RakPeer_DeallocatePacket(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_GetMaximumNumberOfPeers")]
  public static extern ushort RakPeer_GetMaximumNumberOfPeers(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_CloseConnection__SWIG_0")]
  public static extern void RakPeer_CloseConnection__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3, byte jarg4, int jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_CloseConnection__SWIG_1")]
  public static extern void RakPeer_CloseConnection__SWIG_1(HandleRef jarg1, HandleRef jarg2, bool jarg3, byte jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_CloseConnection__SWIG_2")]
  public static extern void RakPeer_CloseConnection__SWIG_2(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_CancelConnectionAttempt")]
  public static extern void RakPeer_CancelConnectionAttempt(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_GetConnectionState")]
  public static extern int RakPeer_GetConnectionState(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_GetIndexFromSystemAddress")]
  public static extern int RakPeer_GetIndexFromSystemAddress(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_GetSystemAddressFromIndex")]
  public static extern IntPtr RakPeer_GetSystemAddressFromIndex(HandleRef jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_GetGUIDFromIndex")]
  public static extern IntPtr RakPeer_GetGUIDFromIndex(HandleRef jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_GetSystemList")]
  public static extern void RakPeer_GetSystemList(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_AddToBanList__SWIG_0")]
  public static extern void RakPeer_AddToBanList__SWIG_0(HandleRef jarg1, string jarg2, uint jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_AddToBanList__SWIG_1")]
  public static extern void RakPeer_AddToBanList__SWIG_1(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_RemoveFromBanList")]
  public static extern void RakPeer_RemoveFromBanList(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_ClearBanList")]
  public static extern void RakPeer_ClearBanList(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_IsBanned")]
  public static extern bool RakPeer_IsBanned(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_SetLimitIPConnectionFrequency")]
  public static extern void RakPeer_SetLimitIPConnectionFrequency(HandleRef jarg1, bool jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_Ping__SWIG_0")]
  public static extern void RakPeer_Ping__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_Ping__SWIG_1")]
  public static extern bool RakPeer_Ping__SWIG_1(HandleRef jarg1, string jarg2, ushort jarg3, bool jarg4, uint jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_Ping__SWIG_2")]
  public static extern bool RakPeer_Ping__SWIG_2(HandleRef jarg1, string jarg2, ushort jarg3, bool jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_GetAveragePing")]
  public static extern int RakPeer_GetAveragePing(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_GetLastPing")]
  public static extern int RakPeer_GetLastPing(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_GetLowestPing")]
  public static extern int RakPeer_GetLowestPing(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_SetOccasionalPing")]
  public static extern void RakPeer_SetOccasionalPing(HandleRef jarg1, bool jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_SetOfflinePingResponse__SWIG_0")]
  public static extern void RakPeer_SetOfflinePingResponse__SWIG_0(HandleRef jarg1, string jarg2, uint jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_GetInternalID__SWIG_0")]
  public static extern IntPtr RakPeer_GetInternalID__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_GetInternalID__SWIG_1")]
  public static extern IntPtr RakPeer_GetInternalID__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_GetInternalID__SWIG_2")]
  public static extern IntPtr RakPeer_GetInternalID__SWIG_2(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_GetExternalID")]
  public static extern IntPtr RakPeer_GetExternalID(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_GetMyGUID")]
  public static extern IntPtr RakPeer_GetMyGUID(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_GetGuidFromSystemAddress")]
  public static extern IntPtr RakPeer_GetGuidFromSystemAddress(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_GetSystemAddressFromGuid")]
  public static extern IntPtr RakPeer_GetSystemAddressFromGuid(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_GetClientPublicKeyFromSystemAddress")]
  public static extern bool RakPeer_GetClientPublicKeyFromSystemAddress(HandleRef jarg1, HandleRef jarg2, string jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_SetTimeoutTime")]
  public static extern void RakPeer_SetTimeoutTime(HandleRef jarg1, uint jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_GetTimeoutTime")]
  public static extern uint RakPeer_GetTimeoutTime(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_GetMTUSize")]
  public static extern int RakPeer_GetMTUSize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_GetNumberOfAddresses")]
  public static extern uint RakPeer_GetNumberOfAddresses(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_GetLocalIP")]
  public static extern string RakPeer_GetLocalIP(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_IsLocalIP")]
  public static extern bool RakPeer_IsLocalIP(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_AllowConnectionResponseIPMigration")]
  public static extern void RakPeer_AllowConnectionResponseIPMigration(HandleRef jarg1, bool jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_AdvertiseSystem__SWIG_0")]
  public static extern bool RakPeer_AdvertiseSystem__SWIG_0(HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, int jarg5, uint jarg6);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_AdvertiseSystem__SWIG_1")]
  public static extern bool RakPeer_AdvertiseSystem__SWIG_1(HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, int jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_SetSplitMessageProgressInterval")]
  public static extern void RakPeer_SetSplitMessageProgressInterval(HandleRef jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_GetSplitMessageProgressInterval")]
  public static extern int RakPeer_GetSplitMessageProgressInterval(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_SetUnreliableTimeout")]
  public static extern void RakPeer_SetUnreliableTimeout(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_SendTTL__SWIG_0")]
  public static extern void RakPeer_SendTTL__SWIG_0(HandleRef jarg1, string jarg2, ushort jarg3, int jarg4, uint jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_SendTTL__SWIG_1")]
  public static extern void RakPeer_SendTTL__SWIG_1(HandleRef jarg1, string jarg2, ushort jarg3, int jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_AttachPlugin")]
  public static extern void RakPeer_AttachPlugin(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_DetachPlugin")]
  public static extern void RakPeer_DetachPlugin(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_PushBackPacket")]
  public static extern void RakPeer_PushBackPacket(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_ChangeSystemAddress")]
  public static extern void RakPeer_ChangeSystemAddress(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_AllocatePacket")]
  public static extern IntPtr RakPeer_AllocatePacket(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_WriteOutOfBandHeader")]
  public static extern void RakPeer_WriteOutOfBandHeader(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_ApplyNetworkSimulator")]
  public static extern void RakPeer_ApplyNetworkSimulator(HandleRef jarg1, float jarg2, ushort jarg3, ushort jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_SetPerConnectionOutgoingBandwidthLimit")]
  public static extern void RakPeer_SetPerConnectionOutgoingBandwidthLimit(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_IsNetworkSimulatorActive")]
  public static extern bool RakPeer_IsNetworkSimulatorActive(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_GetStatistics__SWIG_0")]
  public static extern IntPtr RakPeer_GetStatistics__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_GetStatistics__SWIG_1")]
  public static extern IntPtr RakPeer_GetStatistics__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_GetStatistics__SWIG_2")]
  public static extern bool RakPeer_GetStatistics__SWIG_2(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_GetReceiveBufferSize")]
  public static extern uint RakPeer_GetReceiveBufferSize(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_SendOutOfBand__SWIG_0")]
  public static extern bool RakPeer_SendOutOfBand__SWIG_0(HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, uint jarg5, uint jarg6);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_SendOutOfBand__SWIG_1")]
  public static extern bool RakPeer_SendOutOfBand__SWIG_1(HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, uint jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_Send__SWIG_4")]
  public static extern uint RakPeer_Send__SWIG_4(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, int jarg3, int jarg4, int jarg5, char jarg6, HandleRef jarg7, bool jarg8);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_SendLoopback__SWIG_1")]
  public static extern void RakPeer_SendLoopback__SWIG_1(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_SetOfflinePingResponse__SWIG_1")]
  public static extern void RakPeer_SetOfflinePingResponse__SWIG_1(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, uint jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_AdvertiseSystem__SWIG_2")]
  public static extern bool RakPeer_AdvertiseSystem__SWIG_2(HandleRef jarg1, string jarg2, ushort jarg3, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg4, int jarg5, uint jarg6);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_AdvertiseSystem__SWIG_3")]
  public static extern bool RakPeer_AdvertiseSystem__SWIG_3(HandleRef jarg1, string jarg2, ushort jarg3, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg4, int jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_CSharpGetIncomingPasswordHelper")]
  public static extern string RakPeer_CSharpGetIncomingPasswordHelper(HandleRef jarg1, string jarg2, ref int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_SetIncomingPassword__SWIG_1")]
  public static extern void RakPeer_SetIncomingPassword__SWIG_1(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_GetIncomingPassword")]
  public static extern void RakPeer_GetIncomingPassword(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, ref int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_CSharpGetOfflinePingResponseHelper")]
  public static extern void RakPeer_CSharpGetOfflinePingResponseHelper(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, out uint jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeer_GetConnectionList")]
  public static extern bool RakPeer_GetConnectionList(HandleRef jarg1, HandleRef jarg2, ref ushort jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_PacketLogger_GetInstance")]
  public static extern IntPtr PacketLogger_GetInstance();

  [DllImport("RakNet", EntryPoint="CSharp_PacketLogger_DestroyInstance")]
  public static extern void PacketLogger_DestroyInstance(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_PacketLogger")]
  public static extern IntPtr new_PacketLogger();

  [DllImport("RakNet", EntryPoint="CSharp_delete_PacketLogger")]
  public static extern void delete_PacketLogger(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_PacketLogger_LogHeader")]
  public static extern void PacketLogger_LogHeader(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_PacketLogger_WriteLog")]
  public static extern void PacketLogger_WriteLog(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_PacketLogger_WriteMiscellaneous")]
  public static extern void PacketLogger_WriteMiscellaneous(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_PacketLogger_SetPrintID")]
  public static extern void PacketLogger_SetPrintID(HandleRef jarg1, bool jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_PacketLogger_SetPrintAcks")]
  public static extern void PacketLogger_SetPrintAcks(HandleRef jarg1, bool jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_PacketLogger_SetPrefix")]
  public static extern void PacketLogger_SetPrefix(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_PacketLogger_SetSuffix")]
  public static extern void PacketLogger_SetSuffix(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_PacketLogger_BaseIDTOString")]
  public static extern string PacketLogger_BaseIDTOString(byte jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_PacketLogger_SetLogDirectMessages")]
  public static extern void PacketLogger_SetLogDirectMessages(HandleRef jarg1, bool jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_PacketLogger_FormatLineHelper__SWIG_0")]
  public static extern string PacketLogger_FormatLineHelper__SWIG_0(HandleRef jarg1, string jarg2, string jarg3, string jarg4, uint jarg5, uint jarg6, byte jarg7, uint jarg8, ulong jarg9, HandleRef jarg10, HandleRef jarg11, uint jarg12, uint jarg13, uint jarg14, uint jarg15);

  [DllImport("RakNet", EntryPoint="CSharp_PacketLogger_FormatLineHelper__SWIG_1")]
  public static extern string PacketLogger_FormatLineHelper__SWIG_1(HandleRef jarg1, string jarg2, string jarg3, string jarg4, uint jarg5, uint jarg6, string jarg7, uint jarg8, ulong jarg9, HandleRef jarg10, HandleRef jarg11, uint jarg12, uint jarg13, uint jarg14, uint jarg15);

  [DllImport("RakNet", EntryPoint="CSharp_new_PacketFileLogger")]
  public static extern IntPtr new_PacketFileLogger();

  [DllImport("RakNet", EntryPoint="CSharp_delete_PacketFileLogger")]
  public static extern void delete_PacketFileLogger(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_PacketFileLogger_StartLog")]
  public static extern void PacketFileLogger_StartLog(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_PacketFileLogger_WriteLog")]
  public static extern void PacketFileLogger_WriteLog(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_NatTypeDetectionClient_GetInstance")]
  public static extern IntPtr NatTypeDetectionClient_GetInstance();

  [DllImport("RakNet", EntryPoint="CSharp_NatTypeDetectionClient_DestroyInstance")]
  public static extern void NatTypeDetectionClient_DestroyInstance(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_NatTypeDetectionClient")]
  public static extern IntPtr new_NatTypeDetectionClient();

  [DllImport("RakNet", EntryPoint="CSharp_delete_NatTypeDetectionClient")]
  public static extern void delete_NatTypeDetectionClient(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_NatTypeDetectionClient_DetectNATType")]
  public static extern void NatTypeDetectionClient_DetectNATType(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_new_PunchthroughConfiguration")]
  public static extern IntPtr new_PunchthroughConfiguration();

  [DllImport("RakNet", EntryPoint="CSharp_PunchthroughConfiguration_TIME_BETWEEN_PUNCH_ATTEMPTS_INTERNAL_set")]
  public static extern void PunchthroughConfiguration_TIME_BETWEEN_PUNCH_ATTEMPTS_INTERNAL_set(HandleRef jarg1, ulong jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_PunchthroughConfiguration_TIME_BETWEEN_PUNCH_ATTEMPTS_INTERNAL_get")]
  public static extern ulong PunchthroughConfiguration_TIME_BETWEEN_PUNCH_ATTEMPTS_INTERNAL_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_PunchthroughConfiguration_TIME_BETWEEN_PUNCH_ATTEMPTS_EXTERNAL_set")]
  public static extern void PunchthroughConfiguration_TIME_BETWEEN_PUNCH_ATTEMPTS_EXTERNAL_set(HandleRef jarg1, ulong jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_PunchthroughConfiguration_TIME_BETWEEN_PUNCH_ATTEMPTS_EXTERNAL_get")]
  public static extern ulong PunchthroughConfiguration_TIME_BETWEEN_PUNCH_ATTEMPTS_EXTERNAL_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_PunchthroughConfiguration_UDP_SENDS_PER_PORT_INTERNAL_set")]
  public static extern void PunchthroughConfiguration_UDP_SENDS_PER_PORT_INTERNAL_set(HandleRef jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_PunchthroughConfiguration_UDP_SENDS_PER_PORT_INTERNAL_get")]
  public static extern int PunchthroughConfiguration_UDP_SENDS_PER_PORT_INTERNAL_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_PunchthroughConfiguration_UDP_SENDS_PER_PORT_EXTERNAL_set")]
  public static extern void PunchthroughConfiguration_UDP_SENDS_PER_PORT_EXTERNAL_set(HandleRef jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_PunchthroughConfiguration_UDP_SENDS_PER_PORT_EXTERNAL_get")]
  public static extern int PunchthroughConfiguration_UDP_SENDS_PER_PORT_EXTERNAL_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_PunchthroughConfiguration_INTERNAL_IP_WAIT_AFTER_ATTEMPTS_set")]
  public static extern void PunchthroughConfiguration_INTERNAL_IP_WAIT_AFTER_ATTEMPTS_set(HandleRef jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_PunchthroughConfiguration_INTERNAL_IP_WAIT_AFTER_ATTEMPTS_get")]
  public static extern int PunchthroughConfiguration_INTERNAL_IP_WAIT_AFTER_ATTEMPTS_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_PunchthroughConfiguration_MAX_PREDICTIVE_PORT_RANGE_set")]
  public static extern void PunchthroughConfiguration_MAX_PREDICTIVE_PORT_RANGE_set(HandleRef jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_PunchthroughConfiguration_MAX_PREDICTIVE_PORT_RANGE_get")]
  public static extern int PunchthroughConfiguration_MAX_PREDICTIVE_PORT_RANGE_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_PunchthroughConfiguration_EXTERNAL_IP_WAIT_BETWEEN_PORTS_set")]
  public static extern void PunchthroughConfiguration_EXTERNAL_IP_WAIT_BETWEEN_PORTS_set(HandleRef jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_PunchthroughConfiguration_EXTERNAL_IP_WAIT_BETWEEN_PORTS_get")]
  public static extern int PunchthroughConfiguration_EXTERNAL_IP_WAIT_BETWEEN_PORTS_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_PunchthroughConfiguration_EXTERNAL_IP_WAIT_AFTER_ALL_ATTEMPTS_set")]
  public static extern void PunchthroughConfiguration_EXTERNAL_IP_WAIT_AFTER_ALL_ATTEMPTS_set(HandleRef jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_PunchthroughConfiguration_EXTERNAL_IP_WAIT_AFTER_ALL_ATTEMPTS_get")]
  public static extern int PunchthroughConfiguration_EXTERNAL_IP_WAIT_AFTER_ALL_ATTEMPTS_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_PunchthroughConfiguration_MAXIMUM_NUMBER_OF_INTERNAL_IDS_TO_CHECK_set")]
  public static extern void PunchthroughConfiguration_MAXIMUM_NUMBER_OF_INTERNAL_IDS_TO_CHECK_set(HandleRef jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_PunchthroughConfiguration_MAXIMUM_NUMBER_OF_INTERNAL_IDS_TO_CHECK_get")]
  public static extern int PunchthroughConfiguration_MAXIMUM_NUMBER_OF_INTERNAL_IDS_TO_CHECK_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_PunchthroughConfiguration_retryOnFailure_set")]
  public static extern void PunchthroughConfiguration_retryOnFailure_set(HandleRef jarg1, bool jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_PunchthroughConfiguration_retryOnFailure_get")]
  public static extern bool PunchthroughConfiguration_retryOnFailure_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_delete_PunchthroughConfiguration")]
  public static extern void delete_PunchthroughConfiguration(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_NatPunchthroughDebugInterface")]
  public static extern IntPtr new_NatPunchthroughDebugInterface();

  [DllImport("RakNet", EntryPoint="CSharp_delete_NatPunchthroughDebugInterface")]
  public static extern void delete_NatPunchthroughDebugInterface(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_NatPunchthroughDebugInterface_OnClientMessage")]
  public static extern void NatPunchthroughDebugInterface_OnClientMessage(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_NatPunchthroughDebugInterface_director_connect")]
  public static extern void NatPunchthroughDebugInterface_director_connect(HandleRef jarg1, NatPunchthroughDebugInterface.SwigDelegateNatPunchthroughDebugInterface_0 delegate0);

  [DllImport("RakNet", EntryPoint="CSharp_NatPunchthroughDebugInterface_Printf_OnClientMessage")]
  public static extern void NatPunchthroughDebugInterface_Printf_OnClientMessage(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_new_NatPunchthroughDebugInterface_Printf")]
  public static extern IntPtr new_NatPunchthroughDebugInterface_Printf();

  [DllImport("RakNet", EntryPoint="CSharp_delete_NatPunchthroughDebugInterface_Printf")]
  public static extern void delete_NatPunchthroughDebugInterface_Printf(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_NatPunchthroughDebugInterface_PacketLogger_pl_set")]
  public static extern void NatPunchthroughDebugInterface_PacketLogger_pl_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_NatPunchthroughDebugInterface_PacketLogger_pl_get")]
  public static extern IntPtr NatPunchthroughDebugInterface_PacketLogger_pl_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_NatPunchthroughDebugInterface_PacketLogger")]
  public static extern IntPtr new_NatPunchthroughDebugInterface_PacketLogger();

  [DllImport("RakNet", EntryPoint="CSharp_delete_NatPunchthroughDebugInterface_PacketLogger")]
  public static extern void delete_NatPunchthroughDebugInterface_PacketLogger(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_NatPunchthroughDebugInterface_PacketLogger_OnClientMessage")]
  public static extern void NatPunchthroughDebugInterface_PacketLogger_OnClientMessage(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_NatPunchthroughClient_GetInstance")]
  public static extern IntPtr NatPunchthroughClient_GetInstance();

  [DllImport("RakNet", EntryPoint="CSharp_NatPunchthroughClient_DestroyInstance")]
  public static extern void NatPunchthroughClient_DestroyInstance(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_NatPunchthroughClient")]
  public static extern IntPtr new_NatPunchthroughClient();

  [DllImport("RakNet", EntryPoint="CSharp_delete_NatPunchthroughClient")]
  public static extern void delete_NatPunchthroughClient(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_NatPunchthroughClient_OpenNAT")]
  public static extern bool NatPunchthroughClient_OpenNAT(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_NatPunchthroughClient_GetPunchthroughConfiguration")]
  public static extern IntPtr NatPunchthroughClient_GetPunchthroughConfiguration(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_NatPunchthroughClient_SetDebugInterface")]
  public static extern void NatPunchthroughClient_SetDebugInterface(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_NatPunchthroughClient_GetUPNPExternalPort")]
  public static extern ushort NatPunchthroughClient_GetUPNPExternalPort(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_NatPunchthroughClient_GetUPNPInternalPort")]
  public static extern ushort NatPunchthroughClient_GetUPNPInternalPort(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_NatPunchthroughClient_GetUPNPInternalAddress")]
  public static extern IntPtr NatPunchthroughClient_GetUPNPInternalAddress(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_NatPunchthroughClient_Clear")]
  public static extern void NatPunchthroughClient_Clear(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_Router2DebugInterface")]
  public static extern IntPtr new_Router2DebugInterface();

  [DllImport("RakNet", EntryPoint="CSharp_delete_Router2DebugInterface")]
  public static extern void delete_Router2DebugInterface(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_Router2DebugInterface_ShowFailure")]
  public static extern void Router2DebugInterface_ShowFailure(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_Router2DebugInterface_ShowDiagnostic")]
  public static extern void Router2DebugInterface_ShowDiagnostic(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_Router2_GetInstance")]
  public static extern IntPtr Router2_GetInstance();

  [DllImport("RakNet", EntryPoint="CSharp_Router2_DestroyInstance")]
  public static extern void Router2_DestroyInstance(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_Router2")]
  public static extern IntPtr new_Router2();

  [DllImport("RakNet", EntryPoint="CSharp_delete_Router2")]
  public static extern void delete_Router2(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_Router2_EstablishRouting")]
  public static extern void Router2_EstablishRouting(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_Router2_SetMaximumForwardingRequests")]
  public static extern void Router2_SetMaximumForwardingRequests(HandleRef jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_Router2_SetDebugInterface")]
  public static extern void Router2_SetDebugInterface(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_Router2_GetDebugInterface")]
  public static extern IntPtr Router2_GetDebugInterface(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_Router2_GetConnectionRequestIndex")]
  public static extern uint Router2_GetConnectionRequestIndex(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_new_UDPProxyClientResultHandler")]
  public static extern IntPtr new_UDPProxyClientResultHandler();

  [DllImport("RakNet", EntryPoint="CSharp_delete_UDPProxyClientResultHandler")]
  public static extern void delete_UDPProxyClientResultHandler(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_UDPProxyClientResultHandler_OnForwardingSuccess")]
  public static extern void UDPProxyClientResultHandler_OnForwardingSuccess(HandleRef jarg1, string jarg2, ushort jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6, HandleRef jarg7);

  [DllImport("RakNet", EntryPoint="CSharp_UDPProxyClientResultHandler_OnForwardingNotification")]
  public static extern void UDPProxyClientResultHandler_OnForwardingNotification(HandleRef jarg1, string jarg2, ushort jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6, HandleRef jarg7);

  [DllImport("RakNet", EntryPoint="CSharp_UDPProxyClientResultHandler_OnNoServersOnline")]
  public static extern void UDPProxyClientResultHandler_OnNoServersOnline(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_UDPProxyClientResultHandler_OnRecipientNotConnected")]
  public static extern void UDPProxyClientResultHandler_OnRecipientNotConnected(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6);

  [DllImport("RakNet", EntryPoint="CSharp_UDPProxyClientResultHandler_OnAllServersBusy")]
  public static extern void UDPProxyClientResultHandler_OnAllServersBusy(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_UDPProxyClientResultHandler_OnForwardingInProgress")]
  public static extern void UDPProxyClientResultHandler_OnForwardingInProgress(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_UDPProxyClientResultHandler_director_connect")]
  public static extern void UDPProxyClientResultHandler_director_connect(HandleRef jarg1, UDPProxyClientResultHandler.SwigDelegateUDPProxyClientResultHandler_0 delegate0, UDPProxyClientResultHandler.SwigDelegateUDPProxyClientResultHandler_1 delegate1, UDPProxyClientResultHandler.SwigDelegateUDPProxyClientResultHandler_2 delegate2, UDPProxyClientResultHandler.SwigDelegateUDPProxyClientResultHandler_3 delegate3, UDPProxyClientResultHandler.SwigDelegateUDPProxyClientResultHandler_4 delegate4, UDPProxyClientResultHandler.SwigDelegateUDPProxyClientResultHandler_5 delegate5);

  [DllImport("RakNet", EntryPoint="CSharp_UDPProxyClient_GetInstance")]
  public static extern IntPtr UDPProxyClient_GetInstance();

  [DllImport("RakNet", EntryPoint="CSharp_UDPProxyClient_DestroyInstance")]
  public static extern void UDPProxyClient_DestroyInstance(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_UDPProxyClient")]
  public static extern IntPtr new_UDPProxyClient();

  [DllImport("RakNet", EntryPoint="CSharp_delete_UDPProxyClient")]
  public static extern void delete_UDPProxyClient(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_UDPProxyClient_SetResultHandler")]
  public static extern void UDPProxyClient_SetResultHandler(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_UDPProxyClient_RequestForwarding__SWIG_0")]
  public static extern bool UDPProxyClient_RequestForwarding__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, uint jarg5, HandleRef jarg6);

  [DllImport("RakNet", EntryPoint="CSharp_UDPProxyClient_RequestForwarding__SWIG_1")]
  public static extern bool UDPProxyClient_RequestForwarding__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, uint jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_UDPProxyClient_RequestForwarding__SWIG_2")]
  public static extern bool UDPProxyClient_RequestForwarding__SWIG_2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, uint jarg5, HandleRef jarg6);

  [DllImport("RakNet", EntryPoint="CSharp_UDPProxyClient_RequestForwarding__SWIG_3")]
  public static extern bool UDPProxyClient_RequestForwarding__SWIG_3(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, uint jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_FullyConnectedMesh2_GetInstance")]
  public static extern IntPtr FullyConnectedMesh2_GetInstance();

  [DllImport("RakNet", EntryPoint="CSharp_FullyConnectedMesh2_DestroyInstance")]
  public static extern void FullyConnectedMesh2_DestroyInstance(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_FullyConnectedMesh2")]
  public static extern IntPtr new_FullyConnectedMesh2();

  [DllImport("RakNet", EntryPoint="CSharp_delete_FullyConnectedMesh2")]
  public static extern void delete_FullyConnectedMesh2(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FullyConnectedMesh2_SetConnectOnNewRemoteConnection")]
  public static extern void FullyConnectedMesh2_SetConnectOnNewRemoteConnection(HandleRef jarg1, bool jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_FullyConnectedMesh2_GetConnectedHost")]
  public static extern IntPtr FullyConnectedMesh2_GetConnectedHost(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FullyConnectedMesh2_GetConnectedHostAddr")]
  public static extern IntPtr FullyConnectedMesh2_GetConnectedHostAddr(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FullyConnectedMesh2_GetHostSystem")]
  public static extern IntPtr FullyConnectedMesh2_GetHostSystem(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FullyConnectedMesh2_IsHostSystem")]
  public static extern bool FullyConnectedMesh2_IsHostSystem(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FullyConnectedMesh2_IsConnectedHost")]
  public static extern bool FullyConnectedMesh2_IsConnectedHost(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FullyConnectedMesh2_SetAutoparticipateConnections")]
  public static extern void FullyConnectedMesh2_SetAutoparticipateConnections(HandleRef jarg1, bool jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_FullyConnectedMesh2_ResetHostCalculation")]
  public static extern void FullyConnectedMesh2_ResetHostCalculation(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FullyConnectedMesh2_AddParticipant")]
  public static extern void FullyConnectedMesh2_AddParticipant(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_FullyConnectedMesh2_GetParticipantCount__SWIG_0")]
  public static extern uint FullyConnectedMesh2_GetParticipantCount__SWIG_0(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FullyConnectedMesh2_GetParticipantCount__SWIG_1")]
  public static extern void FullyConnectedMesh2_GetParticipantCount__SWIG_1(HandleRef jarg1, out uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_ReadyEvent_GetInstance")]
  public static extern IntPtr ReadyEvent_GetInstance();

  [DllImport("RakNet", EntryPoint="CSharp_ReadyEvent_DestroyInstance")]
  public static extern void ReadyEvent_DestroyInstance(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_ReadyEvent")]
  public static extern IntPtr new_ReadyEvent();

  [DllImport("RakNet", EntryPoint="CSharp_delete_ReadyEvent")]
  public static extern void delete_ReadyEvent(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_ReadyEvent_SetEvent")]
  public static extern bool ReadyEvent_SetEvent(HandleRef jarg1, int jarg2, bool jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_ReadyEvent_ForceCompletion")]
  public static extern bool ReadyEvent_ForceCompletion(HandleRef jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_ReadyEvent_DeleteEvent")]
  public static extern bool ReadyEvent_DeleteEvent(HandleRef jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_ReadyEvent_IsEventSet")]
  public static extern bool ReadyEvent_IsEventSet(HandleRef jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_ReadyEvent_IsEventCompletionProcessing")]
  public static extern bool ReadyEvent_IsEventCompletionProcessing(HandleRef jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_ReadyEvent_IsEventCompleted")]
  public static extern bool ReadyEvent_IsEventCompleted(HandleRef jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_ReadyEvent_HasEvent")]
  public static extern bool ReadyEvent_HasEvent(HandleRef jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_ReadyEvent_GetEventListSize")]
  public static extern uint ReadyEvent_GetEventListSize(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_ReadyEvent_GetEventAtIndex")]
  public static extern int ReadyEvent_GetEventAtIndex(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_ReadyEvent_AddToWaitList")]
  public static extern bool ReadyEvent_AddToWaitList(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_ReadyEvent_RemoveFromWaitList")]
  public static extern bool ReadyEvent_RemoveFromWaitList(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_ReadyEvent_IsInWaitList")]
  public static extern bool ReadyEvent_IsInWaitList(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_ReadyEvent_GetRemoteWaitListSize")]
  public static extern uint ReadyEvent_GetRemoteWaitListSize(HandleRef jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_ReadyEvent_GetFromWaitListAtIndex")]
  public static extern IntPtr ReadyEvent_GetFromWaitListAtIndex(HandleRef jarg1, int jarg2, uint jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_ReadyEvent_GetReadyStatus")]
  public static extern int ReadyEvent_GetReadyStatus(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_ReadyEvent_SetSendChannel")]
  public static extern void ReadyEvent_SetSendChannel(HandleRef jarg1, byte jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_UNASSIGNED_TEAM_ID_get")]
  public static extern int UNASSIGNED_TEAM_ID_get();

  [DllImport("RakNet", EntryPoint="CSharp_TeamBalancer_GetInstance")]
  public static extern IntPtr TeamBalancer_GetInstance();

  [DllImport("RakNet", EntryPoint="CSharp_TeamBalancer_DestroyInstance")]
  public static extern void TeamBalancer_DestroyInstance(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_TeamBalancer")]
  public static extern IntPtr new_TeamBalancer();

  [DllImport("RakNet", EntryPoint="CSharp_delete_TeamBalancer")]
  public static extern void delete_TeamBalancer(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_TeamBalancer_SetHostGuid")]
  public static extern void TeamBalancer_SetHostGuid(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_TeamBalancer_SetTeamSizeLimits__SWIG_0")]
  public static extern void TeamBalancer_SetTeamSizeLimits__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_TeamBalancer_SetTeamSizeLimits__SWIG_1")]
  public static extern void TeamBalancer_SetTeamSizeLimits__SWIG_1(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]ushort[] jarg2, int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_TeamBalancer_SetDefaultAssignmentAlgorithm")]
  public static extern void TeamBalancer_SetDefaultAssignmentAlgorithm(HandleRef jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_TeamBalancer_SetForceEvenTeams")]
  public static extern void TeamBalancer_SetForceEvenTeams(HandleRef jarg1, bool jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_TeamBalancer_SetLockTeams")]
  public static extern void TeamBalancer_SetLockTeams(HandleRef jarg1, bool jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_TeamBalancer_RequestSpecificTeam")]
  public static extern bool TeamBalancer_RequestSpecificTeam(HandleRef jarg1, byte jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_TeamBalancer_CancelRequestSpecificTeam")]
  public static extern void TeamBalancer_CancelRequestSpecificTeam(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_TeamBalancer_RequestAnyTeam")]
  public static extern void TeamBalancer_RequestAnyTeam(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_TeamBalancer_GetMyTeam")]
  public static extern byte TeamBalancer_GetMyTeam(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_TeamBalancer_SetAllowHostMigration")]
  public static extern void TeamBalancer_SetAllowHostMigration(HandleRef jarg1, bool jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_delete_NatPunchthroughServerDebugInterface")]
  public static extern void delete_NatPunchthroughServerDebugInterface(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_NatPunchthroughServerDebugInterface_OnServerMessage")]
  public static extern void NatPunchthroughServerDebugInterface_OnServerMessage(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_NatPunchthroughServerDebugInterface_Printf_OnServerMessage")]
  public static extern void NatPunchthroughServerDebugInterface_Printf_OnServerMessage(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_new_NatPunchthroughServerDebugInterface_Printf")]
  public static extern IntPtr new_NatPunchthroughServerDebugInterface_Printf();

  [DllImport("RakNet", EntryPoint="CSharp_delete_NatPunchthroughServerDebugInterface_Printf")]
  public static extern void delete_NatPunchthroughServerDebugInterface_Printf(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_NatPunchthroughServerDebugInterface_PacketLogger_pl_set")]
  public static extern void NatPunchthroughServerDebugInterface_PacketLogger_pl_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_NatPunchthroughServerDebugInterface_PacketLogger_pl_get")]
  public static extern IntPtr NatPunchthroughServerDebugInterface_PacketLogger_pl_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_NatPunchthroughServerDebugInterface_PacketLogger")]
  public static extern IntPtr new_NatPunchthroughServerDebugInterface_PacketLogger();

  [DllImport("RakNet", EntryPoint="CSharp_delete_NatPunchthroughServerDebugInterface_PacketLogger")]
  public static extern void delete_NatPunchthroughServerDebugInterface_PacketLogger(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_NatPunchthroughServerDebugInterface_PacketLogger_OnServerMessage")]
  public static extern void NatPunchthroughServerDebugInterface_PacketLogger_OnServerMessage(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_NatPunchthroughServer_GetInstance")]
  public static extern IntPtr NatPunchthroughServer_GetInstance();

  [DllImport("RakNet", EntryPoint="CSharp_NatPunchthroughServer_DestroyInstance")]
  public static extern void NatPunchthroughServer_DestroyInstance(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_NatPunchthroughServer")]
  public static extern IntPtr new_NatPunchthroughServer();

  [DllImport("RakNet", EntryPoint="CSharp_delete_NatPunchthroughServer")]
  public static extern void delete_NatPunchthroughServer(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_NatPunchthroughServer_SetDebugInterface")]
  public static extern void NatPunchthroughServer_SetDebugInterface(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_NatPunchthroughServer_lastUpdate_set")]
  public static extern void NatPunchthroughServer_lastUpdate_set(HandleRef jarg1, ulong jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_NatPunchthroughServer_lastUpdate_get")]
  public static extern ulong NatPunchthroughServer_lastUpdate_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_UDPForwarder")]
  public static extern IntPtr new_UDPForwarder();

  [DllImport("RakNet", EntryPoint="CSharp_delete_UDPForwarder")]
  public static extern void delete_UDPForwarder(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_UDPForwarder_Startup")]
  public static extern void UDPForwarder_Startup(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_UDPForwarder_Shutdown")]
  public static extern void UDPForwarder_Shutdown(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_UDPForwarder_Update")]
  public static extern void UDPForwarder_Update(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_UDPForwarder_SetMaxForwardEntries")]
  public static extern void UDPForwarder_SetMaxForwardEntries(HandleRef jarg1, ushort jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_UDPForwarder_GetMaxForwardEntries")]
  public static extern int UDPForwarder_GetMaxForwardEntries(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_UDPForwarder_GetUsedForwardEntries")]
  public static extern int UDPForwarder_GetUsedForwardEntries(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_UDPForwarder_StartForwarding")]
  public static extern int UDPForwarder_StartForwarding(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, uint jarg4, string jarg5, out ushort jarg6, out uint jarg7);

  [DllImport("RakNet", EntryPoint="CSharp_UDPForwarder_StopForwarding")]
  public static extern void UDPForwarder_StopForwarding(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_UDPForwarder_threadOperationIncomingMutex_set")]
  public static extern void UDPForwarder_threadOperationIncomingMutex_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_UDPForwarder_threadOperationIncomingMutex_get")]
  public static extern IntPtr UDPForwarder_threadOperationIncomingMutex_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_UDPForwarder_threadOperationOutgoingMutex_set")]
  public static extern void UDPForwarder_threadOperationOutgoingMutex_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_UDPForwarder_threadOperationOutgoingMutex_get")]
  public static extern IntPtr UDPForwarder_threadOperationOutgoingMutex_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_UDPForwarder_UpdateThreaded")]
  public static extern void UDPForwarder_UpdateThreaded(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_UDPForwarder_StartForwardingThreaded")]
  public static extern int UDPForwarder_StartForwardingThreaded(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, uint jarg4, string jarg5, out ushort jarg6, out uint jarg7);

  [DllImport("RakNet", EntryPoint="CSharp_UDPForwarder_StopForwardingThreaded")]
  public static extern void UDPForwarder_StopForwardingThreaded(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_UDPForwarder_maxForwardEntries_set")]
  public static extern void UDPForwarder_maxForwardEntries_set(HandleRef jarg1, ushort jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_UDPForwarder_maxForwardEntries_get")]
  public static extern ushort UDPForwarder_maxForwardEntries_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_UDPForwarder_isRunning_set")]
  public static extern void UDPForwarder_isRunning_set(HandleRef jarg1, bool jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_UDPForwarder_isRunning_get")]
  public static extern bool UDPForwarder_isRunning_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_UDPForwarder_threadRunning_set")]
  public static extern void UDPForwarder_threadRunning_set(HandleRef jarg1, bool jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_UDPForwarder_threadRunning_get")]
  public static extern bool UDPForwarder_threadRunning_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_UDPProxyServerResultHandler")]
  public static extern IntPtr new_UDPProxyServerResultHandler();

  [DllImport("RakNet", EntryPoint="CSharp_delete_UDPProxyServerResultHandler")]
  public static extern void delete_UDPProxyServerResultHandler(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_UDPProxyServerResultHandler_OnLoginSuccess")]
  public static extern void UDPProxyServerResultHandler_OnLoginSuccess(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_UDPProxyServerResultHandler_OnAlreadyLoggedIn")]
  public static extern void UDPProxyServerResultHandler_OnAlreadyLoggedIn(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_UDPProxyServerResultHandler_OnNoPasswordSet")]
  public static extern void UDPProxyServerResultHandler_OnNoPasswordSet(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_UDPProxyServerResultHandler_OnWrongPassword")]
  public static extern void UDPProxyServerResultHandler_OnWrongPassword(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_UDPProxyServerResultHandler_director_connect")]
  public static extern void UDPProxyServerResultHandler_director_connect(HandleRef jarg1, UDPProxyServerResultHandler.SwigDelegateUDPProxyServerResultHandler_0 delegate0, UDPProxyServerResultHandler.SwigDelegateUDPProxyServerResultHandler_1 delegate1, UDPProxyServerResultHandler.SwigDelegateUDPProxyServerResultHandler_2 delegate2, UDPProxyServerResultHandler.SwigDelegateUDPProxyServerResultHandler_3 delegate3);

  [DllImport("RakNet", EntryPoint="CSharp_UDPProxyServer_GetInstance")]
  public static extern IntPtr UDPProxyServer_GetInstance();

  [DllImport("RakNet", EntryPoint="CSharp_UDPProxyServer_DestroyInstance")]
  public static extern void UDPProxyServer_DestroyInstance(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_UDPProxyServer")]
  public static extern IntPtr new_UDPProxyServer();

  [DllImport("RakNet", EntryPoint="CSharp_delete_UDPProxyServer")]
  public static extern void delete_UDPProxyServer(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_UDPProxyServer_SetResultHandler")]
  public static extern void UDPProxyServer_SetResultHandler(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_UDPProxyServer_LoginToCoordinator")]
  public static extern bool UDPProxyServer_LoginToCoordinator(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_UDPProxyServer_udpForwarder_set")]
  public static extern void UDPProxyServer_udpForwarder_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_UDPProxyServer_udpForwarder_get")]
  public static extern IntPtr UDPProxyServer_udpForwarder_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_UDPProxyCoordinator_GetInstance")]
  public static extern IntPtr UDPProxyCoordinator_GetInstance();

  [DllImport("RakNet", EntryPoint="CSharp_UDPProxyCoordinator_DestroyInstance")]
  public static extern void UDPProxyCoordinator_DestroyInstance(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_UDPProxyCoordinator")]
  public static extern IntPtr new_UDPProxyCoordinator();

  [DllImport("RakNet", EntryPoint="CSharp_delete_UDPProxyCoordinator")]
  public static extern void delete_UDPProxyCoordinator(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_UDPProxyCoordinator_SetRemoteLoginPassword")]
  public static extern void UDPProxyCoordinator_SetRemoteLoginPassword(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_NatTypeDetectionServer_GetInstance")]
  public static extern IntPtr NatTypeDetectionServer_GetInstance();

  [DllImport("RakNet", EntryPoint="CSharp_NatTypeDetectionServer_DestroyInstance")]
  public static extern void NatTypeDetectionServer_DestroyInstance(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_NatTypeDetectionServer")]
  public static extern IntPtr new_NatTypeDetectionServer();

  [DllImport("RakNet", EntryPoint="CSharp_delete_NatTypeDetectionServer")]
  public static extern void delete_NatTypeDetectionServer(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_NatTypeDetectionServer_Startup")]
  public static extern void NatTypeDetectionServer_Startup(HandleRef jarg1, string jarg2, string jarg3, string jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_NatTypeDetectionServer_Shutdown")]
  public static extern void NatTypeDetectionServer_Shutdown(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp__TABLE_BPLUS_TREE_ORDER_get")]
  public static extern int _TABLE_BPLUS_TREE_ORDER_get();

  [DllImport("RakNet", EntryPoint="CSharp__TABLE_MAX_COLUMN_NAME_LENGTH_get")]
  public static extern int _TABLE_MAX_COLUMN_NAME_LENGTH_get();

  [DllImport("RakNet", EntryPoint="CSharp_new_Table")]
  public static extern IntPtr new_Table();

  [DllImport("RakNet", EntryPoint="CSharp_delete_Table")]
  public static extern void delete_Table(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_Table_AddColumn")]
  public static extern uint Table_AddColumn(HandleRef jarg1, string jarg2, int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_Table_RemoveColumn")]
  public static extern void Table_RemoveColumn(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_Table_ColumnName")]
  public static extern string Table_ColumnName(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_Table_GetColumnType")]
  public static extern int Table_GetColumnType(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_Table_GetColumnCount")]
  public static extern uint Table_GetColumnCount(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_Table_GetRowCount")]
  public static extern uint Table_GetRowCount(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_Table_AddRow__SWIG_0")]
  public static extern IntPtr Table_AddRow__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_Table_AddRow__SWIG_1")]
  public static extern IntPtr Table_AddRow__SWIG_1(HandleRef jarg1, uint jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_Table_AddRow__SWIG_2")]
  public static extern IntPtr Table_AddRow__SWIG_2(HandleRef jarg1, uint jarg2, HandleRef jarg3, bool jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_Table_AddRow__SWIG_3")]
  public static extern IntPtr Table_AddRow__SWIG_3(HandleRef jarg1, uint jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_Table_RemoveRow")]
  public static extern bool Table_RemoveRow(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_Table_RemoveRows")]
  public static extern void Table_RemoveRows(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_Table_UpdateCell__SWIG_0")]
  public static extern bool Table_UpdateCell__SWIG_0(HandleRef jarg1, uint jarg2, uint jarg3, int jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_Table_UpdateCell__SWIG_1")]
  public static extern bool Table_UpdateCell__SWIG_1(HandleRef jarg1, uint jarg2, uint jarg3, string jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_Table_UpdateCellByIndex__SWIG_0")]
  public static extern bool Table_UpdateCellByIndex__SWIG_0(HandleRef jarg1, uint jarg2, uint jarg3, int jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_Table_UpdateCellByIndex__SWIG_1")]
  public static extern bool Table_UpdateCellByIndex__SWIG_1(HandleRef jarg1, uint jarg2, uint jarg3, string jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_Table_GetCellValueByIndex")]
  public static extern void Table_GetCellValueByIndex(HandleRef jarg1, uint jarg2, uint jarg3, out int jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_Table_GetRowByID")]
  public static extern IntPtr Table_GetRowByID(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_Table_GetRowByIndex")]
  public static extern IntPtr Table_GetRowByIndex(HandleRef jarg1, uint jarg2, ref int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_Table_Clear")]
  public static extern void Table_Clear(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_Table_GetColumns")]
  public static extern IntPtr Table_GetColumns(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_Table_GetRows")]
  public static extern IntPtr Table_GetRows(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_Table_GetAvailableRowId")]
  public static extern uint Table_GetAvailableRowId(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_Table_CopyData")]
  public static extern IntPtr Table_CopyData(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_Table_GetListHeadHelper")]
  public static extern IntPtr Table_GetListHeadHelper(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_Table_SortTableHelper")]
  public static extern void Table_SortTableHelper(HandleRef jarg1, HandleRef jarg2, uint jarg3, HandleRef jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_Table_GetCellValueByIndexHelper__SWIG_0")]
  public static extern void Table_GetCellValueByIndexHelper__SWIG_0(HandleRef jarg1, uint jarg2, uint jarg3, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg4, out int jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_Table_GetCellValueByIndexHelper__SWIG_1")]
  public static extern string Table_GetCellValueByIndexHelper__SWIG_1(HandleRef jarg1, uint jarg2, uint jarg3, string jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_Table_PrintColumnHeaders")]
  public static extern void Table_PrintColumnHeaders(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, int jarg3, char jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_Table_PrintRow")]
  public static extern void Table_PrintRow(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, int jarg3, char jarg4, bool jarg5, HandleRef jarg6);

  [DllImport("RakNet", EntryPoint="CSharp_Table_QueryTableHelper")]
  public static extern void Table_QueryTableHelper(HandleRef jarg1, [In, MarshalAs(UnmanagedType.LPArray)]uint[] jarg2, uint jarg3, HandleRef jarg4, uint jarg5, [In, MarshalAs(UnmanagedType.LPArray)]uint[] jarg6, uint jarg7, HandleRef jarg8);

  [DllImport("RakNet", EntryPoint="CSharp_Table_UpdateCell__SWIG_2")]
  public static extern bool Table_UpdateCell__SWIG_2(HandleRef jarg1, uint jarg2, uint jarg3, int jarg4, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_Table_UpdateCellByIndex__SWIG_2")]
  public static extern bool Table_UpdateCellByIndex__SWIG_2(HandleRef jarg1, uint jarg2, uint jarg3, int jarg4, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_Table_ColumnIndexHelper")]
  public static extern uint Table_ColumnIndexHelper(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_new_FileListTransferCBInterface")]
  public static extern IntPtr new_FileListTransferCBInterface();

  [DllImport("RakNet", EntryPoint="CSharp_delete_FileListTransferCBInterface")]
  public static extern void delete_FileListTransferCBInterface(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FileListTransferCBInterface_OnFile")]
  public static extern bool FileListTransferCBInterface_OnFile(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_FileListTransferCBInterface_OnFileProgress")]
  public static extern void FileListTransferCBInterface_OnFileProgress(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_FileListTransferCBInterface_Update")]
  public static extern bool FileListTransferCBInterface_Update(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FileListTransferCBInterface_UpdateSwigExplicitFileListTransferCBInterface")]
  public static extern bool FileListTransferCBInterface_UpdateSwigExplicitFileListTransferCBInterface(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FileListTransferCBInterface_OnDownloadComplete")]
  public static extern bool FileListTransferCBInterface_OnDownloadComplete(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FileListTransferCBInterface_OnDownloadCompleteSwigExplicitFileListTransferCBInterface")]
  public static extern bool FileListTransferCBInterface_OnDownloadCompleteSwigExplicitFileListTransferCBInterface(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FileListTransferCBInterface_OnDereference")]
  public static extern void FileListTransferCBInterface_OnDereference(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FileListTransferCBInterface_OnDereferenceSwigExplicitFileListTransferCBInterface")]
  public static extern void FileListTransferCBInterface_OnDereferenceSwigExplicitFileListTransferCBInterface(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FileListTransferCBInterface_director_connect")]
  public static extern void FileListTransferCBInterface_director_connect(HandleRef jarg1, FileListTransferCBInterface.SwigDelegateFileListTransferCBInterface_0 delegate0, FileListTransferCBInterface.SwigDelegateFileListTransferCBInterface_1 delegate1, FileListTransferCBInterface.SwigDelegateFileListTransferCBInterface_2 delegate2, FileListTransferCBInterface.SwigDelegateFileListTransferCBInterface_3 delegate3, FileListTransferCBInterface.SwigDelegateFileListTransferCBInterface_4 delegate4);

  [DllImport("RakNet", EntryPoint="CSharp_new_IncrementalReadInterface")]
  public static extern IntPtr new_IncrementalReadInterface();

  [DllImport("RakNet", EntryPoint="CSharp_delete_IncrementalReadInterface")]
  public static extern void delete_IncrementalReadInterface(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_IncrementalReadInterface_GetFilePart")]
  public static extern uint IncrementalReadInterface_GetFilePart(HandleRef jarg1, string jarg2, uint jarg3, uint jarg4, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg5, HandleRef jarg6);

  [DllImport("RakNet", EntryPoint="CSharp_new_FileListNodeContext__SWIG_0")]
  public static extern IntPtr new_FileListNodeContext__SWIG_0();

  [DllImport("RakNet", EntryPoint="CSharp_new_FileListNodeContext__SWIG_1")]
  public static extern IntPtr new_FileListNodeContext__SWIG_1(byte jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_delete_FileListNodeContext")]
  public static extern void delete_FileListNodeContext(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FileListNodeContext_op_set")]
  public static extern void FileListNodeContext_op_set(HandleRef jarg1, byte jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_FileListNodeContext_op_get")]
  public static extern byte FileListNodeContext_op_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FileListNodeContext_fileId_set")]
  public static extern void FileListNodeContext_fileId_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_FileListNodeContext_fileId_get")]
  public static extern uint FileListNodeContext_fileId_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FileListNode_filename_set")]
  public static extern void FileListNode_filename_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_FileListNode_filename_get")]
  public static extern IntPtr FileListNode_filename_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FileListNode_fullPathToFile_set")]
  public static extern void FileListNode_fullPathToFile_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_FileListNode_fullPathToFile_get")]
  public static extern IntPtr FileListNode_fullPathToFile_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FileListNode_data_set")]
  public static extern void FileListNode_data_set(HandleRef jarg1, IntPtr jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_FileListNode_data_get")]
  public static extern IntPtr FileListNode_data_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FileListNode_dataLengthBytes_set")]
  public static extern void FileListNode_dataLengthBytes_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_FileListNode_dataLengthBytes_get")]
  public static extern uint FileListNode_dataLengthBytes_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FileListNode_fileLengthBytes_set")]
  public static extern void FileListNode_fileLengthBytes_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_FileListNode_fileLengthBytes_get")]
  public static extern uint FileListNode_fileLengthBytes_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FileListNode_context_set")]
  public static extern void FileListNode_context_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_FileListNode_context_get")]
  public static extern IntPtr FileListNode_context_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FileListNode_isAReference_set")]
  public static extern void FileListNode_isAReference_set(HandleRef jarg1, bool jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_FileListNode_isAReference_get")]
  public static extern bool FileListNode_isAReference_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_FileListNode")]
  public static extern IntPtr new_FileListNode();

  [DllImport("RakNet", EntryPoint="CSharp_FileListNode_SetData")]
  public static extern void FileListNode_SetData(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_delete_FileListNode")]
  public static extern void delete_FileListNode(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FileListProgress_GetInstance")]
  public static extern IntPtr FileListProgress_GetInstance();

  [DllImport("RakNet", EntryPoint="CSharp_FileListProgress_DestroyInstance")]
  public static extern void FileListProgress_DestroyInstance(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_FileListProgress")]
  public static extern IntPtr new_FileListProgress();

  [DllImport("RakNet", EntryPoint="CSharp_delete_FileListProgress")]
  public static extern void delete_FileListProgress(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FileListProgress_OnAddFilesFromDirectoryStarted")]
  public static extern void FileListProgress_OnAddFilesFromDirectoryStarted(HandleRef jarg1, HandleRef jarg2, string jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_FileListProgress_OnDirectory")]
  public static extern void FileListProgress_OnDirectory(HandleRef jarg1, HandleRef jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_FileListProgress_OnFile")]
  public static extern void FileListProgress_OnFile(HandleRef jarg1, HandleRef jarg2, string jarg3, string jarg4, uint jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_FileListProgress_OnFilePush")]
  public static extern void FileListProgress_OnFilePush(HandleRef jarg1, string jarg2, uint jarg3, uint jarg4, uint jarg5, bool jarg6, HandleRef jarg7);

  [DllImport("RakNet", EntryPoint="CSharp_FLP_Printf_GetInstance")]
  public static extern IntPtr FLP_Printf_GetInstance();

  [DllImport("RakNet", EntryPoint="CSharp_FLP_Printf_DestroyInstance")]
  public static extern void FLP_Printf_DestroyInstance(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_FLP_Printf")]
  public static extern IntPtr new_FLP_Printf();

  [DllImport("RakNet", EntryPoint="CSharp_delete_FLP_Printf")]
  public static extern void delete_FLP_Printf(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FLP_Printf_OnAddFilesFromDirectoryStarted")]
  public static extern void FLP_Printf_OnAddFilesFromDirectoryStarted(HandleRef jarg1, HandleRef jarg2, string jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_FLP_Printf_OnDirectory")]
  public static extern void FLP_Printf_OnDirectory(HandleRef jarg1, HandleRef jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_FileList_GetInstance")]
  public static extern IntPtr FileList_GetInstance();

  [DllImport("RakNet", EntryPoint="CSharp_FileList_DestroyInstance")]
  public static extern void FileList_DestroyInstance(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_FileList")]
  public static extern IntPtr new_FileList();

  [DllImport("RakNet", EntryPoint="CSharp_delete_FileList")]
  public static extern void delete_FileList(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FileList_AddFilesFromDirectory")]
  public static extern void FileList_AddFilesFromDirectory(HandleRef jarg1, string jarg2, string jarg3, bool jarg4, bool jarg5, bool jarg6, HandleRef jarg7);

  [DllImport("RakNet", EntryPoint="CSharp_FileList_Clear")]
  public static extern void FileList_Clear(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FileList_Serialize")]
  public static extern void FileList_Serialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_FileList_Deserialize")]
  public static extern bool FileList_Deserialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_FileList_ListMissingOrChangedFiles")]
  public static extern void FileList_ListMissingOrChangedFiles(HandleRef jarg1, string jarg2, HandleRef jarg3, bool jarg4, bool jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_FileList_GetDeltaToCurrent")]
  public static extern void FileList_GetDeltaToCurrent(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, string jarg4, string jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_FileList_PopulateDataFromDisk")]
  public static extern void FileList_PopulateDataFromDisk(HandleRef jarg1, string jarg2, bool jarg3, bool jarg4, bool jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_FileList_FlagFilesAsReferences")]
  public static extern void FileList_FlagFilesAsReferences(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FileList_WriteDataToDisk")]
  public static extern void FileList_WriteDataToDisk(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_FileList_AddFile__SWIG_0")]
  public static extern void FileList_AddFile__SWIG_0(HandleRef jarg1, string jarg2, string jarg3, HandleRef jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_FileList_DeleteFiles")]
  public static extern void FileList_DeleteFiles(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_FileList_SetCallback")]
  public static extern void FileList_SetCallback(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_FileList_fileList_set")]
  public static extern void FileList_fileList_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_FileList_fileList_get")]
  public static extern IntPtr FileList_fileList_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FileList_FixEndingSlash")]
  public static extern bool FileList_FixEndingSlash(string jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FileList_AddFile__SWIG_1")]
  public static extern void FileList_AddFile__SWIG_1(HandleRef jarg1, string jarg2, string jarg3, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg4, uint jarg5, uint jarg6, HandleRef jarg7, bool jarg8);

  [DllImport("RakNet", EntryPoint="CSharp_FileList_AddFile__SWIG_2")]
  public static extern void FileList_AddFile__SWIG_2(HandleRef jarg1, string jarg2, string jarg3, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg4, uint jarg5, uint jarg6, HandleRef jarg7);

  [DllImport("RakNet", EntryPoint="CSharp_REMOTE_MAX_TEXT_INPUT_get")]
  public static extern int REMOTE_MAX_TEXT_INPUT_get();

  [DllImport("RakNet", EntryPoint="CSharp_delete_TransportInterface")]
  public static extern void delete_TransportInterface(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_TransportInterface_Start")]
  public static extern bool TransportInterface_Start(HandleRef jarg1, ushort jarg2, bool jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_TransportInterface_Stop")]
  public static extern void TransportInterface_Stop(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_TransportInterface_CloseConnection")]
  public static extern void TransportInterface_CloseConnection(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_TransportInterface_Receive")]
  public static extern IntPtr TransportInterface_Receive(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_TransportInterface_DeallocatePacket")]
  public static extern void TransportInterface_DeallocatePacket(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_TransportInterface_HasNewIncomingConnection")]
  public static extern IntPtr TransportInterface_HasNewIncomingConnection(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_TransportInterface_HasLostConnection")]
  public static extern IntPtr TransportInterface_HasLostConnection(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_TransportInterface_GetCommandParser")]
  public static extern IntPtr TransportInterface_GetCommandParser(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_TransportInterface_Send")]
  public static extern void TransportInterface_Send(HandleRef jarg1, HandleRef jarg2, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_delete_CommandParserInterface")]
  public static extern void delete_CommandParserInterface(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_CommandParserInterface_GetName")]
  public static extern string CommandParserInterface_GetName(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_CommandParserInterface_OnNewIncomingConnection")]
  public static extern void CommandParserInterface_OnNewIncomingConnection(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_CommandParserInterface_OnConnectionLost")]
  public static extern void CommandParserInterface_OnConnectionLost(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_CommandParserInterface_SendHelp")]
  public static extern void CommandParserInterface_SendHelp(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_CommandParserInterface_OnCommand")]
  public static extern bool CommandParserInterface_OnCommand(HandleRef jarg1, string jarg2, uint jarg3, [In, MarshalAs(UnmanagedType.LPArray)]string[] jarg4, HandleRef jarg5, HandleRef jarg6, string jarg7);

  [DllImport("RakNet", EntryPoint="CSharp_CommandParserInterface_OnTransportChange")]
  public static extern void CommandParserInterface_OnTransportChange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_CommandParserInterface_VARIABLE_NUMBER_OF_PARAMETERS_get")]
  public static extern byte CommandParserInterface_VARIABLE_NUMBER_OF_PARAMETERS_get();

  [DllImport("RakNet", EntryPoint="CSharp_CommandParserInterface_RegisterCommand")]
  public static extern void CommandParserInterface_RegisterCommand(HandleRef jarg1, byte jarg2, string jarg3, string jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_CommandParserInterface_ReturnResult__SWIG_0")]
  public static extern void CommandParserInterface_ReturnResult__SWIG_0(HandleRef jarg1, bool jarg2, string jarg3, HandleRef jarg4, HandleRef jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_CommandParserInterface_ReturnResult__SWIG_1")]
  public static extern void CommandParserInterface_ReturnResult__SWIG_1(HandleRef jarg1, string jarg2, string jarg3, HandleRef jarg4, HandleRef jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_CommandParserInterface_ReturnResult__SWIG_2")]
  public static extern void CommandParserInterface_ReturnResult__SWIG_2(HandleRef jarg1, HandleRef jarg2, string jarg3, HandleRef jarg4, HandleRef jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_CommandParserInterface_ReturnResult__SWIG_3")]
  public static extern void CommandParserInterface_ReturnResult__SWIG_3(HandleRef jarg1, int jarg2, string jarg3, HandleRef jarg4, HandleRef jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_CommandParserInterface_ReturnResult__SWIG_4")]
  public static extern void CommandParserInterface_ReturnResult__SWIG_4(HandleRef jarg1, string jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_CommandParserInterface_IntegersToSystemAddress")]
  public static extern IntPtr CommandParserInterface_IntegersToSystemAddress(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_LogCommandParser_GetInstance")]
  public static extern IntPtr LogCommandParser_GetInstance();

  [DllImport("RakNet", EntryPoint="CSharp_LogCommandParser_DestroyInstance")]
  public static extern void LogCommandParser_DestroyInstance(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_LogCommandParser")]
  public static extern IntPtr new_LogCommandParser();

  [DllImport("RakNet", EntryPoint="CSharp_delete_LogCommandParser")]
  public static extern void delete_LogCommandParser(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_LogCommandParser_OnCommand")]
  public static extern bool LogCommandParser_OnCommand(HandleRef jarg1, string jarg2, uint jarg3, [In, MarshalAs(UnmanagedType.LPArray)]string[] jarg4, HandleRef jarg5, HandleRef jarg6, string jarg7);

  [DllImport("RakNet", EntryPoint="CSharp_LogCommandParser_GetName")]
  public static extern string LogCommandParser_GetName(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_LogCommandParser_SendHelp")]
  public static extern void LogCommandParser_SendHelp(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_LogCommandParser_AddChannel")]
  public static extern void LogCommandParser_AddChannel(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_LogCommandParser_WriteLog")]
  public static extern void LogCommandParser_WriteLog(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_LogCommandParser_OnNewIncomingConnection")]
  public static extern void LogCommandParser_OnNewIncomingConnection(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_LogCommandParser_OnConnectionLost")]
  public static extern void LogCommandParser_OnConnectionLost(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_LogCommandParser_OnTransportChange")]
  public static extern void LogCommandParser_OnTransportChange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_MESSAGE_FILTER_MAX_MESSAGE_ID_get")]
  public static extern int MESSAGE_FILTER_MAX_MESSAGE_ID_get();

  [DllImport("RakNet", EntryPoint="CSharp_MessageFilter_GetInstance")]
  public static extern IntPtr MessageFilter_GetInstance();

  [DllImport("RakNet", EntryPoint="CSharp_MessageFilter_DestroyInstance")]
  public static extern void MessageFilter_DestroyInstance(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_MessageFilter")]
  public static extern IntPtr new_MessageFilter();

  [DllImport("RakNet", EntryPoint="CSharp_delete_MessageFilter")]
  public static extern void delete_MessageFilter(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_MessageFilter_SetAutoAddNewConnectionsToFilter")]
  public static extern void MessageFilter_SetAutoAddNewConnectionsToFilter(HandleRef jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_MessageFilter_SetAllowMessageID")]
  public static extern void MessageFilter_SetAllowMessageID(HandleRef jarg1, bool jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_MessageFilter_SetAllowRPC")]
  public static extern void MessageFilter_SetAllowRPC(HandleRef jarg1, bool jarg2, string jarg3, int jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_MessageFilter_SetActionOnDisallowedMessage")]
  public static extern void MessageFilter_SetActionOnDisallowedMessage(HandleRef jarg1, bool jarg2, bool jarg3, uint jarg4, int jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_MessageFilter_SetFilterMaxTime")]
  public static extern void MessageFilter_SetFilterMaxTime(HandleRef jarg1, int jarg2, bool jarg3, uint jarg4, int jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_MessageFilter_GetSystemFilterSet")]
  public static extern int MessageFilter_GetSystemFilterSet(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_MessageFilter_SetSystemFilterSet")]
  public static extern void MessageFilter_SetSystemFilterSet(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_MessageFilter_GetSystemCount")]
  public static extern uint MessageFilter_GetSystemCount(HandleRef jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_MessageFilter_GetSystemByIndex")]
  public static extern IntPtr MessageFilter_GetSystemByIndex(HandleRef jarg1, int jarg2, uint jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_MessageFilter_GetFilterSetCount")]
  public static extern uint MessageFilter_GetFilterSetCount(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_MessageFilter_GetFilterSetIDByIndex")]
  public static extern int MessageFilter_GetFilterSetIDByIndex(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_MessageFilter_DeleteFilterSet")]
  public static extern void MessageFilter_DeleteFilterSet(HandleRef jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_DirectoryDeltaTransfer_GetInstance")]
  public static extern IntPtr DirectoryDeltaTransfer_GetInstance();

  [DllImport("RakNet", EntryPoint="CSharp_DirectoryDeltaTransfer_DestroyInstance")]
  public static extern void DirectoryDeltaTransfer_DestroyInstance(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_DirectoryDeltaTransfer")]
  public static extern IntPtr new_DirectoryDeltaTransfer();

  [DllImport("RakNet", EntryPoint="CSharp_delete_DirectoryDeltaTransfer")]
  public static extern void delete_DirectoryDeltaTransfer(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_DirectoryDeltaTransfer_SetFileListTransferPlugin")]
  public static extern void DirectoryDeltaTransfer_SetFileListTransferPlugin(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_DirectoryDeltaTransfer_SetApplicationDirectory")]
  public static extern void DirectoryDeltaTransfer_SetApplicationDirectory(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_DirectoryDeltaTransfer_SetUploadSendParameters")]
  public static extern void DirectoryDeltaTransfer_SetUploadSendParameters(HandleRef jarg1, int jarg2, char jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_DirectoryDeltaTransfer_AddUploadsFromSubdirectory")]
  public static extern void DirectoryDeltaTransfer_AddUploadsFromSubdirectory(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_DirectoryDeltaTransfer_DownloadFromSubdirectory")]
  public static extern ushort DirectoryDeltaTransfer_DownloadFromSubdirectory(HandleRef jarg1, string jarg2, string jarg3, bool jarg4, HandleRef jarg5, HandleRef jarg6, int jarg7, char jarg8, HandleRef jarg9);

  [DllImport("RakNet", EntryPoint="CSharp_DirectoryDeltaTransfer_ClearUploads")]
  public static extern void DirectoryDeltaTransfer_ClearUploads(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_DirectoryDeltaTransfer_GetNumberOfFilesForUpload")]
  public static extern uint DirectoryDeltaTransfer_GetNumberOfFilesForUpload(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_DirectoryDeltaTransfer_SetDownloadRequestIncrementalReadInterface")]
  public static extern void DirectoryDeltaTransfer_SetDownloadRequestIncrementalReadInterface(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_FileListTransfer_GetInstance")]
  public static extern IntPtr FileListTransfer_GetInstance();

  [DllImport("RakNet", EntryPoint="CSharp_FileListTransfer_DestroyInstance")]
  public static extern void FileListTransfer_DestroyInstance(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_FileListTransfer")]
  public static extern IntPtr new_FileListTransfer();

  [DllImport("RakNet", EntryPoint="CSharp_delete_FileListTransfer")]
  public static extern void delete_FileListTransfer(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_FileListTransfer_SetupReceive")]
  public static extern ushort FileListTransfer_SetupReceive(HandleRef jarg1, HandleRef jarg2, bool jarg3, HandleRef jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_FileListTransfer_Send__SWIG_0")]
  public static extern void FileListTransfer_Send__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, ushort jarg5, int jarg6, char jarg7, HandleRef jarg8, uint jarg9);

  [DllImport("RakNet", EntryPoint="CSharp_FileListTransfer_Send__SWIG_1")]
  public static extern void FileListTransfer_Send__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, ushort jarg5, int jarg6, char jarg7, HandleRef jarg8);

  [DllImport("RakNet", EntryPoint="CSharp_FileListTransfer_Send__SWIG_2")]
  public static extern void FileListTransfer_Send__SWIG_2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, ushort jarg5, int jarg6, char jarg7);

  [DllImport("RakNet", EntryPoint="CSharp_FileListTransfer_GetPendingFilesToAddress")]
  public static extern uint FileListTransfer_GetPendingFilesToAddress(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_FileListTransfer_CancelReceive")]
  public static extern void FileListTransfer_CancelReceive(HandleRef jarg1, ushort jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_FileListTransfer_RemoveReceiver")]
  public static extern void FileListTransfer_RemoveReceiver(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_FileListTransfer_IsHandlerActive")]
  public static extern bool FileListTransfer_IsHandlerActive(HandleRef jarg1, ushort jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_FileListTransfer_SetCallback")]
  public static extern void FileListTransfer_SetCallback(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_FileListTransfer_GetCallback")]
  public static extern IntPtr FileListTransfer_GetCallback(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_ThreadsafePacketLogger")]
  public static extern IntPtr new_ThreadsafePacketLogger();

  [DllImport("RakNet", EntryPoint="CSharp_delete_ThreadsafePacketLogger")]
  public static extern void delete_ThreadsafePacketLogger(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_PacketConsoleLogger")]
  public static extern IntPtr new_PacketConsoleLogger();

  [DllImport("RakNet", EntryPoint="CSharp_PacketConsoleLogger_SetLogCommandParser")]
  public static extern void PacketConsoleLogger_SetLogCommandParser(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_PacketConsoleLogger_WriteLog")]
  public static extern void PacketConsoleLogger_WriteLog(HandleRef jarg1, string jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_delete_PacketConsoleLogger")]
  public static extern void delete_PacketConsoleLogger(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_ConnectionGraph2_GetInstance")]
  public static extern IntPtr ConnectionGraph2_GetInstance();

  [DllImport("RakNet", EntryPoint="CSharp_ConnectionGraph2_DestroyInstance")]
  public static extern void ConnectionGraph2_DestroyInstance(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_ConnectionGraph2_GetConnectionListForRemoteSystem")]
  public static extern bool ConnectionGraph2_GetConnectionListForRemoteSystem(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, out uint jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_ConnectionGraph2_ConnectionExists")]
  public static extern bool ConnectionGraph2_ConnectionExists(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_ConnectionGraph2_GetConnectionListForRemoteSystemHelper")]
  public static extern bool ConnectionGraph2_GetConnectionListForRemoteSystemHelper(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, ref uint jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_new_ConnectionGraph2")]
  public static extern IntPtr new_ConnectionGraph2();

  [DllImport("RakNet", EntryPoint="CSharp_delete_ConnectionGraph2")]
  public static extern void delete_ConnectionGraph2(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_RakNetListRakNetGUID__SWIG_0")]
  public static extern IntPtr new_RakNetListRakNetGUID__SWIG_0();

  [DllImport("RakNet", EntryPoint="CSharp_delete_RakNetListRakNetGUID")]
  public static extern void delete_RakNetListRakNetGUID(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_RakNetListRakNetGUID__SWIG_1")]
  public static extern IntPtr new_RakNetListRakNetGUID__SWIG_1(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListRakNetGUID_CopyData")]
  public static extern IntPtr RakNetListRakNetGUID_CopyData(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListRakNetGUID_Get")]
  public static extern IntPtr RakNetListRakNetGUID_Get(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListRakNetGUID_Push")]
  public static extern void RakNetListRakNetGUID_Push(HandleRef jarg1, HandleRef jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListRakNetGUID_Pop")]
  public static extern IntPtr RakNetListRakNetGUID_Pop(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListRakNetGUID_Insert__SWIG_0")]
  public static extern void RakNetListRakNetGUID_Insert__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3, string jarg4, uint jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListRakNetGUID_Insert__SWIG_1")]
  public static extern void RakNetListRakNetGUID_Insert__SWIG_1(HandleRef jarg1, HandleRef jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListRakNetGUID_Replace__SWIG_0")]
  public static extern void RakNetListRakNetGUID_Replace__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, uint jarg4, string jarg5, uint jarg6);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListRakNetGUID_Replace__SWIG_1")]
  public static extern void RakNetListRakNetGUID_Replace__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListRakNetGUID_RemoveAtIndex")]
  public static extern void RakNetListRakNetGUID_RemoveAtIndex(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListRakNetGUID_RemoveAtIndexFast")]
  public static extern void RakNetListRakNetGUID_RemoveAtIndexFast(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListRakNetGUID_RemoveFromEnd__SWIG_0")]
  public static extern void RakNetListRakNetGUID_RemoveFromEnd__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListRakNetGUID_RemoveFromEnd__SWIG_1")]
  public static extern void RakNetListRakNetGUID_RemoveFromEnd__SWIG_1(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListRakNetGUID_GetIndexOf")]
  public static extern uint RakNetListRakNetGUID_GetIndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListRakNetGUID_Size")]
  public static extern uint RakNetListRakNetGUID_Size(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListRakNetGUID_Clear")]
  public static extern void RakNetListRakNetGUID_Clear(HandleRef jarg1, bool jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListRakNetGUID_Preallocate")]
  public static extern void RakNetListRakNetGUID_Preallocate(HandleRef jarg1, uint jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListRakNetGUID_Compress")]
  public static extern void RakNetListRakNetGUID_Compress(HandleRef jarg1, string jarg2, uint jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_new_RakNetListSystemAddress__SWIG_0")]
  public static extern IntPtr new_RakNetListSystemAddress__SWIG_0();

  [DllImport("RakNet", EntryPoint="CSharp_delete_RakNetListSystemAddress")]
  public static extern void delete_RakNetListSystemAddress(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_RakNetListSystemAddress__SWIG_1")]
  public static extern IntPtr new_RakNetListSystemAddress__SWIG_1(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListSystemAddress_CopyData")]
  public static extern IntPtr RakNetListSystemAddress_CopyData(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListSystemAddress_Get")]
  public static extern IntPtr RakNetListSystemAddress_Get(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListSystemAddress_Push")]
  public static extern void RakNetListSystemAddress_Push(HandleRef jarg1, HandleRef jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListSystemAddress_Pop")]
  public static extern IntPtr RakNetListSystemAddress_Pop(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListSystemAddress_Insert__SWIG_0")]
  public static extern void RakNetListSystemAddress_Insert__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3, string jarg4, uint jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListSystemAddress_Insert__SWIG_1")]
  public static extern void RakNetListSystemAddress_Insert__SWIG_1(HandleRef jarg1, HandleRef jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListSystemAddress_Replace__SWIG_0")]
  public static extern void RakNetListSystemAddress_Replace__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, uint jarg4, string jarg5, uint jarg6);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListSystemAddress_Replace__SWIG_1")]
  public static extern void RakNetListSystemAddress_Replace__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListSystemAddress_RemoveAtIndex")]
  public static extern void RakNetListSystemAddress_RemoveAtIndex(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListSystemAddress_RemoveAtIndexFast")]
  public static extern void RakNetListSystemAddress_RemoveAtIndexFast(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListSystemAddress_RemoveFromEnd__SWIG_0")]
  public static extern void RakNetListSystemAddress_RemoveFromEnd__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListSystemAddress_RemoveFromEnd__SWIG_1")]
  public static extern void RakNetListSystemAddress_RemoveFromEnd__SWIG_1(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListSystemAddress_GetIndexOf")]
  public static extern uint RakNetListSystemAddress_GetIndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListSystemAddress_Size")]
  public static extern uint RakNetListSystemAddress_Size(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListSystemAddress_Clear")]
  public static extern void RakNetListSystemAddress_Clear(HandleRef jarg1, bool jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListSystemAddress_Preallocate")]
  public static extern void RakNetListSystemAddress_Preallocate(HandleRef jarg1, uint jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListSystemAddress_Compress")]
  public static extern void RakNetListSystemAddress_Compress(HandleRef jarg1, string jarg2, uint jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_new_RakNetListCell__SWIG_0")]
  public static extern IntPtr new_RakNetListCell__SWIG_0();

  [DllImport("RakNet", EntryPoint="CSharp_delete_RakNetListCell")]
  public static extern void delete_RakNetListCell(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_RakNetListCell__SWIG_1")]
  public static extern IntPtr new_RakNetListCell__SWIG_1(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListCell_CopyData")]
  public static extern IntPtr RakNetListCell_CopyData(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListCell_Get")]
  public static extern IntPtr RakNetListCell_Get(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListCell_Push")]
  public static extern void RakNetListCell_Push(HandleRef jarg1, HandleRef jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListCell_Pop")]
  public static extern IntPtr RakNetListCell_Pop(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListCell_Insert__SWIG_0")]
  public static extern void RakNetListCell_Insert__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3, string jarg4, uint jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListCell_Insert__SWIG_1")]
  public static extern void RakNetListCell_Insert__SWIG_1(HandleRef jarg1, HandleRef jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListCell_Replace__SWIG_0")]
  public static extern void RakNetListCell_Replace__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, uint jarg4, string jarg5, uint jarg6);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListCell_Replace__SWIG_1")]
  public static extern void RakNetListCell_Replace__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListCell_RemoveAtIndex")]
  public static extern void RakNetListCell_RemoveAtIndex(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListCell_RemoveAtIndexFast")]
  public static extern void RakNetListCell_RemoveAtIndexFast(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListCell_RemoveFromEnd__SWIG_0")]
  public static extern void RakNetListCell_RemoveFromEnd__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListCell_RemoveFromEnd__SWIG_1")]
  public static extern void RakNetListCell_RemoveFromEnd__SWIG_1(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListCell_Size")]
  public static extern uint RakNetListCell_Size(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListCell_Clear")]
  public static extern void RakNetListCell_Clear(HandleRef jarg1, bool jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListCell_Preallocate")]
  public static extern void RakNetListCell_Preallocate(HandleRef jarg1, uint jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListCell_Compress")]
  public static extern void RakNetListCell_Compress(HandleRef jarg1, string jarg2, uint jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_new_RakNetListColumnDescriptor__SWIG_0")]
  public static extern IntPtr new_RakNetListColumnDescriptor__SWIG_0();

  [DllImport("RakNet", EntryPoint="CSharp_delete_RakNetListColumnDescriptor")]
  public static extern void delete_RakNetListColumnDescriptor(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_RakNetListColumnDescriptor__SWIG_1")]
  public static extern IntPtr new_RakNetListColumnDescriptor__SWIG_1(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListColumnDescriptor_CopyData")]
  public static extern IntPtr RakNetListColumnDescriptor_CopyData(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListColumnDescriptor_Get")]
  public static extern IntPtr RakNetListColumnDescriptor_Get(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListColumnDescriptor_Push")]
  public static extern void RakNetListColumnDescriptor_Push(HandleRef jarg1, HandleRef jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListColumnDescriptor_Pop")]
  public static extern IntPtr RakNetListColumnDescriptor_Pop(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListColumnDescriptor_Insert__SWIG_0")]
  public static extern void RakNetListColumnDescriptor_Insert__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3, string jarg4, uint jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListColumnDescriptor_Insert__SWIG_1")]
  public static extern void RakNetListColumnDescriptor_Insert__SWIG_1(HandleRef jarg1, HandleRef jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListColumnDescriptor_Replace__SWIG_0")]
  public static extern void RakNetListColumnDescriptor_Replace__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, uint jarg4, string jarg5, uint jarg6);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListColumnDescriptor_Replace__SWIG_1")]
  public static extern void RakNetListColumnDescriptor_Replace__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListColumnDescriptor_RemoveAtIndex")]
  public static extern void RakNetListColumnDescriptor_RemoveAtIndex(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListColumnDescriptor_RemoveAtIndexFast")]
  public static extern void RakNetListColumnDescriptor_RemoveAtIndexFast(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListColumnDescriptor_RemoveFromEnd__SWIG_0")]
  public static extern void RakNetListColumnDescriptor_RemoveFromEnd__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListColumnDescriptor_RemoveFromEnd__SWIG_1")]
  public static extern void RakNetListColumnDescriptor_RemoveFromEnd__SWIG_1(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListColumnDescriptor_Size")]
  public static extern uint RakNetListColumnDescriptor_Size(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListColumnDescriptor_Clear")]
  public static extern void RakNetListColumnDescriptor_Clear(HandleRef jarg1, bool jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListColumnDescriptor_Preallocate")]
  public static extern void RakNetListColumnDescriptor_Preallocate(HandleRef jarg1, uint jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListColumnDescriptor_Compress")]
  public static extern void RakNetListColumnDescriptor_Compress(HandleRef jarg1, string jarg2, uint jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_new_RakNetListTableRow__SWIG_0")]
  public static extern IntPtr new_RakNetListTableRow__SWIG_0();

  [DllImport("RakNet", EntryPoint="CSharp_delete_RakNetListTableRow")]
  public static extern void delete_RakNetListTableRow(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_RakNetListTableRow__SWIG_1")]
  public static extern IntPtr new_RakNetListTableRow__SWIG_1(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListTableRow_CopyData")]
  public static extern IntPtr RakNetListTableRow_CopyData(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListTableRow_Get")]
  public static extern IntPtr RakNetListTableRow_Get(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListTableRow_Push")]
  public static extern void RakNetListTableRow_Push(HandleRef jarg1, HandleRef jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListTableRow_Pop")]
  public static extern IntPtr RakNetListTableRow_Pop(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListTableRow_Insert__SWIG_0")]
  public static extern void RakNetListTableRow_Insert__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3, string jarg4, uint jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListTableRow_Insert__SWIG_1")]
  public static extern void RakNetListTableRow_Insert__SWIG_1(HandleRef jarg1, HandleRef jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListTableRow_Replace__SWIG_0")]
  public static extern void RakNetListTableRow_Replace__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, uint jarg4, string jarg5, uint jarg6);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListTableRow_Replace__SWIG_1")]
  public static extern void RakNetListTableRow_Replace__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListTableRow_RemoveAtIndex")]
  public static extern void RakNetListTableRow_RemoveAtIndex(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListTableRow_RemoveAtIndexFast")]
  public static extern void RakNetListTableRow_RemoveAtIndexFast(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListTableRow_RemoveFromEnd__SWIG_0")]
  public static extern void RakNetListTableRow_RemoveFromEnd__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListTableRow_RemoveFromEnd__SWIG_1")]
  public static extern void RakNetListTableRow_RemoveFromEnd__SWIG_1(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListTableRow_Size")]
  public static extern uint RakNetListTableRow_Size(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListTableRow_Clear")]
  public static extern void RakNetListTableRow_Clear(HandleRef jarg1, bool jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListTableRow_Preallocate")]
  public static extern void RakNetListTableRow_Preallocate(HandleRef jarg1, uint jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListTableRow_Compress")]
  public static extern void RakNetListTableRow_Compress(HandleRef jarg1, string jarg2, uint jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_new_RakNetListFileListNode__SWIG_0")]
  public static extern IntPtr new_RakNetListFileListNode__SWIG_0();

  [DllImport("RakNet", EntryPoint="CSharp_delete_RakNetListFileListNode")]
  public static extern void delete_RakNetListFileListNode(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_RakNetListFileListNode__SWIG_1")]
  public static extern IntPtr new_RakNetListFileListNode__SWIG_1(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListFileListNode_CopyData")]
  public static extern IntPtr RakNetListFileListNode_CopyData(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListFileListNode_Get")]
  public static extern IntPtr RakNetListFileListNode_Get(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListFileListNode_Push")]
  public static extern void RakNetListFileListNode_Push(HandleRef jarg1, HandleRef jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListFileListNode_Pop")]
  public static extern IntPtr RakNetListFileListNode_Pop(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListFileListNode_Insert__SWIG_0")]
  public static extern void RakNetListFileListNode_Insert__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3, string jarg4, uint jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListFileListNode_Insert__SWIG_1")]
  public static extern void RakNetListFileListNode_Insert__SWIG_1(HandleRef jarg1, HandleRef jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListFileListNode_Replace__SWIG_0")]
  public static extern void RakNetListFileListNode_Replace__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, uint jarg4, string jarg5, uint jarg6);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListFileListNode_Replace__SWIG_1")]
  public static extern void RakNetListFileListNode_Replace__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListFileListNode_RemoveAtIndex")]
  public static extern void RakNetListFileListNode_RemoveAtIndex(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListFileListNode_RemoveAtIndexFast")]
  public static extern void RakNetListFileListNode_RemoveAtIndexFast(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListFileListNode_RemoveFromEnd__SWIG_0")]
  public static extern void RakNetListFileListNode_RemoveFromEnd__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListFileListNode_RemoveFromEnd__SWIG_1")]
  public static extern void RakNetListFileListNode_RemoveFromEnd__SWIG_1(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListFileListNode_Size")]
  public static extern uint RakNetListFileListNode_Size(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListFileListNode_Clear")]
  public static extern void RakNetListFileListNode_Clear(HandleRef jarg1, bool jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListFileListNode_Preallocate")]
  public static extern void RakNetListFileListNode_Preallocate(HandleRef jarg1, uint jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListFileListNode_Compress")]
  public static extern void RakNetListFileListNode_Compress(HandleRef jarg1, string jarg2, uint jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_new_RakNetListFilterQuery__SWIG_0")]
  public static extern IntPtr new_RakNetListFilterQuery__SWIG_0();

  [DllImport("RakNet", EntryPoint="CSharp_delete_RakNetListFilterQuery")]
  public static extern void delete_RakNetListFilterQuery(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_RakNetListFilterQuery__SWIG_1")]
  public static extern IntPtr new_RakNetListFilterQuery__SWIG_1(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListFilterQuery_CopyData")]
  public static extern IntPtr RakNetListFilterQuery_CopyData(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListFilterQuery_Get")]
  public static extern IntPtr RakNetListFilterQuery_Get(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListFilterQuery_Push")]
  public static extern void RakNetListFilterQuery_Push(HandleRef jarg1, HandleRef jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListFilterQuery_Pop")]
  public static extern IntPtr RakNetListFilterQuery_Pop(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListFilterQuery_Insert__SWIG_0")]
  public static extern void RakNetListFilterQuery_Insert__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3, string jarg4, uint jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListFilterQuery_Insert__SWIG_1")]
  public static extern void RakNetListFilterQuery_Insert__SWIG_1(HandleRef jarg1, HandleRef jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListFilterQuery_Replace__SWIG_0")]
  public static extern void RakNetListFilterQuery_Replace__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, uint jarg4, string jarg5, uint jarg6);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListFilterQuery_Replace__SWIG_1")]
  public static extern void RakNetListFilterQuery_Replace__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListFilterQuery_RemoveAtIndex")]
  public static extern void RakNetListFilterQuery_RemoveAtIndex(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListFilterQuery_RemoveAtIndexFast")]
  public static extern void RakNetListFilterQuery_RemoveAtIndexFast(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListFilterQuery_RemoveFromEnd__SWIG_0")]
  public static extern void RakNetListFilterQuery_RemoveFromEnd__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListFilterQuery_RemoveFromEnd__SWIG_1")]
  public static extern void RakNetListFilterQuery_RemoveFromEnd__SWIG_1(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListFilterQuery_Size")]
  public static extern uint RakNetListFilterQuery_Size(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListFilterQuery_Clear")]
  public static extern void RakNetListFilterQuery_Clear(HandleRef jarg1, bool jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListFilterQuery_Preallocate")]
  public static extern void RakNetListFilterQuery_Preallocate(HandleRef jarg1, uint jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListFilterQuery_Compress")]
  public static extern void RakNetListFilterQuery_Compress(HandleRef jarg1, string jarg2, uint jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_new_RakNetListSortQuery__SWIG_0")]
  public static extern IntPtr new_RakNetListSortQuery__SWIG_0();

  [DllImport("RakNet", EntryPoint="CSharp_delete_RakNetListSortQuery")]
  public static extern void delete_RakNetListSortQuery(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_RakNetListSortQuery__SWIG_1")]
  public static extern IntPtr new_RakNetListSortQuery__SWIG_1(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListSortQuery_CopyData")]
  public static extern IntPtr RakNetListSortQuery_CopyData(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListSortQuery_Get")]
  public static extern IntPtr RakNetListSortQuery_Get(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListSortQuery_Push")]
  public static extern void RakNetListSortQuery_Push(HandleRef jarg1, HandleRef jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListSortQuery_Pop")]
  public static extern IntPtr RakNetListSortQuery_Pop(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListSortQuery_Insert__SWIG_0")]
  public static extern void RakNetListSortQuery_Insert__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3, string jarg4, uint jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListSortQuery_Insert__SWIG_1")]
  public static extern void RakNetListSortQuery_Insert__SWIG_1(HandleRef jarg1, HandleRef jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListSortQuery_Replace__SWIG_0")]
  public static extern void RakNetListSortQuery_Replace__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, uint jarg4, string jarg5, uint jarg6);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListSortQuery_Replace__SWIG_1")]
  public static extern void RakNetListSortQuery_Replace__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListSortQuery_RemoveAtIndex")]
  public static extern void RakNetListSortQuery_RemoveAtIndex(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListSortQuery_RemoveAtIndexFast")]
  public static extern void RakNetListSortQuery_RemoveAtIndexFast(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListSortQuery_RemoveFromEnd__SWIG_0")]
  public static extern void RakNetListSortQuery_RemoveFromEnd__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListSortQuery_RemoveFromEnd__SWIG_1")]
  public static extern void RakNetListSortQuery_RemoveFromEnd__SWIG_1(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListSortQuery_Size")]
  public static extern uint RakNetListSortQuery_Size(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListSortQuery_Clear")]
  public static extern void RakNetListSortQuery_Clear(HandleRef jarg1, bool jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListSortQuery_Preallocate")]
  public static extern void RakNetListSortQuery_Preallocate(HandleRef jarg1, uint jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListSortQuery_Compress")]
  public static extern void RakNetListSortQuery_Compress(HandleRef jarg1, string jarg2, uint jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_new_RakNetListCellPointer__SWIG_0")]
  public static extern IntPtr new_RakNetListCellPointer__SWIG_0();

  [DllImport("RakNet", EntryPoint="CSharp_delete_RakNetListCellPointer")]
  public static extern void delete_RakNetListCellPointer(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_RakNetListCellPointer__SWIG_1")]
  public static extern IntPtr new_RakNetListCellPointer__SWIG_1(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListCellPointer_CopyData")]
  public static extern IntPtr RakNetListCellPointer_CopyData(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListCellPointer_Push")]
  public static extern void RakNetListCellPointer_Push(HandleRef jarg1, HandleRef jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListCellPointer_Insert__SWIG_0")]
  public static extern void RakNetListCellPointer_Insert__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3, string jarg4, uint jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListCellPointer_Insert__SWIG_1")]
  public static extern void RakNetListCellPointer_Insert__SWIG_1(HandleRef jarg1, HandleRef jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListCellPointer_Replace__SWIG_0")]
  public static extern void RakNetListCellPointer_Replace__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, uint jarg4, string jarg5, uint jarg6);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListCellPointer_Replace__SWIG_1")]
  public static extern void RakNetListCellPointer_Replace__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListCellPointer_RemoveAtIndex")]
  public static extern void RakNetListCellPointer_RemoveAtIndex(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListCellPointer_RemoveAtIndexFast")]
  public static extern void RakNetListCellPointer_RemoveAtIndexFast(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListCellPointer_RemoveFromEnd__SWIG_0")]
  public static extern void RakNetListCellPointer_RemoveFromEnd__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListCellPointer_RemoveFromEnd__SWIG_1")]
  public static extern void RakNetListCellPointer_RemoveFromEnd__SWIG_1(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListCellPointer_GetIndexOf")]
  public static extern uint RakNetListCellPointer_GetIndexOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListCellPointer_Size")]
  public static extern uint RakNetListCellPointer_Size(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListCellPointer_Clear")]
  public static extern void RakNetListCellPointer_Clear(HandleRef jarg1, bool jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListCellPointer_Preallocate")]
  public static extern void RakNetListCellPointer_Preallocate(HandleRef jarg1, uint jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListCellPointer_Compress")]
  public static extern void RakNetListCellPointer_Compress(HandleRef jarg1, string jarg2, uint jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListCellPointer_GetHelper")]
  public static extern IntPtr RakNetListCellPointer_GetHelper(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListCellPointer_PopHelper")]
  public static extern IntPtr RakNetListCellPointer_PopHelper(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_UnsignedShortPointer")]
  public static extern IntPtr new_UnsignedShortPointer();

  [DllImport("RakNet", EntryPoint="CSharp_delete_UnsignedShortPointer")]
  public static extern void delete_UnsignedShortPointer(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_UnsignedShortPointer_assign")]
  public static extern void UnsignedShortPointer_assign(HandleRef jarg1, ushort jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_UnsignedShortPointer_value")]
  public static extern ushort UnsignedShortPointer_value(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_UnsignedShortPointer_cast")]
  public static extern IntPtr UnsignedShortPointer_cast(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_UnsignedShortPointer_frompointer")]
  public static extern IntPtr UnsignedShortPointer_frompointer(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_RakNetListUnsignedShort__SWIG_0")]
  public static extern IntPtr new_RakNetListUnsignedShort__SWIG_0();

  [DllImport("RakNet", EntryPoint="CSharp_delete_RakNetListUnsignedShort")]
  public static extern void delete_RakNetListUnsignedShort(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_RakNetListUnsignedShort__SWIG_1")]
  public static extern IntPtr new_RakNetListUnsignedShort__SWIG_1(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListUnsignedShort_CopyData")]
  public static extern IntPtr RakNetListUnsignedShort_CopyData(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListUnsignedShort_GetHelper")]
  public static extern IntPtr RakNetListUnsignedShort_GetHelper(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListUnsignedShort_Push")]
  public static extern void RakNetListUnsignedShort_Push(HandleRef jarg1, ushort jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListUnsignedShort_PopHelper")]
  public static extern IntPtr RakNetListUnsignedShort_PopHelper(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListUnsignedShort_Insert__SWIG_0")]
  public static extern void RakNetListUnsignedShort_Insert__SWIG_0(HandleRef jarg1, ushort jarg2, uint jarg3, string jarg4, uint jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListUnsignedShort_Insert__SWIG_1")]
  public static extern void RakNetListUnsignedShort_Insert__SWIG_1(HandleRef jarg1, ushort jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListUnsignedShort_Replace__SWIG_0")]
  public static extern void RakNetListUnsignedShort_Replace__SWIG_0(HandleRef jarg1, ushort jarg2, ushort jarg3, uint jarg4, string jarg5, uint jarg6);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListUnsignedShort_Replace__SWIG_1")]
  public static extern void RakNetListUnsignedShort_Replace__SWIG_1(HandleRef jarg1, ushort jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListUnsignedShort_RemoveAtIndex")]
  public static extern void RakNetListUnsignedShort_RemoveAtIndex(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListUnsignedShort_RemoveAtIndexFast")]
  public static extern void RakNetListUnsignedShort_RemoveAtIndexFast(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListUnsignedShort_RemoveFromEnd__SWIG_0")]
  public static extern void RakNetListUnsignedShort_RemoveFromEnd__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListUnsignedShort_RemoveFromEnd__SWIG_1")]
  public static extern void RakNetListUnsignedShort_RemoveFromEnd__SWIG_1(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListUnsignedShort_GetIndexOf")]
  public static extern uint RakNetListUnsignedShort_GetIndexOf(HandleRef jarg1, ushort jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListUnsignedShort_Size")]
  public static extern uint RakNetListUnsignedShort_Size(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListUnsignedShort_Clear")]
  public static extern void RakNetListUnsignedShort_Clear(HandleRef jarg1, bool jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListUnsignedShort_Preallocate")]
  public static extern void RakNetListUnsignedShort_Preallocate(HandleRef jarg1, uint jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListUnsignedShort_Compress")]
  public static extern void RakNetListUnsignedShort_Compress(HandleRef jarg1, string jarg2, uint jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_new_UnsignedIntPointer")]
  public static extern IntPtr new_UnsignedIntPointer();

  [DllImport("RakNet", EntryPoint="CSharp_delete_UnsignedIntPointer")]
  public static extern void delete_UnsignedIntPointer(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_UnsignedIntPointer_assign")]
  public static extern void UnsignedIntPointer_assign(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_UnsignedIntPointer_value")]
  public static extern uint UnsignedIntPointer_value(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_UnsignedIntPointer_cast")]
  public static extern IntPtr UnsignedIntPointer_cast(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_UnsignedIntPointer_frompointer")]
  public static extern IntPtr UnsignedIntPointer_frompointer(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_RakNetListUnsignedInt__SWIG_0")]
  public static extern IntPtr new_RakNetListUnsignedInt__SWIG_0();

  [DllImport("RakNet", EntryPoint="CSharp_delete_RakNetListUnsignedInt")]
  public static extern void delete_RakNetListUnsignedInt(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_RakNetListUnsignedInt__SWIG_1")]
  public static extern IntPtr new_RakNetListUnsignedInt__SWIG_1(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListUnsignedInt_CopyData")]
  public static extern IntPtr RakNetListUnsignedInt_CopyData(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListUnsignedInt_GetHelper")]
  public static extern IntPtr RakNetListUnsignedInt_GetHelper(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListUnsignedInt_Push")]
  public static extern void RakNetListUnsignedInt_Push(HandleRef jarg1, uint jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListUnsignedInt_PopHelper")]
  public static extern IntPtr RakNetListUnsignedInt_PopHelper(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListUnsignedInt_Insert__SWIG_0")]
  public static extern void RakNetListUnsignedInt_Insert__SWIG_0(HandleRef jarg1, uint jarg2, uint jarg3, string jarg4, uint jarg5);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListUnsignedInt_Insert__SWIG_1")]
  public static extern void RakNetListUnsignedInt_Insert__SWIG_1(HandleRef jarg1, uint jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListUnsignedInt_Replace__SWIG_0")]
  public static extern void RakNetListUnsignedInt_Replace__SWIG_0(HandleRef jarg1, uint jarg2, uint jarg3, uint jarg4, string jarg5, uint jarg6);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListUnsignedInt_Replace__SWIG_1")]
  public static extern void RakNetListUnsignedInt_Replace__SWIG_1(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListUnsignedInt_RemoveAtIndex")]
  public static extern void RakNetListUnsignedInt_RemoveAtIndex(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListUnsignedInt_RemoveAtIndexFast")]
  public static extern void RakNetListUnsignedInt_RemoveAtIndexFast(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListUnsignedInt_RemoveFromEnd__SWIG_0")]
  public static extern void RakNetListUnsignedInt_RemoveFromEnd__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListUnsignedInt_RemoveFromEnd__SWIG_1")]
  public static extern void RakNetListUnsignedInt_RemoveFromEnd__SWIG_1(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListUnsignedInt_GetIndexOf")]
  public static extern uint RakNetListUnsignedInt_GetIndexOf(HandleRef jarg1, uint jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListUnsignedInt_Size")]
  public static extern uint RakNetListUnsignedInt_Size(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListUnsignedInt_Clear")]
  public static extern void RakNetListUnsignedInt_Clear(HandleRef jarg1, bool jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListUnsignedInt_Preallocate")]
  public static extern void RakNetListUnsignedInt_Preallocate(HandleRef jarg1, uint jarg2, string jarg3, uint jarg4);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetListUnsignedInt_Compress")]
  public static extern void RakNetListUnsignedInt_Compress(HandleRef jarg1, string jarg2, uint jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetPageRow_isLeaf_set")]
  public static extern void RakNetPageRow_isLeaf_set(HandleRef jarg1, bool jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetPageRow_isLeaf_get")]
  public static extern bool RakNetPageRow_isLeaf_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetPageRow_size_set")]
  public static extern void RakNetPageRow_size_set(HandleRef jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetPageRow_size_get")]
  public static extern int RakNetPageRow_size_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetPageRow_next_set")]
  public static extern void RakNetPageRow_next_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetPageRow_next_get")]
  public static extern IntPtr RakNetPageRow_next_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetPageRow_previous_set")]
  public static extern void RakNetPageRow_previous_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetPageRow_previous_get")]
  public static extern IntPtr RakNetPageRow_previous_get(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_RakNetPageRow")]
  public static extern IntPtr new_RakNetPageRow();

  [DllImport("RakNet", EntryPoint="CSharp_delete_RakNetPageRow")]
  public static extern void delete_RakNetPageRow(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_new_RakNetBPlusTreeRow")]
  public static extern IntPtr new_RakNetBPlusTreeRow();

  [DllImport("RakNet", EntryPoint="CSharp_delete_RakNetBPlusTreeRow")]
  public static extern void delete_RakNetBPlusTreeRow(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetBPlusTreeRow_SetPoolPageSize")]
  public static extern void RakNetBPlusTreeRow_SetPoolPageSize(HandleRef jarg1, int jarg2);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetBPlusTreeRow_Insert")]
  public static extern bool RakNetBPlusTreeRow_Insert(HandleRef jarg1, uint jarg2, HandleRef jarg3);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetBPlusTreeRow_Clear")]
  public static extern void RakNetBPlusTreeRow_Clear(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetBPlusTreeRow_Size")]
  public static extern uint RakNetBPlusTreeRow_Size(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetBPlusTreeRow_IsEmpty")]
  public static extern bool RakNetBPlusTreeRow_IsEmpty(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetBPlusTreeRow_GetListHead")]
  public static extern IntPtr RakNetBPlusTreeRow_GetListHead(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetBPlusTreeRow_GetDataHead")]
  public static extern IntPtr RakNetBPlusTreeRow_GetDataHead(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetBPlusTreeRow_PrintLeaves")]
  public static extern void RakNetBPlusTreeRow_PrintLeaves(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakNetBPlusTreeRow_PrintGraph")]
  public static extern void RakNetBPlusTreeRow_PrintGraph(HandleRef jarg1);

  [DllImport("RakNet", EntryPoint="CSharp_RakPeerUpcast")]
  public static extern IntPtr RakPeerUpcast(IntPtr objectRef);

  [DllImport("RakNet", EntryPoint="CSharp_PacketLoggerUpcast")]
  public static extern IntPtr PacketLoggerUpcast(IntPtr objectRef);

  [DllImport("RakNet", EntryPoint="CSharp_PacketFileLoggerUpcast")]
  public static extern IntPtr PacketFileLoggerUpcast(IntPtr objectRef);

  [DllImport("RakNet", EntryPoint="CSharp_NatTypeDetectionClientUpcast")]
  public static extern IntPtr NatTypeDetectionClientUpcast(IntPtr objectRef);

  [DllImport("RakNet", EntryPoint="CSharp_NatPunchthroughDebugInterface_PrintfUpcast")]
  public static extern IntPtr NatPunchthroughDebugInterface_PrintfUpcast(IntPtr objectRef);

  [DllImport("RakNet", EntryPoint="CSharp_NatPunchthroughDebugInterface_PacketLoggerUpcast")]
  public static extern IntPtr NatPunchthroughDebugInterface_PacketLoggerUpcast(IntPtr objectRef);

  [DllImport("RakNet", EntryPoint="CSharp_NatPunchthroughClientUpcast")]
  public static extern IntPtr NatPunchthroughClientUpcast(IntPtr objectRef);

  [DllImport("RakNet", EntryPoint="CSharp_Router2Upcast")]
  public static extern IntPtr Router2Upcast(IntPtr objectRef);

  [DllImport("RakNet", EntryPoint="CSharp_UDPProxyClientUpcast")]
  public static extern IntPtr UDPProxyClientUpcast(IntPtr objectRef);

  [DllImport("RakNet", EntryPoint="CSharp_FullyConnectedMesh2Upcast")]
  public static extern IntPtr FullyConnectedMesh2Upcast(IntPtr objectRef);

  [DllImport("RakNet", EntryPoint="CSharp_ReadyEventUpcast")]
  public static extern IntPtr ReadyEventUpcast(IntPtr objectRef);

  [DllImport("RakNet", EntryPoint="CSharp_TeamBalancerUpcast")]
  public static extern IntPtr TeamBalancerUpcast(IntPtr objectRef);

  [DllImport("RakNet", EntryPoint="CSharp_NatPunchthroughServerDebugInterface_PrintfUpcast")]
  public static extern IntPtr NatPunchthroughServerDebugInterface_PrintfUpcast(IntPtr objectRef);

  [DllImport("RakNet", EntryPoint="CSharp_NatPunchthroughServerDebugInterface_PacketLoggerUpcast")]
  public static extern IntPtr NatPunchthroughServerDebugInterface_PacketLoggerUpcast(IntPtr objectRef);

  [DllImport("RakNet", EntryPoint="CSharp_NatPunchthroughServerUpcast")]
  public static extern IntPtr NatPunchthroughServerUpcast(IntPtr objectRef);

  [DllImport("RakNet", EntryPoint="CSharp_UDPProxyServerUpcast")]
  public static extern IntPtr UDPProxyServerUpcast(IntPtr objectRef);

  [DllImport("RakNet", EntryPoint="CSharp_UDPProxyCoordinatorUpcast")]
  public static extern IntPtr UDPProxyCoordinatorUpcast(IntPtr objectRef);

  [DllImport("RakNet", EntryPoint="CSharp_NatTypeDetectionServerUpcast")]
  public static extern IntPtr NatTypeDetectionServerUpcast(IntPtr objectRef);

  [DllImport("RakNet", EntryPoint="CSharp_FLP_PrintfUpcast")]
  public static extern IntPtr FLP_PrintfUpcast(IntPtr objectRef);

  [DllImport("RakNet", EntryPoint="CSharp_LogCommandParserUpcast")]
  public static extern IntPtr LogCommandParserUpcast(IntPtr objectRef);

  [DllImport("RakNet", EntryPoint="CSharp_MessageFilterUpcast")]
  public static extern IntPtr MessageFilterUpcast(IntPtr objectRef);

  [DllImport("RakNet", EntryPoint="CSharp_DirectoryDeltaTransferUpcast")]
  public static extern IntPtr DirectoryDeltaTransferUpcast(IntPtr objectRef);

  [DllImport("RakNet", EntryPoint="CSharp_FileListTransferUpcast")]
  public static extern IntPtr FileListTransferUpcast(IntPtr objectRef);

  [DllImport("RakNet", EntryPoint="CSharp_ThreadsafePacketLoggerUpcast")]
  public static extern IntPtr ThreadsafePacketLoggerUpcast(IntPtr objectRef);

  [DllImport("RakNet", EntryPoint="CSharp_PacketConsoleLoggerUpcast")]
  public static extern IntPtr PacketConsoleLoggerUpcast(IntPtr objectRef);

  [DllImport("RakNet", EntryPoint="CSharp_ConnectionGraph2Upcast")]
  public static extern IntPtr ConnectionGraph2Upcast(IntPtr objectRef);
}

}
