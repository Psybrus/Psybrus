<!-- This comment will put IE 6, 7 and 8 in quirks mode -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>wxPropertyGrid: wxPropertyGrid Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javaScript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.6.3 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "search",false,'Search');
--></script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <img id="MSearchSelect" src="search/search.png"
             onmouseover="return searchBox.OnSearchSelectShow()"
             onmouseout="return searchBox.OnSearchSelectHide()"
             alt=""/>
        <input type="text" id="MSearchField" value="Search" accesskey="S"
             onfocus="searchBox.OnSearchFieldFocus(true)" 
             onblur="searchBox.OnSearchFieldFocus(false)" 
             onkeyup="searchBox.OnSearchFieldChange(event)"/>
        <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
        </div>
      </li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.htm"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>wxPropertyGrid Class Reference</h1><!-- doxytag: class="wxPropertyGrid" --><!-- doxytag: inherits="wxPropertyGridInterface" -->
<p><a class="el" href="classwxPropertyGrid.htm" title="wxPropertyGrid is a specialized two-column grid for editing properties such as strings...">wxPropertyGrid</a> is a specialized two-column grid for editing properties such as strings, numbers, flagsets, fonts, and colours.  
<a href="#_details">More...</a></p>

<p><code>#include &lt;propgrid.h&gt;</code></p>
<div class="dynheader">
Inheritance diagram for wxPropertyGrid:</div>
<div class="dynsection">
 <div class="center">
  <img src="classwxPropertyGrid.png" usemap="#wxPropertyGrid_map" alt=""/>
  <map id="wxPropertyGrid_map" name="wxPropertyGrid_map">
<area href="classwxPropertyGridInterface.htm" alt="wxPropertyGridInterface" shape="rect" coords="0,0,150,24"/>
</map>
 </div>
</div>

<p><a href="classwxPropertyGrid-members.htm">List of all members.</a></p>
<table border="0" cellpadding="0" cellspacing="0">
<tr><td colspan="2"><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#af19463a573440f6bc928ceaa60a1e5e6">AddActionTrigger</a> (int action, int keycode, int modifiers=0)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Adds given key combination to trigger given action.  <a href="#af19463a573440f6bc928ceaa60a1e5e6"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a3bf9a182fefadf6146ede040fe593d35">AddToSelection</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Adds given property into selection.  <a href="#a3bf9a182fefadf6146ede040fe593d35"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a673bd38e5bce749a99384bc5c19443c3"></a><!-- doxytag: member="wxPropertyGrid::AdjustPosForClipperWindow" ref="a673bd38e5bce749a99384bc5c19443c3" args="(wxWindow *topCtrlWnd, int *x, int *y)" -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a673bd38e5bce749a99384bc5c19443c3">AdjustPosForClipperWindow</a> (wxWindow *topCtrlWnd, int *x, int *y)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Adjusts given position if topCtrlWnd is child of clipper window. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a3bb033b1f2faa0b7afe70d8fe849287a">BeginLabelEdit</a> (unsigned int column=0)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Creates label editor wxTextCtrl for given column, for property that is currently selected.  <a href="#a3bb033b1f2faa0b7afe70d8fe849287a"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a27e13a68f94e504e45ac78069cdfdfca">CanClose</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if all property grid data changes have been committed.  <a href="#a27e13a68f94e504e45ac78069cdfdfca"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a6803d445ae77514558ec4ad00a25f65a">CenterSplitter</a> (bool enableAutoResizing=false)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Centers the splitter.  <a href="#a6803d445ae77514558ec4ad00a25f65a"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a6958b5c1a1f71512afaf6f2c07c1becd">ChangePropertyValue</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, wxVariant newValue)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Changes value of a property, as if from an editor.  <a href="#a6958b5c1a1f71512afaf6f2c07c1becd"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a48ef39121da1882f16f2cbf868cc0f2c">Clear</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Deletes all properties.  <a href="#a48ef39121da1882f16f2cbf868cc0f2c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#adb1e0d4270da795649f7e323b41f5a6b">ClearActionTriggers</a> (int action)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Clears action triggers for given action.  <a href="#adb1e0d4270da795649f7e323b41f5a6b"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae50907686debd725fc0ef91da82add58"></a><!-- doxytag: member="wxPropertyGrid::ClearInternalFlag" ref="ae50907686debd725fc0ef91da82add58" args="(long flag)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>ClearInternalFlag</b> (long flag)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a906fa1c60a2b5424b89783d31625405d"></a><!-- doxytag: member="wxPropertyGrid::ClearModifiedStatus" ref="a906fa1c60a2b5424b89783d31625405d" args="()" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a906fa1c60a2b5424b89783d31625405d">ClearModifiedStatus</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Resets modified status of all properties. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aad447e562da1118f2ada082b400df0bb"></a><!-- doxytag: member="wxPropertyGrid::ClearModifiedStatus" ref="aad447e562da1118f2ada082b400df0bb" args="(wxPGPropArg id)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#aad447e562da1118f2ada082b400df0bb">ClearModifiedStatus</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Resets modified status of a property and all sub-properties. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#aa5ecbaa8cb6292bd1f75d22b013b3df0">ClearTargetPage</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Synonymous to Clear.  <a href="#aa5ecbaa8cb6292bd1f75d22b013b3df0"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a6e06d92a622237457fea00372df1eaae">CommitChangesFromEditor</a> (wxUint32 flags=0)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Forces updating the value of property from the editor control.  <a href="#a6e06d92a622237457fea00372df1eaae"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a78b4ef054ec7a3c37c1ec7d54dba9246">Create</a> (wxWindow *parent, wxWindowID id=wxID_ANY, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=(0), const wxString &amp;name=wxPropertyGridNameStr)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Two step creation.  <a href="#a78b4ef054ec7a3c37c1ec7d54dba9246"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9343fceeec5c3ad34197e8c7509f3a77"></a><!-- doxytag: member="wxPropertyGrid::DecFrozen" ref="a9343fceeec5c3ad34197e8c7509f3a77" args="()" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>DecFrozen</b> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#af170d02811ab8eed906963de693b79aa">DoHidePropertyError</a> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *property)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Override in derived class to hide an error displayed by <a class="el" href="classwxPropertyGrid.htm#a6eff1187beba43109be7a12194b0bf2b" title="Override in derived class to display error messages in custom manner (these message...">DoShowPropertyError()</a>.  <a href="#af170d02811ab8eed906963de693b79aa"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a55a0e3496523b449ea22e49e1b260751">DoOnValidationFailure</a> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *property, wxVariant &amp;invalidValue)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Override to customize property validation failure behavior.  <a href="#a55a0e3496523b449ea22e49e1b260751"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a3dd9b2ac540c9856251d6ec5c10e3210">DoOnValidationFailureReset</a> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *property)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Override to customize resetting of property validation failure status.  <a href="#a3dd9b2ac540c9856251d6ec5c10e3210"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6a352524211e701bca6d402b2e4fcb12"></a><!-- doxytag: member="wxPropertyGrid::DoPropertyChanged" ref="a6a352524211e701bca6d402b2e4fcb12" args="(wxPGProperty *p, unsigned int selFlags=0)" -->
virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a6a352524211e701bca6d402b2e4fcb12">DoPropertyChanged</a> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *p, unsigned int selFlags=0)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Pending value is expected to be passed in <a class="el" href="classwxPropertyGrid.htm#a07fca99e433b6c9563cf99d5e308c237" title="Runs all validation functionality (includes sending wxEVT_PG_CHANGING).">PerformValidation()</a>. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a6eff1187beba43109be7a12194b0bf2b">DoShowPropertyError</a> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *property, const wxString &amp;msg)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Override in derived class to display error messages in custom manner (these message usually only result from validation failure).  <a href="#a6eff1187beba43109be7a12194b0bf2b"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa217ef9aeb2b80ad772229220801d3ca"></a><!-- doxytag: member="wxPropertyGrid::DrawItem" ref="aa217ef9aeb2b80ad772229220801d3ca" args="(wxPGProperty *p)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>DrawItem</b> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *p)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a57900d8e3a6bfd95da67981e0c378eee"></a><!-- doxytag: member="wxPropertyGrid::DrawItemAndChildren" ref="a57900d8e3a6bfd95da67981e0c378eee" args="(wxPGProperty *p)" -->
virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><b>DrawItemAndChildren</b> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *p)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a55ba9fae4a12455393077397944b44d7">DrawItemAndValueRelated</a> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *p)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Draws item, children, and consequtive parents as long as category is not met.  <a href="#a55ba9fae4a12455393077397944b44d7"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a98d434dc2d39b242aa98a0359143d5a3">EditorsValueWasModified</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Call when editor widget's contents is modified.  <a href="#a98d434dc2d39b242aa98a0359143d5a3"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a29f61bcb090bcb7d420d2e6d2b6d38e3">EditorsValueWasNotModified</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Reverse of <a class="el" href="classwxPropertyGrid.htm#a98d434dc2d39b242aa98a0359143d5a3" title="Call when editor widget&#39;s contents is modified.">EditorsValueWasModified()</a>.  <a href="#a29f61bcb090bcb7d420d2e6d2b6d38e3"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a4665c5bd10d1faa1c7cf9f8524bdf67c">EditorValidate</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if all property grid data changes have been committed.  <a href="#a4665c5bd10d1faa1c7cf9f8524bdf67c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a69fd5ebd1012ee52f35721c824327278">EnableCategories</a> (bool enable)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Enables or disables (shows/hides) categories according to parameter enable.  <a href="#a69fd5ebd1012ee52f35721c824327278"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a6ce64394848fef5da64ae050a780de87">EndLabelEdit</a> (bool commit=true)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Destroys label editor wxTextCtrl, if any.  <a href="#a6ce64394848fef5da64ae050a780de87"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a96df37bf51702982294faf5991c7ae27">EnsureVisible</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Scrolls and/or expands items to ensure that the given item is visible.  <a href="#a96df37bf51702982294faf5991c7ae27"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">wxSize&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#aa05232102d44635763e27df0d91b5eed">FitColumns</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Reduces column sizes to minimum possible that contents are still visibly (naturally some margin space will be applied as well).  <a href="#aa05232102d44635763e27df0d91b5eed"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a73af46e13ed2c2799ff379d44b1d1d10">FixPosForTextCtrl</a> (wxWindow *ctrl, unsigned int forColumn=1, const wxPoint &amp;offset=wxPoint(0, 0))</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Fixes position of wxTextCtrl-like control (wxSpinCtrl usually fits as one).  <a href="#a73af46e13ed2c2799ff379d44b1d1d10"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">wxWindow *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a64d0c66c00a5ae225975ca2fd7284a3b">GenerateEditorButton</a> (const wxPoint &amp;pos, const wxSize &amp;sz)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Shortcut for creating dialog-caller button.  <a href="#a64d0c66c00a5ae225975ca2fd7284a3b"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">wxWindow *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a9b0ed30235087036f0e15fc9c13e182b">GenerateEditorTextCtrl</a> (const wxPoint &amp;pos, const wxSize &amp;sz, const wxString &amp;value, wxWindow *secondary, int extraStyle=0, int maxLen=0, unsigned int forColumn=1)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Shortcut for creating text editor widget.  <a href="#a9b0ed30235087036f0e15fc9c13e182b"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aefe88a2495c46cfcd5ae19f0a09c3fc4"></a><!-- doxytag: member="wxPropertyGrid::GenerateEditorTextCtrlAndButton" ref="aefe88a2495c46cfcd5ae19f0a09c3fc4" args="(const wxPoint &amp;pos, const wxSize &amp;sz, wxWindow **psecondary, int limited_editing, wxPGProperty *property)" -->
wxWindow *&nbsp;</td><td class="memItemRight" valign="bottom"><b>GenerateEditorTextCtrlAndButton</b> (const wxPoint &amp;pos, const wxSize &amp;sz, wxWindow **psecondary, int limited_editing, <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *property)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">wxColour&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a64c926d116e6a984b6521edd442a9e16">GetCaptionBackgroundColour</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns current category caption background colour.  <a href="#a64c926d116e6a984b6521edd442a9e16"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a65a32f0e9bd7a9ca75ce0a971d51dfba"></a><!-- doxytag: member="wxPropertyGrid::GetCaptionFont" ref="a65a32f0e9bd7a9ca75ce0a971d51dfba" args="() const " -->
const wxFont &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetCaptionFont</b> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aec51d57b8ab13dee21e31a1843a5ea45"></a><!-- doxytag: member="wxPropertyGrid::GetCaptionFont" ref="aec51d57b8ab13dee21e31a1843a5ea45" args="()" -->
wxFont &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetCaptionFont</b> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">wxColour&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a7a6873c630a7c36268ca3e3ebff3ea74">GetCaptionForegroundColour</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns current category caption text colour.  <a href="#a7a6873c630a7c36268ca3e3ebff3ea74"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">wxColour&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a954ddd8903893b8090be621834eff9b7">GetCellBackgroundColour</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns current cell background colour.  <a href="#a954ddd8903893b8090be621834eff9b7"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">wxColour&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a6a38606446d345a088650898a2c50dc5">GetCellDisabledTextColour</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns current cell text colour when disabled.  <a href="#a6a38606446d345a088650898a2c50dc5"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">wxColour&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#abc4c2116081fdd319ee489e18b45cc1a">GetCellTextColour</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns current cell text colour.  <a href="#abc4c2116081fdd319ee489e18b45cc1a"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#ad6e2118f252762c110322d872fa1bcdc">GetChildrenCount</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns number of children for the property.  <a href="#ad6e2118f252762c110322d872fa1bcdc"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a68d761cc256f55f06796e75b7bb1df2e"></a><!-- doxytag: member="wxPropertyGrid::GetChildrenCount" ref="a68d761cc256f55f06796e75b7bb1df2e" args="()" -->
unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a68d761cc256f55f06796e75b7bb1df2e">GetChildrenCount</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns number of children of the root property. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7b2a4d79e4f6a3aa60451e260f985dea"></a><!-- doxytag: member="wxPropertyGrid::GetColumnCount" ref="a7b2a4d79e4f6a3aa60451e260f985dea" args="() const " -->
unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetColumnCount</b> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab2d6ecb2d22b2932543442e40f22e92d"></a><!-- doxytag: member="wxPropertyGrid::GetCommonValue" ref="ab2d6ecb2d22b2932543442e40f22e92d" args="(unsigned int i) const " -->
const <a class="el" href="classwxPGCommonValue.htm">wxPGCommonValue</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetCommonValue</b> (unsigned int i) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa5ac5a5e8ffb70d872e1970418a51ad1"></a><!-- doxytag: member="wxPropertyGrid::GetCommonValueCount" ref="aa5ac5a5e8ffb70d872e1970418a51ad1" args="() const " -->
unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#aa5ac5a5e8ffb70d872e1970418a51ad1">GetCommonValueCount</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns number of common values. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4afb6f7001d19cb1289f91195bd8e07a"></a><!-- doxytag: member="wxPropertyGrid::GetCommonValueLabel" ref="a4afb6f7001d19cb1289f91195bd8e07a" args="(unsigned int i) const " -->
wxString&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a4afb6f7001d19cb1289f91195bd8e07a">GetCommonValueLabel</a> (unsigned int i) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns label of given common value. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">wxWindow *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#ad00f8283296f2f4b2666dfab9234a33f">GetEditorControl</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns pointer to current active primary editor control (NULL if none).  <a href="#ad00f8283296f2f4b2666dfab9234a33f"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9c28c9d54f0db5c84a7722c04ab85f02"></a><!-- doxytag: member="wxPropertyGrid::GetEditorControlSecondary" ref="a9c28c9d54f0db5c84a7722c04ab85f02" args="() const " -->
wxWindow *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a9c28c9d54f0db5c84a7722c04ab85f02">GetEditorControlSecondary</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns pointer to current active secondary editor control (NULL if none). <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">wxTextCtrl *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a9a75dc5a4828db6fa36ed5db0f4f8842">GetEditorTextCtrl</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns wxTextCtrl active in currently selected property, if any.  <a href="#a9a75dc5a4828db6fa36ed5db0f4f8842"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">wxColour&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#afdb846c3d5184b414da3e97adce4a34d">GetEmptySpaceColour</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns colour of empty space below properties.  <a href="#afdb846c3d5184b414da3e97adce4a34d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#ac118882852d72c64d882301c4d8e8dbc">GetFirstCategory</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns id of first category (from target page).  <a href="#ac118882852d72c64d882301c4d8e8dbc"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a602f7e26be3359b4932ed2c73a3ee726">GetFirstProperty</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns id of first property that is not a category.  <a href="#a602f7e26be3359b4932ed2c73a3ee726"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac1a63980cfef9021a949d81cf50a48ee"></a><!-- doxytag: member="wxPropertyGrid::GetFirstVisible" ref="ac1a63980cfef9021a949d81cf50a48ee" args="()" -->
<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetFirstVisible</b> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a6a41c798764206dd2a6a00eee6e73a51">GetFirstVisible</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns id of first visible item, whether it is a category or property.  <a href="#a6a41c798764206dd2a6a00eee6e73a51"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#ac66fe4ff205f56f6c1f45197ce72749e">GetFontHeight</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns height of highest characters of used font.  <a href="#ac66fe4ff205f56f6c1f45197ce72749e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">wxPoint&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a4a67df3428590d2ee6ae7f338add98d7">GetGoodEditorDialogPosition</a> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *p, const wxSize &amp;sz)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Generates position for a widget editor dialog box.  <a href="#a4a67df3428590d2ee6ae7f338add98d7"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a1f148708274d44397fe6e6bd20838b6d">GetGrid</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns pointer to itself.  <a href="#a1f148708274d44397fe6e6bd20838b6d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aff05c8512aba669e300248554d5ffc1b"></a><!-- doxytag: member="wxPropertyGrid::GetImageRect" ref="aff05c8512aba669e300248554d5ffc1b" args="(wxPGProperty *p, int item) const " -->
wxRect&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetImageRect</b> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *p, int item) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">wxSize&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a1b0b18a57e1b0d9ce137c140de5d8f78">GetImageSize</a> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *p=NULL, int item=-1) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns size of the custom paint image in front of property.  <a href="#a1b0b18a57e1b0d9ce137c140de5d8f78"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3f974292101b13b75f08d9a7ed5db2b9"></a><!-- doxytag: member="wxPropertyGrid::GetInternalFlags" ref="a3f974292101b13b75f08d9a7ed5db2b9" args="() const " -->
long&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetInternalFlags</b> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#ad0bbd3a533544a673940981e3c84aa70">GetItemAtY</a> (int y) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns GetCustomPaintWidth for odcombo, GetImageSize(<a class="el" href="classwxPropertyGridInterface.htm#a302ae0ff624d48131544f6010373e599" title="Returns currently selected property.">GetSelection()</a>) otherwise.  <a href="#ad0bbd3a533544a673940981e3c84aa70"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9114ef630b607bf411aeaaa5aae3b013"></a><!-- doxytag: member="wxPropertyGrid::GetLabelEditor" ref="a9114ef630b607bf411aeaaa5aae3b013" args="() const " -->
wxTextCtrl *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a9114ef630b607bf411aeaaa5aae3b013">GetLabelEditor</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns currently active label editor, NULL if none. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a3e6f042b16facf81470d2a572228533c">GetLastChild</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns id of last child of given property.  <a href="#a3e6f042b16facf81470d2a572228533c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1dba60ac0be74d0fd0c8d07d34293eb8"></a><!-- doxytag: member="wxPropertyGrid::GetLastItem" ref="a1dba60ac0be74d0fd0c8d07d34293eb8" args="(int flags=wxPG_ITERATE_DEFAULT) const " -->
const <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetLastItem</b> (int flags=wxPG_ITERATE_DEFAULT) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a4610a440d5e81ac8f33e3a83b2538096">GetLastItem</a> (int flags=wxPG_ITERATE_DEFAULT)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns last item which could be iterated using given flags.  <a href="#a4610a440d5e81ac8f33e3a83b2538096"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a21dcb9d2068e765bd3be32a5d10d71ee">GetLastProperty</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns id of last item.  <a href="#a21dcb9d2068e765bd3be32a5d10d71ee"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a788525f3ebdd348f64a20bb40a18bffa">GetLastVisible</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns id of last visible item.  <a href="#a788525f3ebdd348f64a20bb40a18bffa"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">wxColour&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a0b63e1b91091ed4a0dd1ffb497cadd85">GetLineColour</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns colour of lines between cells.  <a href="#a0b63e1b91091ed4a0dd1ffb497cadd85"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">wxColour&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#ac5d1453174eed3613a40608155902c11">GetMarginColour</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns background colour of margin.  <a href="#ac5d1453174eed3613a40608155902c11"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a486bbbf9f7386dfbe1de35996eadadc4">GetNextCategory</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns id of next category after a given property (which does not have to be category).  <a href="#a486bbbf9f7386dfbe1de35996eadadc4"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a5f2d1233e24ad1faf7b504d770bcdcd5">GetNextProperty</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns id of next property.  <a href="#a5f2d1233e24ad1faf7b504d770bcdcd5"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a5a1541186a03f4c38e57a5da8c49902d">GetNextVisible</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns id of next visible item.  <a href="#a5a1541186a03f4c38e57a5da8c49902d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0125cfabb43ea2216c2ad3c28b9a38b0"></a><!-- doxytag: member="wxPropertyGrid::GetPanel" ref="a0125cfabb43ea2216c2ad3c28b9a38b0" args="() const " -->
wxPanel *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a0125cfabb43ea2216c2ad3c28b9a38b0">GetPanel</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns wxWindow that the properties are painted on, and which should be used as the parent for editor controls. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a2a5bae15802b159534dd5cea07dd0bcf">GetPrevProperty</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns id of previous property.  <a href="#a2a5bae15802b159534dd5cea07dd0bcf"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a6759a5f49233f0c5ee22bc04a33bf2eb">GetPrevSiblingProperty</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns id of previous item under the same parent.  <a href="#a6759a5f49233f0c5ee22bc04a33bf2eb"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#ab1426600722b4cb2acceb4e862e76a6c">GetPrevVisible</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns id of previous visible property.  <a href="#ab1426600722b4cb2acceb4e862e76a6c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a53c8c0478861b3cd5ab7890b03528d1a"></a><!-- doxytag: member="wxPropertyGrid::GetPrimaryEditor" ref="a53c8c0478861b3cd5ab7890b03528d1a" args="() const " -->
wxWindow *&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetPrimaryEditor</b> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">wxColour&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a22be0cf78c2212688f3714dee248a5a8">GetPropertyBackgroundColour</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns cell background colour of a property.  <a href="#a22be0cf78c2212688f3714dee248a5a8"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a87d4a2a4d4b1d063322cc27d5f0f198d">GetPropertyByLabel</a> (const wxString &amp;name) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns id of property with given label (case-sensitive).  <a href="#a87d4a2a4d4b1d063322cc27d5f0f198d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">wxColour&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#addb11eefcc654da71cb241249ed1ea8c">GetPropertyColour</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns cell background colour of a property.  <a href="#addb11eefcc654da71cb241249ed1ea8c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3d9193705b4a675161a8c8b1de6a6044"></a><!-- doxytag: member="wxPropertyGrid::GetPropertyRect" ref="a3d9193705b4a675161a8c8b1de6a6044" args="(const wxPGProperty *p1, const wxPGProperty *p2) const " -->
wxRect&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a3d9193705b4a675161a8c8b1de6a6044">GetPropertyRect</a> (const <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *p1, const <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *p2) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns rectangle that fully contains properties between and including p1 and p2. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">wxColour&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#aaf30582c06c12ba7ae5834078ca12cdc">GetPropertyTextColour</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns cell background colour of a property.  <a href="#aaf30582c06c12ba7ae5834078ca12cdc"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a012ab61170fc0c747f5a910283560718">GetRoot</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns "root property".  <a href="#a012ab61170fc0c747f5a910283560718"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#acc83fee2be3dae5aef4250ab42d7f988">GetRowHeight</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns height of a single grid row (in pixels).  <a href="#acc83fee2be3dae5aef4250ab42d7f988"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="add0df801cd2035422c5f23f52ce941be"></a><!-- doxytag: member="wxPropertyGrid::GetSelectedProperty" ref="add0df801cd2035422c5f23f52ce941be" args="() const " -->
<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetSelectedProperty</b> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">wxColour&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#acadbfc88f22d5f20882297b6143f5b8c">GetSelectionBackgroundColour</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns current selection background colour.  <a href="#acadbfc88f22d5f20882297b6143f5b8c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">wxColour&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#ac42f480a4a9ed1b8a76d3dca822d8061">GetSelectionForegroundColour</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns current selection text colour.  <a href="#ac42f480a4a9ed1b8a76d3dca822d8061"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa0d82af21a87fe9e7ef23faebec694e8"></a><!-- doxytag: member="wxPropertyGrid::GetSortFunction" ref="aa0d82af21a87fe9e7ef23faebec694e8" args="() const " -->
<a class="el" href="group__miscellaneous.htm#gadd392b8d6550141475e3efb953b0a20f">wxPGSortCallback</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#aa0d82af21a87fe9e7ef23faebec694e8">GetSortFunction</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns the property sort function (NULL is default). <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5a40d6c714dd27ff1dd5cfcdafc0c422"></a><!-- doxytag: member="wxPropertyGrid::GetSpacingY" ref="a5a40d6c714dd27ff1dd5cfcdafc0c422" args="() const " -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetSpacingY</b> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a06f2997f3ac04099b6c62dc721640024">GetSplitterPosition</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns current splitter x position.  <a href="#a06f2997f3ac04099b6c62dc721640024"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4e87bf1867e63723a25c697330da07ff"></a><!-- doxytag: member="wxPropertyGrid::GetUnspecifiedCommonValue" ref="a4e87bf1867e63723a25c697330da07ff" args="() const " -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a4e87bf1867e63723a25c697330da07ff">GetUnspecifiedCommonValue</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns index of common value that will truly change value to unspecified. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classwxPGCell.htm">wxPGCell</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#ac6a9ca5a696a674baf26f2be8fc0534c">GetUnspecifiedValueAppearance</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns current appearance of unspecified value cells.  <a href="#ac6a9ca5a696a674baf26f2be8fc0534c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a33fa8240e20151a6d3d04afe557faa10"></a><!-- doxytag: member="wxPropertyGrid::GetUnspecifiedValueText" ref="a33fa8240e20151a6d3d04afe557faa10" args="(int argFlags=0) const " -->
wxString&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a33fa8240e20151a6d3d04afe557faa10">GetUnspecifiedValueText</a> (int argFlags=0) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns (visual) text representation of the unspecified property value. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2b64293500faa036a73a892502a63e30"></a><!-- doxytag: member="wxPropertyGrid::GetValidationInfo" ref="a2b64293500faa036a73a892502a63e30" args="()" -->
<a class="el" href="structwxPGValidationInfo.htm">wxPGValidationInfo</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetValidationInfo</b> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a65bbb87f2b7b162d3b12cac3627ef413">GetVerticalSpacing</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns current vertical spacing.  <a href="#a65bbb87f2b7b162d3b12cac3627ef413"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac6301bcc83942831f6c2f73ed2a3c72e"></a><!-- doxytag: member="wxPropertyGrid::HandleCustomEditorEvent" ref="ac6301bcc83942831f6c2f73ed2a3c72e" args="(wxCommandEvent &amp;event)" -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>HandleCustomEditorEvent</b> (wxCommandEvent &amp;event)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab2582e3e16ea13204f74a8a01bcef037"></a><!-- doxytag: member="wxPropertyGrid::HasInternalFlag" ref="ab2582e3e16ea13204f74a8a01bcef037" args="(long flag) const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>HasInternalFlag</b> (long flag) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a59766a5026c7f3980720e64224d9e99d">HasSelection</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if a property is selected.  <a href="#a59766a5026c7f3980720e64224d9e99d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa8b90e664e594622a6d97539b81b62d2"></a><!-- doxytag: member="wxPropertyGrid::HasVirtualWidth" ref="aa8b90e664e594622a6d97539b81b62d2" args="() const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>HasVirtualWidth</b> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af20ff1e30938a1e0424ade4bf3905989"></a><!-- doxytag: member="wxPropertyGrid::HitTest" ref="af20ff1e30938a1e0424ade4bf3905989" args="(const wxPoint &amp;pt) const " -->
<a class="el" href="classwxPropertyGridHitTestResult.htm">wxPropertyGridHitTestResult</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#af20ff1e30938a1e0424ade4bf3905989">HitTest</a> (const wxPoint &amp;pt) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns information about arbitrary position in the grid. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aba3512b4bffd16c11b45967c770468ee"></a><!-- doxytag: member="wxPropertyGrid::IncFrozen" ref="aba3512b4bffd16c11b45967c770468ee" args="()" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>IncFrozen</b> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a35965ecaa422d47e379db010a42cc1b0">IsAnyModified</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if any property has been modified by the user.  <a href="#a35965ecaa422d47e379db010a42cc1b0"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a989d75b306988d7aece23a40eede8041"></a><!-- doxytag: member="wxPropertyGrid::IsEditorFocused" ref="a989d75b306988d7aece23a40eede8041" args="() const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a989d75b306988d7aece23a40eede8041">IsEditorFocused</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns  if editor control has focus. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a0f26abcaf04e88fefe7b2659d025ffc7">IsEditorsValueModified</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if editor's value was marked modified.  <a href="#a0f26abcaf04e88fefe7b2659d025ffc7"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a07c6b69661f61f992e74e17a60e3c47b">IsFrozen</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if updating is frozen (ie.  <a href="#a07c6b69661f61f992e74e17a60e3c47b"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aea40f8b89b5446f21bf9bdc6868154e9"></a><!-- doxytag: member="wxPropertyGrid::IsMainButtonEvent" ref="aea40f8b89b5446f21bf9bdc6868154e9" args="(const wxEvent &amp;event)" -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#aea40f8b89b5446f21bf9bdc6868154e9">IsMainButtonEvent</a> (const wxEvent &amp;event)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if given event is from first of an array of buttons (as can be in case when <a class="el" href="classwxPGMultiButton.htm" title="This class can be used to have multiple buttons in a property editor.">wxPGMultiButton</a> is used). <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a5c67655306de7aa158518360be66b0c7">MakeColumnEditable</a> (unsigned int column, bool editable=true)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Makes given column editable by user.  <a href="#a5c67655306de7aa158518360be66b0c7"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae0ce82b5b4a512eeac8d4b87cde9c0ee"></a><!-- doxytag: member="wxPropertyGrid::OnComboItemPaint" ref="ae0ce82b5b4a512eeac8d4b87cde9c0ee" args="(wxPGCustomComboControl *pCb, int item, wxDC &amp;dc, wxRect &amp;rect, int flags)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>OnComboItemPaint</b> (wxPGCustomComboControl *pCb, int item, wxDC &amp;dc, wxRect &amp;rect, int flags)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4f5d8650023b5693b2b1c848930f2abc"></a><!-- doxytag: member="wxPropertyGrid::OnCustomEditorEvent" ref="a4f5d8650023b5693b2b1c848930f2abc" args="(wxCommandEvent &amp;event)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a4f5d8650023b5693b2b1c848930f2abc">OnCustomEditorEvent</a> (wxCommandEvent &amp;event)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Pass this function to Connect calls in propertyclass::CreateEditor. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a2662c18312222d84453305cf2c85f849">OnTLPChanging</a> (wxWindow *newTLP)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">It is recommended that you call this function any time your code causes wxPropertyGrid's top-level parent to change.  <a href="#a2662c18312222d84453305cf2c85f849"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a7b273f66fe8d9a54b83000d5a977ddea">OnValidationFailure</a> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *property, wxVariant &amp;invalidValue)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Called when validation for given property fails.  <a href="#a7b273f66fe8d9a54b83000d5a977ddea"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aceb183570e673764551e54f480665fef"></a><!-- doxytag: member="wxPropertyGrid::OnValidationFailureReset" ref="aceb183570e673764551e54f480665fef" args="(wxPGProperty *property)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#aceb183570e673764551e54f480665fef">OnValidationFailureReset</a> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *property)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Called to indicate property and editor has valid value now. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a07fca99e433b6c9563cf99d5e308c237">PerformValidation</a> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *p, wxVariant &amp;pendingValue)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Runs all validation functionality (includes sending wxEVT_PG_CHANGING).  <a href="#a07fca99e433b6c9563cf99d5e308c237"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0706eeff64712ce81ac7c31cd0b2d879"></a><!-- doxytag: member="wxPropertyGrid::RefreshEditor" ref="a0706eeff64712ce81ac7c31cd0b2d879" args="()" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a0706eeff64712ce81ac7c31cd0b2d879">RefreshEditor</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">If selected property's editor is active, then update it's value. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a05cab6dc2fde0464176b86548b7bb12a"></a><!-- doxytag: member="wxPropertyGrid::RefreshProperty" ref="a05cab6dc2fde0464176b86548b7bb12a" args="(wxPGProperty *p)" -->
virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><b>RefreshProperty</b> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *p)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a8c3db3b7df8b21c7ee1a1f1a6efe5e40">RemoveFromSelection</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Removes given property from selection.  <a href="#a8c3db3b7df8b21c7ee1a1f1a6efe5e40"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a03a5a1d8a8ce8b0f92418288ecff1f3f"></a><!-- doxytag: member="wxPropertyGrid::ResetColours" ref="a03a5a1d8a8ce8b0f92418288ecff1f3f" args="()" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a03a5a1d8a8ce8b0f92418288ecff1f3f">ResetColours</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Resets all colours to the original system values. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a799155caa94f83ec50252df91b4715bc">ResetColumnSizes</a> (bool enableAutoResizing=false)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Resets column sizes and splitter positions, based on proportions.  <a href="#a799155caa94f83ec50252df91b4715bc"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#ab2c5acf3ce62377a8d570fd089cb815b">SelectProperty</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, bool focus=false)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Selects a property.  <a href="#ab2c5acf3ce62377a8d570fd089cb815b"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa595818b9aa1c7321f39a9dde413f917"></a><!-- doxytag: member="wxPropertyGrid::SendNavigationKeyEvent" ref="aa595818b9aa1c7321f39a9dde413f917" args="(int dir)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>SendNavigationKeyEvent</b> (int dir)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a523f90a749685d6d97ca247907f1793a">SetButtonShortcut</a> (int keycode, bool ctrlDown=false, bool altDown=false)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Changes keyboard shortcut to push the editor button.  <a href="#a523f90a749685d6d97ca247907f1793a"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a206216506a3e873044b020a3f41c2841">SetCaptionBackgroundColour</a> (const wxColour &amp;col)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets category caption background colour.  <a href="#a206216506a3e873044b020a3f41c2841"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a5b352c8d768b71e89bdc7c3a430cc089">SetCaptionForegroundColour</a> (const wxColour &amp;col)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets category caption text colour.  <a href="#a5b352c8d768b71e89bdc7c3a430cc089"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="addd0473a42aa608c2b6d082e18734a70"></a><!-- doxytag: member="wxPropertyGrid::SetCaptionTextColour" ref="addd0473a42aa608c2b6d082e18734a70" args="(wxPGPropArg id, const wxColour &amp;col)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#addd0473a42aa608c2b6d082e18734a70">SetCaptionTextColour</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxColour &amp;col)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets text colour of a category caption (but not it's children). <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a0610da7b0eae7239902fe7b9a9c06983">SetCellBackgroundColour</a> (const wxColour &amp;col)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets default cell background colour - applies to property cells.  <a href="#a0610da7b0eae7239902fe7b9a9c06983"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af68284dc3b280abb2c49de3f2ace072c"></a><!-- doxytag: member="wxPropertyGrid::SetCellDisabledTextColour" ref="af68284dc3b280abb2c49de3f2ace072c" args="(const wxColour &amp;col)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#af68284dc3b280abb2c49de3f2ace072c">SetCellDisabledTextColour</a> (const wxColour &amp;col)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets cell text colour for disabled properties. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a9ca000c6df42b90fd751e65ead5296c1">SetCellTextColour</a> (const wxColour &amp;col)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets default cell text colour - applies to property name and value text.  <a href="#a9ca000c6df42b90fd751e65ead5296c1"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4a02bfcf431899e6737a669f97884cb4"></a><!-- doxytag: member="wxPropertyGrid::SetColumnCount" ref="a4a02bfcf431899e6737a669f97884cb4" args="(int colCount)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a4a02bfcf431899e6737a669f97884cb4">SetColumnCount</a> (int colCount)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set number of columns (2+). <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a37acf1866bf41ccf1434e8c659e42c02"></a><!-- doxytag: member="wxPropertyGrid::SetCurrentCategory" ref="a37acf1866bf41ccf1434e8c659e42c02" args="(wxPGPropArg id)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a37acf1866bf41ccf1434e8c659e42c02">SetCurrentCategory</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets the current category - Append will add non-categories under this one. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a52022182a61c16b35e54fa6602345771">SetEmptySpaceColour</a> (const wxColour &amp;col)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets colour of empty space below properties.  <a href="#a52022182a61c16b35e54fa6602345771"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a66eaa16e706f28c327b0b64f3ace17c3"></a><!-- doxytag: member="wxPropertyGrid::SetInternalFlag" ref="a66eaa16e706f28c327b0b64f3ace17c3" args="(long flag)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>SetInternalFlag</b> (long flag)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a258482fbdc922a616daa63a4988f041e">SetLineColour</a> (const wxColour &amp;col)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets colour of lines between cells.  <a href="#a258482fbdc922a616daa63a4988f041e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a5126790886683c52971cfcd2ebe4d04e">SetMarginColour</a> (const wxColour &amp;col)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets background colour of margin.  <a href="#a5126790886683c52971cfcd2ebe4d04e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a8c6328a5c09549ccfe9756fafe5065da">SetPropertyAttributeAll</a> (const wxString &amp;attrName, wxVariant value)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets property attribute for all applicapple properties.  <a href="#a8c6328a5c09549ccfe9756fafe5065da"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#ab8e74bd6065a4d5750fa3ce9c14bda90">SetPropertyBackgroundColour</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxColour &amp;col, int flags=wxPG_RECURSE)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets background colour of property and all its children.  <a href="#ab8e74bd6065a4d5750fa3ce9c14bda90"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#ae8b3d2b14f73b49ed882d6cea1660c7e">SetPropertyColour</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxColour &amp;col)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets background colour of property and all its children.  <a href="#ae8b3d2b14f73b49ed882d6cea1660c7e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a6755a5eed2bd4cacf47399c313fff7e1">SetPropertyColourToDefault</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets background and text colour of property and all its children to the default.  <a href="#a6755a5eed2bd4cacf47399c313fff7e1"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#aee6c7e1d87b7c1a1c7d12715f43fb459">SetPropertyName</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxString &amp;newname)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets name of a property.  <a href="#aee6c7e1d87b7c1a1c7d12715f43fb459"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a99076183852fcff02bf32a3a834973ea">SetPropertyTextColour</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxColour &amp;col, int flags=wxPG_RECURSE)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets text colour of property and all its children.  <a href="#a99076183852fcff02bf32a3a834973ea"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad2e7aa1091f730d774860f55df81dee4"></a><!-- doxytag: member="wxPropertyGrid::SetSelection" ref="ad2e7aa1091f730d774860f55df81dee4" args="(const wxArrayPGProperty &amp;newSelection)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#ad2e7aa1091f730d774860f55df81dee4">SetSelection</a> (const wxArrayPGProperty &amp;newSelection)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set entire new selection from given list of properties. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a1966c58ae5b4551a156971f80b401e7e">SetSelectionBackground</a> (const wxColour &amp;col)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets selection background colour - applies to selected property name background.  <a href="#a1966c58ae5b4551a156971f80b401e7e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#afe4a8bfb870e966e9a1c6df91c8d8ae0">SetSelectionForeground</a> (const wxColour &amp;col)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets selection foreground colour - applies to selected property name text.  <a href="#afe4a8bfb870e966e9a1c6df91c8d8ae0"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#ad413c2a9f94db90466bc9039f928afe6">SetSortFunction</a> (<a class="el" href="group__miscellaneous.htm#gadd392b8d6550141475e3efb953b0a20f">wxPGSortCallback</a> sortFunction)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets the property sorting function.  <a href="#ad413c2a9f94db90466bc9039f928afe6"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#ac38c3f5b8e6403b806f917b0b07db254">SetSplitterLeft</a> (bool subProps=false)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Moves splitter as left as possible, while still allowing all labels to be shown in full.  <a href="#ac38c3f5b8e6403b806f917b0b07db254"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a9587e06dc278a5bd33217b4aa2bfb114">SetSplitterPosition</a> (int newxpos, bool refresh=true)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets x coordinate of the splitter.  <a href="#a9587e06dc278a5bd33217b4aa2bfb114"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a2a6f2e2d16ab57be97a445f0efbb5035">SetUnspecifiedCommonValue</a> (int index)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set index of common value that will truly change value to unspecified.  <a href="#a2a6f2e2d16ab57be97a445f0efbb5035"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#ae4d3d62469b3f0b8a7a6e2f10fa473ff">SetUnspecifiedValueAppearance</a> (const <a class="el" href="classwxPGCell.htm">wxPGCell</a> &amp;cell)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets appearance of value cells representing an unspecified property value.  <a href="#ae4d3d62469b3f0b8a7a6e2f10fa473ff"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a19a1ce53f879681e9b2b2ede5c571cb7">SetupTextCtrlValue</a> (const wxString text)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Must be called in <a class="el" href="classwxPGEditor.htm#a9d33fbd55fe4fe390bdaa826a7ff87e2" title="Instantiates editor controls.">wxPGEditor::CreateControls()</a> if primary editor window is wxTextCtrl, just before textctrl is created.  <a href="#a19a1ce53f879681e9b2b2ede5c571cb7"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a8829779832e7670948a11b5ea46f41bb">SetVerticalSpacing</a> (int vspacing)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets vertical spacing.  <a href="#a8829779832e7670948a11b5ea46f41bb"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#ad10b740bdbc1a8c9fed8a4bc8de323f5">SetVirtualWidth</a> (int width)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set virtual width for this particular page.  <a href="#ad10b740bdbc1a8c9fed8a4bc8de323f5"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a6b416e4dfbfde7cc96481a4a779ae43d">SetWindowStyleFlag</a> (long style)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Overridden function.  <a href="#a6b416e4dfbfde7cc96481a4a779ae43d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a7b0f2d8866f2931762aaabe88bf7d85e">ShowPropertyError</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxString &amp;msg)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Shows an brief error message that is related to a property.  <a href="#a7b0f2d8866f2931762aaabe88bf7d85e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9fded5e7eedd358c3cb4a6d65554b904"></a><!-- doxytag: member="wxPropertyGrid::Sort" ref="a9fded5e7eedd358c3cb4a6d65554b904" args="(wxPGPropArg id)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a9fded5e7eedd358c3cb4a6d65554b904">Sort</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sorts children of a category. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a38d28048e88e019f718e663de5c66cad">Sort</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sorts all items at all levels (except sub-properties).  <a href="#a38d28048e88e019f718e663de5c66cad"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a04f4b548b4924b67f1f4ea05bb4d3855"></a><!-- doxytag: member="wxPropertyGrid::SwitchState" ref="a04f4b548b4924b67f1f4ea05bb4d3855" args="(wxPropertyGridState *pNewState)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a04f4b548b4924b67f1f4ea05bb4d3855">SwitchState</a> (<a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a> *pNewState)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Mostly useful for page switching. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad393c49be0c7d8e2f969fae8ae7213fa"></a><!-- doxytag: member="wxPropertyGrid::UnfocusEditor" ref="ad393c49be0c7d8e2f969fae8ae7213fa" args="()" -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#ad393c49be0c7d8e2f969fae8ae7213fa">UnfocusEditor</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Unfocuses or closes editor if one was open, but does not deselect property. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a72357b220321bfbd3bc7efdc7d613d22">ValueChangeInEvent</a> (wxVariant variant)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Call this from <a class="el" href="classwxPGProperty.htm#a16fbe26240bf47ab0a9a02d21781da73" title="Events received by editor widgets are processed here.">wxPGProperty::OnEvent()</a> to cause property value to be changed after the function returns (with true as return value).  <a href="#a72357b220321bfbd3bc7efdc7d613d22"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#aee5777433137edfe9d6fbb301775e9bf">WasValueChangedInEvent</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">You can use this member function, for instance, to detect in <a class="el" href="classwxPGProperty.htm#a16fbe26240bf47ab0a9a02d21781da73" title="Events received by editor widgets are processed here.">wxPGProperty::OnEvent()</a> if <a class="el" href="classwxPGProperty.htm#ade9385b0bc3c9ba4833b271157e87354" title="Call in OnEvent(), OnButtonClick() etc.">wxPGProperty::SetValueInEvent()</a> was already called in <a class="el" href="classwxPGEditor.htm#a035fa3bee4ac87e4300df0c637a56261" title="Handles events.">wxPGEditor::OnEvent()</a>.  <a href="#aee5777433137edfe9d6fbb301775e9bf"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a82503f692a007ba45651212604064c26">wxPropertyGrid</a> (wxWindow *parent, wxWindowID id=wxID_ANY, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=(0), const wxString &amp;name=wxPropertyGridNameStr)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The default constructor.  <a href="#a82503f692a007ba45651212604064c26"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a05092c0055245bbce1f42d93d0825327">wxPropertyGrid</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Two step constructor.  <a href="#a05092c0055245bbce1f42d93d0825327"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac79584315d9b7dfff150299e35b7d32a"></a><!-- doxytag: member="wxPropertyGrid::~wxPropertyGrid" ref="ac79584315d9b7dfff150299e35b7d32a" args="()" -->
virtual&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#ac79584315d9b7dfff150299e35b7d32a">~wxPropertyGrid</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Destructor. <br/></td></tr>
<tr><td colspan="2"><h2>Static Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#ac70daa2ae0d782fa75d45ceb641dcda8">ArrayStringToString</a> (wxString &amp;dst, const wxArrayString &amp;src, wxChar preDelim, wxChar postDelim, int flags)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Generates contents for string dst based on the convetents of wxArrayString src.  <a href="#ac70daa2ae0d782fa75d45ceb641dcda8"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a1089c4b29e22fd6472c400b1a504b429">AutoGetTranslation</a> (bool enable)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This static function enables or disables automatic use of wxGetTranslation for following strings: <a class="el" href="classwxEnumProperty.htm" title="You can derive custom properties with choices from this class.">wxEnumProperty</a> list labels, <a class="el" href="classwxFlagsProperty.htm" title="Represents a bit set that fits in a long integer.">wxFlagsProperty</a> sub-property labels.  <a href="#a1089c4b29e22fd6472c400b1a504b429"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af084775d80fcfc1a19631a69f24a17d6"></a><!-- doxytag: member="wxPropertyGrid::CreateEscapeSequences" ref="af084775d80fcfc1a19631a69f24a17d6" args="(wxString &amp;dst_str, wxString &amp;src_str)" -->
static wxString &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>CreateEscapeSequences</b> (wxString &amp;dst_str, wxString &amp;src_str)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="adf03013b20bb15eaeca29e3df0fb249e"></a><!-- doxytag: member="wxPropertyGrid::DoubleToString" ref="adf03013b20bb15eaeca29e3df0fb249e" args="(wxString &amp;target, double value, int precision, bool removeZeroes, wxString *precTemplate)" -->
static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#adf03013b20bb15eaeca29e3df0fb249e">DoubleToString</a> (wxString &amp;target, double value, int precision, bool removeZeroes, wxString *precTemplate)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Standardized double-to-string conversion. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa972db7c52e65510c0cb2e630e75d109"></a><!-- doxytag: member="wxPropertyGrid::ExpandEscapeSequences" ref="aa972db7c52e65510c0cb2e630e75d109" args="(wxString &amp;dst_str, wxString &amp;src_str)" -->
static wxString &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>ExpandEscapeSequences</b> (wxString &amp;dst_str, wxString &amp;src_str)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#a89ee01017530df27ff2c469bfbe0605e">RegisterEditorClass</a> (<a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *editor, const wxString &amp;name, bool noDefCheck=false)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Registers a new editor class.  <a href="#a89ee01017530df27ff2c469bfbe0605e"></a><br/></td></tr>
<tr><td colspan="2"><h2>Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGrid.htm#ac75d3bf6a0e32c5526af8924a657da89">CreateState</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><a class="el" href="classwxPropertyGridState.htm" title="Contains information of a single wxPropertyGrid page.">wxPropertyGridState</a> used by the grid is created here.  <a href="#ac75d3bf6a0e32c5526af8924a657da89"></a><br/></td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p><a class="el" href="classwxPropertyGrid.htm" title="wxPropertyGrid is a specialized two-column grid for editing properties such as strings...">wxPropertyGrid</a> is a specialized two-column grid for editing properties such as strings, numbers, flagsets, fonts, and colours. </p>
<p>wxPropertySheet used to do the very same thing, but it hasn't been updated for a while and it is currently deprecated.</p>
<p>Please note that most member functions are inherited and as such not documented on this page. This means you will probably also want to read <a class="el" href="classwxPropertyGridInterface.htm" title="In order to have most same base methods, both wxPropertyGrid and wxPropertyGridManager...">wxPropertyGridInterface</a> class reference.</p>
<h4>Derived from</h4>
<p><a class="el" href="classwxPropertyGridInterface.htm" title="In order to have most same base methods, both wxPropertyGrid and wxPropertyGridManager...">wxPropertyGridInterface</a><br/>
 wxScrolledWindow<br/>
 wxPanel<br/>
 wxWindow<br/>
 wxEvtHandler<br/>
 wxObject<br/>
</p>
<h4>Include files</h4>
<p>&lt;wx/propertygrid/propertygrid.h&gt;</p>
<h4>Window styles</h4>
<p><a class="el" href="group__wndflags.htm">Additional Window Styles</a></p>
<h4>Event handling</h4>
<p>To process input from a propertygrid control, use these event handler macros to direct input to member functions that take a <a class="el" href="classwxPropertyGridEvent.htm" title="A propertygrid event holds information about events associated with wxPropertyGrid...">wxPropertyGridEvent</a> argument.</p>
<table class="doxtable">
<tr>
<td>EVT_PG_SELECTED (id, func)</td><td>Property is selected. </td></tr>
<tr>
<td>EVT_PG_CHANGED (id, func)</td><td>Property value is modified. </td></tr>
<tr>
<td>EVT_PG_CHANGING (id, func)</td><td>Property value is about to be changed. Use <a class="el" href="classwxPropertyGridEvent.htm#afeb48e91fd83623287164096ba97e1ac" title="Returns value that is about to be set for wxEVT_PG_CHANGING.">wxPropertyGridEvent::GetValue()</a> to take a peek at the pending value, and <a class="el" href="classwxPropertyGridEvent.htm#a5e35bf2aeaad48147c0270e9b04426c8" title="Call this from your event handler to veto action that the event is signaling.">wxPropertyGridEvent::Veto()</a> to prevent change from taking place, if necessary. </td></tr>
<tr>
<td>EVT_PG_HIGHLIGHTED (id, func)</td><td>Mouse moves over property. Event's property is NULL if hovered on area that is not a property. </td></tr>
<tr>
<td>EVT_PG_RIGHT_CLICK (id, func)</td><td>Mouse right-clicked on a property. </td></tr>
<tr>
<td>EVT_PG_DOUBLE_CLICK (id, func)</td><td>Mouse double-clicked on a property. </td></tr>
<tr>
<td>EVT_PG_ITEM_COLLAPSED (id, func)</td><td>User collapses a property or category. </td></tr>
<tr>
<td>EVT_PG_ITEM_EXPANDED (id, func)</td><td>User expands a property or category. </td></tr>
<tr>
<td>EVT_PG_LABEL_EDIT_BEGIN (id, func)</td><td>User is about to begin editing a property label. You can veto this event to prevent the action. </td></tr>
<tr>
<td>EVT_PG_LABEL_EDIT_ENDING (id, func)</td><td><p class="starttd">User is about to end editing of a property label. You can veto this event to prevent the action.</p>
<p class="endtd"></p>
</td></tr>
<tr>
<td>EVT_BUTTON (id, func)</td><td>Button in a property editor was clicked. Only occurs if the property doesn't handle button clicks itself. </td></tr>
<tr>
<td>EVT_TEXT (id, func)</td><td>wxTextCtrl based editor was updated (but property value was not yet modified) </td></tr>
</table>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="classwxPropertyGridEvent.htm">wxPropertyGridEvent</a></dd></dl>
<dl class="remark"><dt><b>Remarks:</b></dt><dd></dd></dl>
<ul>
<li>Following functions do not automatically update the screen: Append. You probably need to explicitly call Refresh() <b>if</b> you called one of these functions outside parent window constructor.</li>
</ul>
<ul>
<li>Use Freeze() and Thaw() respectively to disable and enable drawing. This will also delay sorting etc. miscellaneous calculations to the last possible moment.</li>
</ul>
<p>For code examples, see the main page. </p>
<hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a05092c0055245bbce1f42d93d0825327"></a><!-- doxytag: member="wxPropertyGrid::wxPropertyGrid" ref="a05092c0055245bbce1f42d93d0825327" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxPropertyGrid::wxPropertyGrid </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Two step constructor. </p>
<p>Call Create when this constructor is called to build up the <a class="el" href="classwxPropertyGrid.htm" title="wxPropertyGrid is a specialized two-column grid for editing properties such as strings...">wxPropertyGrid</a> </p>

</div>
</div>
<a class="anchor" id="a82503f692a007ba45651212604064c26"></a><!-- doxytag: member="wxPropertyGrid::wxPropertyGrid" ref="a82503f692a007ba45651212604064c26" args="(wxWindow *parent, wxWindowID id=wxID_ANY, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=(0), const wxString &amp;name=wxPropertyGridNameStr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxPropertyGrid::wxPropertyGrid </td>
          <td>(</td>
          <td class="paramtype">wxWindow *&nbsp;</td>
          <td class="paramname"> <em>parent</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxWindowID&nbsp;</td>
          <td class="paramname"> <em>id</em> = <code>wxID_ANY</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxPoint &amp;&nbsp;</td>
          <td class="paramname"> <em>pos</em> = <code>wxDefaultPosition</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxSize &amp;&nbsp;</td>
          <td class="paramname"> <em>size</em> = <code>wxDefaultSize</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">long&nbsp;</td>
          <td class="paramname"> <em>style</em> = <code>(0)</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em> = <code>wxPropertyGridNameStr</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>The default constructor. </p>
<p>The styles to be used are styles valid for the wxWindow and wxScrolledWindow. </p>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="group__wndflags.htm">Additional Window Styles</a> </dd></dl>

</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="af19463a573440f6bc928ceaa60a1e5e6"></a><!-- doxytag: member="wxPropertyGrid::AddActionTrigger" ref="af19463a573440f6bc928ceaa60a1e5e6" args="(int action, int keycode, int modifiers=0)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::AddActionTrigger </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>action</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>keycode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>modifiers</em> = <code>0</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Adds given key combination to trigger given action. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>action</em>&nbsp;</td><td>Which action to trigger. See <a class="el" href="group__pgactions.htm">List of list of wxPropertyGrid actions</a>. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a3bf9a182fefadf6146ede040fe593d35"></a><!-- doxytag: member="wxPropertyGrid::AddToSelection" ref="a3bf9a182fefadf6146ede040fe593d35" args="(wxPGPropArg id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPropertyGrid::AddToSelection </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Adds given property into selection. </p>
<p>If wxPG_EX_MULTIPLE_SELECTION extra style is not used, then this has same effect as calling <a class="el" href="classwxPropertyGrid.htm#ab2c5acf3ce62377a8d570fd089cb815b" title="Selects a property.">SelectProperty()</a>.</p>
<dl class="remark"><dt><b>Remarks:</b></dt><dd>Multiple selection is not supported for categories. This means that if you have properties selected, you cannot add category to selection, and also if you have category selected, you cannot add other properties to selection. This member function will fail silently in these cases, even returning true. </dd></dl>

</div>
</div>
<a class="anchor" id="ac70daa2ae0d782fa75d45ceb641dcda8"></a><!-- doxytag: member="wxPropertyGrid::ArrayStringToString" ref="ac70daa2ae0d782fa75d45ceb641dcda8" args="(wxString &amp;dst, const wxArrayString &amp;src, wxChar preDelim, wxChar postDelim, int flags)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void wxPropertyGrid::ArrayStringToString </td>
          <td>(</td>
          <td class="paramtype">wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxArrayString &amp;&nbsp;</td>
          <td class="paramname"> <em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxChar&nbsp;</td>
          <td class="paramname"> <em>preDelim</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxChar&nbsp;</td>
          <td class="paramname"> <em>postDelim</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>flags</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Generates contents for string dst based on the convetents of wxArrayString src. </p>
<p>Format will be "(preDelim)str1(postDelim) (preDelim)str2(postDelim) and so on. Set flags to 1 inorder to convert backslashes to double-back- slashes and "(preDelims)"'s to "(preDelims)". </p>

</div>
</div>
<a class="anchor" id="a1089c4b29e22fd6472c400b1a504b429"></a><!-- doxytag: member="wxPropertyGrid::AutoGetTranslation" ref="a1089c4b29e22fd6472c400b1a504b429" args="(bool enable)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void wxPropertyGrid::AutoGetTranslation </td>
          <td>(</td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>enable</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This static function enables or disables automatic use of wxGetTranslation for following strings: <a class="el" href="classwxEnumProperty.htm" title="You can derive custom properties with choices from this class.">wxEnumProperty</a> list labels, <a class="el" href="classwxFlagsProperty.htm" title="Represents a bit set that fits in a long integer.">wxFlagsProperty</a> sub-property labels. </p>
<p>Default is false. </p>

</div>
</div>
<a class="anchor" id="a3bb033b1f2faa0b7afe70d8fe849287a"></a><!-- doxytag: member="wxPropertyGrid::BeginLabelEdit" ref="a3bb033b1f2faa0b7afe70d8fe849287a" args="(unsigned int column=0)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::BeginLabelEdit </td>
          <td>(</td>
          <td class="paramtype">unsigned int&nbsp;</td>
          <td class="paramname"> <em>column</em> = <code>0</code></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Creates label editor wxTextCtrl for given column, for property that is currently selected. </p>
<p>When multiple selection is enabled, this applies to whatever property <a class="el" href="classwxPropertyGridInterface.htm#a302ae0ff624d48131544f6010373e599" title="Returns currently selected property.">GetSelection()</a> returns.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>colIndex</em>&nbsp;</td><td>Which column's label to edit. Note that you should not use value 1, which is reserved for property value column. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a27e13a68f94e504e45ac78069cdfdfca"></a><!-- doxytag: member="wxPropertyGrid::CanClose" ref="a27e13a68f94e504e45ac78069cdfdfca" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPropertyGrid::CanClose </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns true if all property grid data changes have been committed. </p>
<p>Usually only returns false if value in active editor has been invalidated by a wxValidator. </p>

</div>
</div>
<a class="anchor" id="a6803d445ae77514558ec4ad00a25f65a"></a><!-- doxytag: member="wxPropertyGrid::CenterSplitter" ref="a6803d445ae77514558ec4ad00a25f65a" args="(bool enableAutoResizing=false)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::CenterSplitter </td>
          <td>(</td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>enableAutoResizing</em> = <code>false</code></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Centers the splitter. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>enableAutoResizing</em>&nbsp;</td><td>If , automatic column resizing is enabled (only applicapple if window style wxPG_SPLITTER_AUTO_CENTER is used). </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a6958b5c1a1f71512afaf6f2c07c1becd"></a><!-- doxytag: member="wxPropertyGrid::ChangePropertyValue" ref="a6958b5c1a1f71512afaf6f2c07c1becd" args="(wxPGPropArg id, wxVariant newValue)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPropertyGrid::ChangePropertyValue </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxVariant&nbsp;</td>
          <td class="paramname"> <em>newValue</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Changes value of a property, as if from an editor. </p>
<p>Use this instead of <a class="el" href="classwxPropertyGridInterface.htm#aa652e127ce0c9d4e80821cbdcfe4983c" title="Sets value (long integer) of a property.">SetPropertyValue()</a> if you need the value to run through validation process, and also send the property change event.</p>
<dl><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Returns</em>&nbsp;</td><td>true if value was succesfully changed. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classwxPropertyGridInterface.htm#a03e60ec606ffc2a9e1ea944f832ba4d4">wxPropertyGridInterface</a>.</p>

</div>
</div>
<a class="anchor" id="a48ef39121da1882f16f2cbf868cc0f2c"></a><!-- doxytag: member="wxPropertyGrid::Clear" ref="a48ef39121da1882f16f2cbf868cc0f2c" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void wxPropertyGrid::Clear </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Deletes all properties. </p>
<p>Does not free memory allocated for arrays etc. This should *not* be called in <a class="el" href="classwxPropertyGridManager.htm" title="wxPropertyGridManager is an efficient multi-page version of wxPropertyGrid, which...">wxPropertyGridManager</a>. </p>

<p>Implements <a class="el" href="classwxPropertyGridInterface.htm#a787e4282dbb85994af0e29a948efa98c">wxPropertyGridInterface</a>.</p>

</div>
</div>
<a class="anchor" id="adb1e0d4270da795649f7e323b41f5a6b"></a><!-- doxytag: member="wxPropertyGrid::ClearActionTriggers" ref="adb1e0d4270da795649f7e323b41f5a6b" args="(int action)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::ClearActionTriggers </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>action</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Clears action triggers for given action. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>action</em>&nbsp;</td><td>Which action to trigger. See <a class="el" href="group__pgactions.htm">List of list of wxPropertyGrid actions</a>. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aa5ecbaa8cb6292bd1f75d22b013b3df0"></a><!-- doxytag: member="wxPropertyGrid::ClearTargetPage" ref="aa5ecbaa8cb6292bd1f75d22b013b3df0" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::ClearTargetPage </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Synonymous to Clear. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.htm#_deprecated000011">Deprecated:</a></b></dt><dd>Since version 1.3. </dd></dl>

</div>
</div>
<a class="anchor" id="a6e06d92a622237457fea00372df1eaae"></a><!-- doxytag: member="wxPropertyGrid::CommitChangesFromEditor" ref="a6e06d92a622237457fea00372df1eaae" args="(wxUint32 flags=0)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool wxPropertyGrid::CommitChangesFromEditor </td>
          <td>(</td>
          <td class="paramtype">wxUint32&nbsp;</td>
          <td class="paramname"> <em>flags</em> = <code>0</code></td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Forces updating the value of property from the editor control. </p>
<p>Note that wxEVT_PG_CHANGING and wxEVT_PG_CHANGED are dispatched using ProcessEvent, meaning your event handlers will be called immediately.</p>
<dl><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Returns</em>&nbsp;</td><td>true if anything was changed. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a78b4ef054ec7a3c37c1ec7d54dba9246"></a><!-- doxytag: member="wxPropertyGrid::Create" ref="a78b4ef054ec7a3c37c1ec7d54dba9246" args="(wxWindow *parent, wxWindowID id=wxID_ANY, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=(0), const wxString &amp;name=wxPropertyGridNameStr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPropertyGrid::Create </td>
          <td>(</td>
          <td class="paramtype">wxWindow *&nbsp;</td>
          <td class="paramname"> <em>parent</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxWindowID&nbsp;</td>
          <td class="paramname"> <em>id</em> = <code>wxID_ANY</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxPoint &amp;&nbsp;</td>
          <td class="paramname"> <em>pos</em> = <code>wxDefaultPosition</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxSize &amp;&nbsp;</td>
          <td class="paramname"> <em>size</em> = <code>wxDefaultSize</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">long&nbsp;</td>
          <td class="paramname"> <em>style</em> = <code>(0)</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em> = <code>wxPropertyGridNameStr</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Two step creation. </p>
<p>Whenever the control is created without any parameters, use Create to actually create it. Don't access the control's public methods before this is called </p>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="group__wndflags.htm">Additional Window Styles</a> </dd></dl>

</div>
</div>
<a class="anchor" id="ac75d3bf6a0e32c5526af8924a657da89"></a><!-- doxytag: member="wxPropertyGrid::CreateState" ref="ac75d3bf6a0e32c5526af8924a657da89" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a>* wxPropertyGrid::CreateState </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [protected, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p><a class="el" href="classwxPropertyGridState.htm" title="Contains information of a single wxPropertyGrid page.">wxPropertyGridState</a> used by the grid is created here. </p>
<p>If grid is used in <a class="el" href="classwxPropertyGridManager.htm" title="wxPropertyGridManager is an efficient multi-page version of wxPropertyGrid, which...">wxPropertyGridManager</a>, there is no point overriding this - instead, set custom <a class="el" href="classwxPropertyGridPage.htm" title="Holder of property grid page information.">wxPropertyGridPage</a> classes. </p>

</div>
</div>
<a class="anchor" id="af170d02811ab8eed906963de693b79aa"></a><!-- doxytag: member="wxPropertyGrid::DoHidePropertyError" ref="af170d02811ab8eed906963de693b79aa" args="(wxPGProperty *property)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void wxPropertyGrid::DoHidePropertyError </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="paramname"> <em>property</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Override in derived class to hide an error displayed by <a class="el" href="classwxPropertyGrid.htm#a6eff1187beba43109be7a12194b0bf2b" title="Override in derived class to display error messages in custom manner (these message...">DoShowPropertyError()</a>. </p>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="classwxPropertyGrid.htm#a6eff1187beba43109be7a12194b0bf2b" title="Override in derived class to display error messages in custom manner (these message...">DoShowPropertyError()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a55a0e3496523b449ea22e49e1b260751"></a><!-- doxytag: member="wxPropertyGrid::DoOnValidationFailure" ref="a55a0e3496523b449ea22e49e1b260751" args="(wxPGProperty *property, wxVariant &amp;invalidValue)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool wxPropertyGrid::DoOnValidationFailure </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="paramname"> <em>property</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxVariant &amp;&nbsp;</td>
          <td class="paramname"> <em>invalidValue</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Override to customize property validation failure behavior. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>invalidValue</em>&nbsp;</td><td>Value which failed in validation. </td></tr>
  </table>
  </dd>
</dl>
<dl><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Return</em>&nbsp;</td><td>true if user is allowed to change to another property even if current has invalid value. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a3dd9b2ac540c9856251d6ec5c10e3210"></a><!-- doxytag: member="wxPropertyGrid::DoOnValidationFailureReset" ref="a3dd9b2ac540c9856251d6ec5c10e3210" args="(wxPGProperty *property)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void wxPropertyGrid::DoOnValidationFailureReset </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="paramname"> <em>property</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Override to customize resetting of property validation failure status. </p>
<dl class="remark"><dt><b>Remarks:</b></dt><dd>Property is guaranteed to have flag wxPG_PROP_INVALID_VALUE set. </dd></dl>

</div>
</div>
<a class="anchor" id="a6eff1187beba43109be7a12194b0bf2b"></a><!-- doxytag: member="wxPropertyGrid::DoShowPropertyError" ref="a6eff1187beba43109be7a12194b0bf2b" args="(wxPGProperty *property, const wxString &amp;msg)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void wxPropertyGrid::DoShowPropertyError </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="paramname"> <em>property</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>msg</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Override in derived class to display error messages in custom manner (these message usually only result from validation failure). </p>
<dl class="remark"><dt><b>Remarks:</b></dt><dd>If you implement this, then you also need to implement <a class="el" href="classwxPropertyGrid.htm#af170d02811ab8eed906963de693b79aa" title="Override in derived class to hide an error displayed by DoShowPropertyError().">DoHidePropertyError()</a> - possibly to do nothing, if error does not need hiding (e.g. it was logged or shown in a message box).</dd></dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="classwxPropertyGrid.htm#af170d02811ab8eed906963de693b79aa" title="Override in derived class to hide an error displayed by DoShowPropertyError().">DoHidePropertyError()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a55ba9fae4a12455393077397944b44d7"></a><!-- doxytag: member="wxPropertyGrid::DrawItemAndValueRelated" ref="a55ba9fae4a12455393077397944b44d7" args="(wxPGProperty *p)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::DrawItemAndValueRelated </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="paramname"> <em>p</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Draws item, children, and consequtive parents as long as category is not met. </p>

</div>
</div>
<a class="anchor" id="a98d434dc2d39b242aa98a0359143d5a3"></a><!-- doxytag: member="wxPropertyGrid::EditorsValueWasModified" ref="a98d434dc2d39b242aa98a0359143d5a3" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::EditorsValueWasModified </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Call when editor widget's contents is modified. </p>
<p>For example, this is called when changes text in wxTextCtrl (used in <a class="el" href="classwxStringProperty.htm" title="Basic property with string value.">wxStringProperty</a> and <a class="el" href="classwxIntProperty.htm" title="Basic property with integer value.">wxIntProperty</a>). </p>
<dl class="remark"><dt><b>Remarks:</b></dt><dd>This should only be called by properties. </dd></dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="classwxPGProperty.htm#a16fbe26240bf47ab0a9a02d21781da73">wxPGProperty::OnEvent</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a29f61bcb090bcb7d420d2e6d2b6d38e3"></a><!-- doxytag: member="wxPropertyGrid::EditorsValueWasNotModified" ref="a29f61bcb090bcb7d420d2e6d2b6d38e3" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::EditorsValueWasNotModified </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Reverse of <a class="el" href="classwxPropertyGrid.htm#a98d434dc2d39b242aa98a0359143d5a3" title="Call when editor widget&#39;s contents is modified.">EditorsValueWasModified()</a>. </p>

</div>
</div>
<a class="anchor" id="a4665c5bd10d1faa1c7cf9f8524bdf67c"></a><!-- doxytag: member="wxPropertyGrid::EditorValidate" ref="a4665c5bd10d1faa1c7cf9f8524bdf67c" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPropertyGrid::EditorValidate </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns true if all property grid data changes have been committed. </p>
<p>Usually only returns false if value in active editor has been invalidated by a wxValidator. </p>

</div>
</div>
<a class="anchor" id="a69fd5ebd1012ee52f35721c824327278"></a><!-- doxytag: member="wxPropertyGrid::EnableCategories" ref="a69fd5ebd1012ee52f35721c824327278" args="(bool enable)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPropertyGrid::EnableCategories </td>
          <td>(</td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>enable</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Enables or disables (shows/hides) categories according to parameter enable. </p>

</div>
</div>
<a class="anchor" id="a6ce64394848fef5da64ae050a780de87"></a><!-- doxytag: member="wxPropertyGrid::EndLabelEdit" ref="a6ce64394848fef5da64ae050a780de87" args="(bool commit=true)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::EndLabelEdit </td>
          <td>(</td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>commit</em> = <code>true</code></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Destroys label editor wxTextCtrl, if any. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>commit</em>&nbsp;</td><td>Use  (default) to store edited label text in property cell data. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a96df37bf51702982294faf5991c7ae27"></a><!-- doxytag: member="wxPropertyGrid::EnsureVisible" ref="a96df37bf51702982294faf5991c7ae27" args="(wxPGPropArg id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPropertyGrid::EnsureVisible </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Scrolls and/or expands items to ensure that the given item is visible. </p>
<p>Returns true if something was actually done. </p>

</div>
</div>
<a class="anchor" id="aa05232102d44635763e27df0d91b5eed"></a><!-- doxytag: member="wxPropertyGrid::FitColumns" ref="aa05232102d44635763e27df0d91b5eed" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxSize wxPropertyGrid::FitColumns </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Reduces column sizes to minimum possible that contents are still visibly (naturally some margin space will be applied as well). </p>
<dl><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Minimum</em>&nbsp;</td><td>size for the grid to still display everything.</td></tr>
  </table>
  </dd>
</dl>
<dl class="remark"><dt><b>Remarks:</b></dt><dd>Does not work well with wxPG_SPLITTER_AUTO_CENTER window style.</dd></dl>
<p>This function only works properly if grid size prior to call was already fairly large.</p>
<p>Note that you can also get calculated column widths by calling GetState-&gt;GetColumnWidth() immediately after this function returns. </p>

</div>
</div>
<a class="anchor" id="a73af46e13ed2c2799ff379d44b1d1d10"></a><!-- doxytag: member="wxPropertyGrid::FixPosForTextCtrl" ref="a73af46e13ed2c2799ff379d44b1d1d10" args="(wxWindow *ctrl, unsigned int forColumn=1, const wxPoint &amp;offset=wxPoint(0, 0))" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::FixPosForTextCtrl </td>
          <td>(</td>
          <td class="paramtype">wxWindow *&nbsp;</td>
          <td class="paramname"> <em>ctrl</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&nbsp;</td>
          <td class="paramname"> <em>forColumn</em> = <code>1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxPoint &amp;&nbsp;</td>
          <td class="paramname"> <em>offset</em> = <code>wxPoint(0,&nbsp;0)</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Fixes position of wxTextCtrl-like control (wxSpinCtrl usually fits as one). </p>
<p>Call after control has been created (but before shown). </p>

</div>
</div>
<a class="anchor" id="a64d0c66c00a5ae225975ca2fd7284a3b"></a><!-- doxytag: member="wxPropertyGrid::GenerateEditorButton" ref="a64d0c66c00a5ae225975ca2fd7284a3b" args="(const wxPoint &amp;pos, const wxSize &amp;sz)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxWindow* wxPropertyGrid::GenerateEditorButton </td>
          <td>(</td>
          <td class="paramtype">const wxPoint &amp;&nbsp;</td>
          <td class="paramname"> <em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxSize &amp;&nbsp;</td>
          <td class="paramname"> <em>sz</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Shortcut for creating dialog-caller button. </p>
<p>Used, for example, by <a class="el" href="classwxFontProperty.htm" title="Property representing wxFont.">wxFontProperty</a>. </p>
<dl class="remark"><dt><b>Remarks:</b></dt><dd>This should only be called by properties. </dd></dl>

</div>
</div>
<a class="anchor" id="a9b0ed30235087036f0e15fc9c13e182b"></a><!-- doxytag: member="wxPropertyGrid::GenerateEditorTextCtrl" ref="a9b0ed30235087036f0e15fc9c13e182b" args="(const wxPoint &amp;pos, const wxSize &amp;sz, const wxString &amp;value, wxWindow *secondary, int extraStyle=0, int maxLen=0, unsigned int forColumn=1)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxWindow* wxPropertyGrid::GenerateEditorTextCtrl </td>
          <td>(</td>
          <td class="paramtype">const wxPoint &amp;&nbsp;</td>
          <td class="paramname"> <em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxSize &amp;&nbsp;</td>
          <td class="paramname"> <em>sz</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxWindow *&nbsp;</td>
          <td class="paramname"> <em>secondary</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>extraStyle</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>maxLen</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&nbsp;</td>
          <td class="paramname"> <em>forColumn</em> = <code>1</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Shortcut for creating text editor widget. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pos</em>&nbsp;</td><td>Same as pos given for CreateEditor. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>sz</em>&nbsp;</td><td>Same as sz given for CreateEditor. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>value</em>&nbsp;</td><td>Initial text for wxTextCtrl. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>secondary</em>&nbsp;</td><td>If right-side control, such as button, also created, then create it first and pass it as this parameter. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>extraStyle</em>&nbsp;</td><td>Extra style flags to pass for wxTextCtrl. </td></tr>
  </table>
  </dd>
</dl>
<dl class="remark"><dt><b>Remarks:</b></dt><dd>Note that this should generally be called only by new classes derived from <a class="el" href="classwxPGProperty.htm" title="wxPGProperty is base class for all wxPropertyGrid properties.">wxPGProperty</a>. </dd></dl>

</div>
</div>
<a class="anchor" id="a64c926d116e6a984b6521edd442a9e16"></a><!-- doxytag: member="wxPropertyGrid::GetCaptionBackgroundColour" ref="a64c926d116e6a984b6521edd442a9e16" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxColour wxPropertyGrid::GetCaptionBackgroundColour </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns current category caption background colour. </p>

</div>
</div>
<a class="anchor" id="a7a6873c630a7c36268ca3e3ebff3ea74"></a><!-- doxytag: member="wxPropertyGrid::GetCaptionForegroundColour" ref="a7a6873c630a7c36268ca3e3ebff3ea74" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxColour wxPropertyGrid::GetCaptionForegroundColour </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns current category caption text colour. </p>

</div>
</div>
<a class="anchor" id="a954ddd8903893b8090be621834eff9b7"></a><!-- doxytag: member="wxPropertyGrid::GetCellBackgroundColour" ref="a954ddd8903893b8090be621834eff9b7" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxColour wxPropertyGrid::GetCellBackgroundColour </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns current cell background colour. </p>

</div>
</div>
<a class="anchor" id="a6a38606446d345a088650898a2c50dc5"></a><!-- doxytag: member="wxPropertyGrid::GetCellDisabledTextColour" ref="a6a38606446d345a088650898a2c50dc5" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxColour wxPropertyGrid::GetCellDisabledTextColour </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns current cell text colour when disabled. </p>

</div>
</div>
<a class="anchor" id="abc4c2116081fdd319ee489e18b45cc1a"></a><!-- doxytag: member="wxPropertyGrid::GetCellTextColour" ref="abc4c2116081fdd319ee489e18b45cc1a" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxColour wxPropertyGrid::GetCellTextColour </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns current cell text colour. </p>

</div>
</div>
<a class="anchor" id="ad6e2118f252762c110322d872fa1bcdc"></a><!-- doxytag: member="wxPropertyGrid::GetChildrenCount" ref="ad6e2118f252762c110322d872fa1bcdc" args="(wxPGPropArg id) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int wxPropertyGrid::GetChildrenCount </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns number of children for the property. </p>
<p>NB: Cannot be in container methods class due to name hiding. </p>

</div>
</div>
<a class="anchor" id="ad00f8283296f2f4b2666dfab9234a33f"></a><!-- doxytag: member="wxPropertyGrid::GetEditorControl" ref="ad00f8283296f2f4b2666dfab9234a33f" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxWindow* wxPropertyGrid::GetEditorControl </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns pointer to current active primary editor control (NULL if none). </p>
<p>If editor uses clipper window, pointer is returned to the actual editor, not the clipper. </p>

</div>
</div>
<a class="anchor" id="a9a75dc5a4828db6fa36ed5db0f4f8842"></a><!-- doxytag: member="wxPropertyGrid::GetEditorTextCtrl" ref="a9a75dc5a4828db6fa36ed5db0f4f8842" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxTextCtrl* wxPropertyGrid::GetEditorTextCtrl </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns wxTextCtrl active in currently selected property, if any. </p>
<p>Takes into account wxOwnerDrawnComboBox. </p>

</div>
</div>
<a class="anchor" id="afdb846c3d5184b414da3e97adce4a34d"></a><!-- doxytag: member="wxPropertyGrid::GetEmptySpaceColour" ref="afdb846c3d5184b414da3e97adce4a34d" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxColour wxPropertyGrid::GetEmptySpaceColour </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns colour of empty space below properties. </p>

</div>
</div>
<a class="anchor" id="ac118882852d72c64d882301c4d8e8dbc"></a><!-- doxytag: member="wxPropertyGrid::GetFirstCategory" ref="ac118882852d72c64d882301c4d8e8dbc" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGrid::GetFirstCategory </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns id of first category (from target page). </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.htm#_deprecated000013">Deprecated:</a></b></dt><dd>Since version 1.3. Use <a class="el" href="classwxPropertyGridInterface.htm#a41ab8661411082563c8191f614f91007" title="Returns iterator class instance.">wxPropertyGridInterface::GetIterator()</a> instead. </dd></dl>

</div>
</div>
<a class="anchor" id="a602f7e26be3359b4932ed2c73a3ee726"></a><!-- doxytag: member="wxPropertyGrid::GetFirstProperty" ref="a602f7e26be3359b4932ed2c73a3ee726" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGrid::GetFirstProperty </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns id of first property that is not a category. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.htm#_deprecated000014">Deprecated:</a></b></dt><dd>Since version 1.3. Use <a class="el" href="classwxPropertyGridInterface.htm#a41ab8661411082563c8191f614f91007" title="Returns iterator class instance.">wxPropertyGridInterface::GetIterator()</a> instead. </dd></dl>

</div>
</div>
<a class="anchor" id="a6a41c798764206dd2a6a00eee6e73a51"></a><!-- doxytag: member="wxPropertyGrid::GetFirstVisible" ref="a6a41c798764206dd2a6a00eee6e73a51" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGrid::GetFirstVisible </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns id of first visible item, whether it is a category or property. </p>
<p>Note that visible item means category, property, or sub-property which user can see when control is scrolled properly. It does not only mean items that are actually painted on the screen.</p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.htm#_deprecated000012">Deprecated:</a></b></dt><dd>Since version 1.3. Use <a class="el" href="classwxPropertyGridInterface.htm#a41ab8661411082563c8191f614f91007" title="Returns iterator class instance.">wxPropertyGridInterface::GetIterator()</a> instead. </dd></dl>

</div>
</div>
<a class="anchor" id="ac66fe4ff205f56f6c1f45197ce72749e"></a><!-- doxytag: member="wxPropertyGrid::GetFontHeight" ref="ac66fe4ff205f56f6c1f45197ce72749e" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int wxPropertyGrid::GetFontHeight </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns height of highest characters of used font. </p>

</div>
</div>
<a class="anchor" id="a4a67df3428590d2ee6ae7f338add98d7"></a><!-- doxytag: member="wxPropertyGrid::GetGoodEditorDialogPosition" ref="a4a67df3428590d2ee6ae7f338add98d7" args="(wxPGProperty *p, const wxSize &amp;sz)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxPoint wxPropertyGrid::GetGoodEditorDialogPosition </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="paramname"> <em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxSize &amp;&nbsp;</td>
          <td class="paramname"> <em>sz</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Generates position for a widget editor dialog box. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>p</em>&nbsp;</td><td>Property for which dialog is positioned. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>sz</em>&nbsp;</td><td>Known or over-approximated size of the dialog. </td></tr>
  </table>
  </dd>
</dl>
<dl><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Position</em>&nbsp;</td><td>for dialog. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a1f148708274d44397fe6e6bd20838b6d"></a><!-- doxytag: member="wxPropertyGrid::GetGrid" ref="a1f148708274d44397fe6e6bd20838b6d" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a>* wxPropertyGrid::GetGrid </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns pointer to itself. </p>
<p>Dummy function that enables same kind of code to use <a class="el" href="classwxPropertyGrid.htm" title="wxPropertyGrid is a specialized two-column grid for editing properties such as strings...">wxPropertyGrid</a> and <a class="el" href="classwxPropertyGridManager.htm" title="wxPropertyGridManager is an efficient multi-page version of wxPropertyGrid, which...">wxPropertyGridManager</a>. </p>

</div>
</div>
<a class="anchor" id="a1b0b18a57e1b0d9ce137c140de5d8f78"></a><!-- doxytag: member="wxPropertyGrid::GetImageSize" ref="a1b0b18a57e1b0d9ce137c140de5d8f78" args="(wxPGProperty *p=NULL, int item=&#45;1) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxSize wxPropertyGrid::GetImageSize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="paramname"> <em>p</em> = <code>NULL</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>item</em> = <code>-1</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns size of the custom paint image in front of property. </p>
<p>If no argument is given, returns preferred size. </p>

</div>
</div>
<a class="anchor" id="ad0bbd3a533544a673940981e3c84aa70"></a><!-- doxytag: member="wxPropertyGrid::GetItemAtY" ref="ad0bbd3a533544a673940981e3c84aa70" args="(int y) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGrid::GetItemAtY </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>y</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns GetCustomPaintWidth for odcombo, GetImageSize(<a class="el" href="classwxPropertyGridInterface.htm#a302ae0ff624d48131544f6010373e599" title="Returns currently selected property.">GetSelection()</a>) otherwise. </p>
<p>Returns property (or category) at given y coordinate (relative to control's top left). </p>

</div>
</div>
<a class="anchor" id="a3e6f042b16facf81470d2a572228533c"></a><!-- doxytag: member="wxPropertyGrid::GetLastChild" ref="a3e6f042b16facf81470d2a572228533c" args="(wxPGPropArg id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGrid::GetLastChild </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns id of last child of given property. </p>
<dl class="remark"><dt><b>Remarks:</b></dt><dd>Returns even sub-properties.</dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.htm#_deprecated000016">Deprecated:</a></b></dt><dd>Since version 1.3. Use <a class="el" href="classwxPropertyGridInterface.htm#a41ab8661411082563c8191f614f91007" title="Returns iterator class instance.">wxPropertyGridInterface::GetIterator()</a> instead. </dd></dl>

</div>
</div>
<a class="anchor" id="a4610a440d5e81ac8f33e3a83b2538096"></a><!-- doxytag: member="wxPropertyGrid::GetLastItem" ref="a4610a440d5e81ac8f33e3a83b2538096" args="(int flags=wxPG_ITERATE_DEFAULT)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGrid::GetLastItem </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>flags</em> = <code>wxPG_ITERATE_DEFAULT</code></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns last item which could be iterated using given flags. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>flags</em>&nbsp;</td><td><a class="el" href="group__iteratorflags.htm">List of iterator flags</a> </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a21dcb9d2068e765bd3be32a5d10d71ee"></a><!-- doxytag: member="wxPropertyGrid::GetLastProperty" ref="a21dcb9d2068e765bd3be32a5d10d71ee" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGrid::GetLastProperty </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns id of last item. </p>
<p>Ignores categories and sub-properties.</p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.htm#_deprecated000015">Deprecated:</a></b></dt><dd>Since version 1.3. Use <a class="el" href="classwxPropertyGridInterface.htm#a41ab8661411082563c8191f614f91007" title="Returns iterator class instance.">wxPropertyGridInterface::GetIterator()</a> instead. </dd></dl>

</div>
</div>
<a class="anchor" id="a788525f3ebdd348f64a20bb40a18bffa"></a><!-- doxytag: member="wxPropertyGrid::GetLastVisible" ref="a788525f3ebdd348f64a20bb40a18bffa" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGrid::GetLastVisible </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns id of last visible item. </p>
<p>Does <b>not</b> ignore categories sub-properties.</p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.htm#_deprecated000017">Deprecated:</a></b></dt><dd>Since version 1.3. Use <a class="el" href="classwxPropertyGridInterface.htm#a41ab8661411082563c8191f614f91007" title="Returns iterator class instance.">wxPropertyGridInterface::GetIterator()</a> instead. </dd></dl>

</div>
</div>
<a class="anchor" id="a0b63e1b91091ed4a0dd1ffb497cadd85"></a><!-- doxytag: member="wxPropertyGrid::GetLineColour" ref="a0b63e1b91091ed4a0dd1ffb497cadd85" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxColour wxPropertyGrid::GetLineColour </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns colour of lines between cells. </p>

</div>
</div>
<a class="anchor" id="ac5d1453174eed3613a40608155902c11"></a><!-- doxytag: member="wxPropertyGrid::GetMarginColour" ref="ac5d1453174eed3613a40608155902c11" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxColour wxPropertyGrid::GetMarginColour </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns background colour of margin. </p>

</div>
</div>
<a class="anchor" id="a486bbbf9f7386dfbe1de35996eadadc4"></a><!-- doxytag: member="wxPropertyGrid::GetNextCategory" ref="a486bbbf9f7386dfbe1de35996eadadc4" args="(wxPGPropArg id) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGrid::GetNextCategory </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns id of next category after a given property (which does not have to be category). </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.htm#_deprecated000019">Deprecated:</a></b></dt><dd>Since version 1.3. Use <a class="el" href="classwxPropertyGridInterface.htm#a41ab8661411082563c8191f614f91007" title="Returns iterator class instance.">wxPropertyGridInterface::GetIterator()</a> instead. </dd></dl>

</div>
</div>
<a class="anchor" id="a5f2d1233e24ad1faf7b504d770bcdcd5"></a><!-- doxytag: member="wxPropertyGrid::GetNextProperty" ref="a5f2d1233e24ad1faf7b504d770bcdcd5" args="(wxPGPropArg id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGrid::GetNextProperty </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns id of next property. </p>
<p>This does <b>not</b> iterate to sub-properties or categories, unlike GetNextVisible. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.htm#_deprecated000018">Deprecated:</a></b></dt><dd>Since version 1.3. Use <a class="el" href="classwxPropertyGridInterface.htm#a41ab8661411082563c8191f614f91007" title="Returns iterator class instance.">wxPropertyGridInterface::GetIterator()</a> instead. </dd></dl>

</div>
</div>
<a class="anchor" id="a5a1541186a03f4c38e57a5da8c49902d"></a><!-- doxytag: member="wxPropertyGrid::GetNextVisible" ref="a5a1541186a03f4c38e57a5da8c49902d" args="(wxPGPropArg id) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGrid::GetNextVisible </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns id of next visible item. </p>
<p>Note that visible item means category, property, or sub-property which user can see when control is scrolled properly. It does not only mean items that are actually painted on the screen. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.htm#_deprecated000020">Deprecated:</a></b></dt><dd>Since version 1.3. Use <a class="el" href="classwxPropertyGridInterface.htm#a41ab8661411082563c8191f614f91007" title="Returns iterator class instance.">wxPropertyGridInterface::GetIterator()</a> instead. </dd></dl>

</div>
</div>
<a class="anchor" id="a2a5bae15802b159534dd5cea07dd0bcf"></a><!-- doxytag: member="wxPropertyGrid::GetPrevProperty" ref="a2a5bae15802b159534dd5cea07dd0bcf" args="(wxPGPropArg id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGrid::GetPrevProperty </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns id of previous property. </p>
<p>Unlike GetPrevVisible, this skips categories and sub-properties. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.htm#_deprecated000021">Deprecated:</a></b></dt><dd>Since version 1.3. Use <a class="el" href="classwxPropertyGridInterface.htm#a41ab8661411082563c8191f614f91007" title="Returns iterator class instance.">wxPropertyGridInterface::GetIterator()</a> instead. </dd></dl>

</div>
</div>
<a class="anchor" id="a6759a5f49233f0c5ee22bc04a33bf2eb"></a><!-- doxytag: member="wxPropertyGrid::GetPrevSiblingProperty" ref="a6759a5f49233f0c5ee22bc04a33bf2eb" args="(wxPGPropArg id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGrid::GetPrevSiblingProperty </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns id of previous item under the same parent. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.htm#_deprecated000022">Deprecated:</a></b></dt><dd>Since version 1.3. Use <a class="el" href="classwxPropertyGridInterface.htm#a41ab8661411082563c8191f614f91007" title="Returns iterator class instance.">wxPropertyGridInterface::GetIterator()</a> instead. </dd></dl>

</div>
</div>
<a class="anchor" id="ab1426600722b4cb2acceb4e862e76a6c"></a><!-- doxytag: member="wxPropertyGrid::GetPrevVisible" ref="ab1426600722b4cb2acceb4e862e76a6c" args="(wxPGPropArg id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGrid::GetPrevVisible </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns id of previous visible property. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.htm#_deprecated000023">Deprecated:</a></b></dt><dd>Since version 1.3. Use <a class="el" href="classwxPropertyGridInterface.htm#a41ab8661411082563c8191f614f91007" title="Returns iterator class instance.">wxPropertyGridInterface::GetIterator()</a> instead. </dd></dl>

</div>
</div>
<a class="anchor" id="a22be0cf78c2212688f3714dee248a5a8"></a><!-- doxytag: member="wxPropertyGrid::GetPropertyBackgroundColour" ref="a22be0cf78c2212688f3714dee248a5a8" args="(wxPGPropArg id) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxColour wxPropertyGrid::GetPropertyBackgroundColour </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns cell background colour of a property. </p>

</div>
</div>
<a class="anchor" id="a87d4a2a4d4b1d063322cc27d5f0f198d"></a><!-- doxytag: member="wxPropertyGrid::GetPropertyByLabel" ref="a87d4a2a4d4b1d063322cc27d5f0f198d" args="(const wxString &amp;name) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGrid::GetPropertyByLabel </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns id of property with given label (case-sensitive). </p>
<p>If there is no property with such label, returned property id is invalid ( i.e. it will return false with IsOk method). If there are multiple properties with identical name, most recent added is returned. </p>

</div>
</div>
<a class="anchor" id="addb11eefcc654da71cb241249ed1ea8c"></a><!-- doxytag: member="wxPropertyGrid::GetPropertyColour" ref="addb11eefcc654da71cb241249ed1ea8c" args="(wxPGPropArg id) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxColour wxPropertyGrid::GetPropertyColour </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns cell background colour of a property. </p>

</div>
</div>
<a class="anchor" id="aaf30582c06c12ba7ae5834078ca12cdc"></a><!-- doxytag: member="wxPropertyGrid::GetPropertyTextColour" ref="aaf30582c06c12ba7ae5834078ca12cdc" args="(wxPGPropArg id) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxColour wxPropertyGrid::GetPropertyTextColour </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns cell background colour of a property. </p>

</div>
</div>
<a class="anchor" id="a012ab61170fc0c747f5a910283560718"></a><!-- doxytag: member="wxPropertyGrid::GetRoot" ref="a012ab61170fc0c747f5a910283560718" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGrid::GetRoot </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns "root property". </p>
<p>It does not have name, etc. and it is not visible. It is only useful for accessing its children. </p>

</div>
</div>
<a class="anchor" id="acc83fee2be3dae5aef4250ab42d7f988"></a><!-- doxytag: member="wxPropertyGrid::GetRowHeight" ref="acc83fee2be3dae5aef4250ab42d7f988" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int wxPropertyGrid::GetRowHeight </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns height of a single grid row (in pixels). </p>

</div>
</div>
<a class="anchor" id="acadbfc88f22d5f20882297b6143f5b8c"></a><!-- doxytag: member="wxPropertyGrid::GetSelectionBackgroundColour" ref="acadbfc88f22d5f20882297b6143f5b8c" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxColour wxPropertyGrid::GetSelectionBackgroundColour </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns current selection background colour. </p>

</div>
</div>
<a class="anchor" id="ac42f480a4a9ed1b8a76d3dca822d8061"></a><!-- doxytag: member="wxPropertyGrid::GetSelectionForegroundColour" ref="ac42f480a4a9ed1b8a76d3dca822d8061" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxColour wxPropertyGrid::GetSelectionForegroundColour </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns current selection text colour. </p>

</div>
</div>
<a class="anchor" id="a06f2997f3ac04099b6c62dc721640024"></a><!-- doxytag: member="wxPropertyGrid::GetSplitterPosition" ref="a06f2997f3ac04099b6c62dc721640024" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int wxPropertyGrid::GetSplitterPosition </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns current splitter x position. </p>

</div>
</div>
<a class="anchor" id="ac6a9ca5a696a674baf26f2be8fc0534c"></a><!-- doxytag: member="wxPropertyGrid::GetUnspecifiedValueAppearance" ref="ac6a9ca5a696a674baf26f2be8fc0534c" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classwxPGCell.htm">wxPGCell</a>&amp; wxPropertyGrid::GetUnspecifiedValueAppearance </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns current appearance of unspecified value cells. </p>
<dl class="remark"><dt><b>Remarks:</b></dt><dd>If you set the unspecified value to have any textual representation, then that will override "InlineHelp" attribute.</dd></dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="classwxPropertyGrid.htm#ae4d3d62469b3f0b8a7a6e2f10fa473ff" title="Sets appearance of value cells representing an unspecified property value.">SetUnspecifiedValueAppearance()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a65bbb87f2b7b162d3b12cac3627ef413"></a><!-- doxytag: member="wxPropertyGrid::GetVerticalSpacing" ref="a65bbb87f2b7b162d3b12cac3627ef413" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int wxPropertyGrid::GetVerticalSpacing </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns current vertical spacing. </p>

</div>
</div>
<a class="anchor" id="a59766a5026c7f3980720e64224d9e99d"></a><!-- doxytag: member="wxPropertyGrid::HasSelection" ref="a59766a5026c7f3980720e64224d9e99d" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPropertyGrid::HasSelection </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns true if a property is selected. </p>

</div>
</div>
<a class="anchor" id="a35965ecaa422d47e379db010a42cc1b0"></a><!-- doxytag: member="wxPropertyGrid::IsAnyModified" ref="a35965ecaa422d47e379db010a42cc1b0" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPropertyGrid::IsAnyModified </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns true if any property has been modified by the user. </p>

</div>
</div>
<a class="anchor" id="a0f26abcaf04e88fefe7b2659d025ffc7"></a><!-- doxytag: member="wxPropertyGrid::IsEditorsValueModified" ref="a0f26abcaf04e88fefe7b2659d025ffc7" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPropertyGrid::IsEditorsValueModified </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns true if editor's value was marked modified. </p>

</div>
</div>
<a class="anchor" id="a07c6b69661f61f992e74e17a60e3c47b"></a><!-- doxytag: member="wxPropertyGrid::IsFrozen" ref="a07c6b69661f61f992e74e17a60e3c47b" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPropertyGrid::IsFrozen </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns true if updating is frozen (ie. </p>
<p>Freeze() called but not yet Thaw() ). </p>

</div>
</div>
<a class="anchor" id="a5c67655306de7aa158518360be66b0c7"></a><!-- doxytag: member="wxPropertyGrid::MakeColumnEditable" ref="a5c67655306de7aa158518360be66b0c7" args="(unsigned int column, bool editable=true)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::MakeColumnEditable </td>
          <td>(</td>
          <td class="paramtype">unsigned int&nbsp;</td>
          <td class="paramname"> <em>column</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>editable</em> = <code>true</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Makes given column editable by user. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>editable</em>&nbsp;</td><td>Using  here will disable column from being editable. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a2662c18312222d84453305cf2c85f849"></a><!-- doxytag: member="wxPropertyGrid::OnTLPChanging" ref="a2662c18312222d84453305cf2c85f849" args="(wxWindow *newTLP)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::OnTLPChanging </td>
          <td>(</td>
          <td class="paramtype">wxWindow *&nbsp;</td>
          <td class="paramname"> <em>newTLP</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>It is recommended that you call this function any time your code causes wxPropertyGrid's top-level parent to change. </p>
<p>wxPropertyGrid's OnIdle() handler should be able to detect most changes, but it is not perfect.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>newTLP</em>&nbsp;</td><td>New top-level parent that is about to be set. Old one should still exist as the current one.</td></tr>
  </table>
  </dd>
</dl>
<dl class="remark"><dt><b>Remarks:</b></dt><dd>This function is automatically called from <a class="el" href="classwxPropertyGrid.htm" title="wxPropertyGrid is a specialized two-column grid for editing properties such as strings...">wxPropertyGrid</a>:: Reparent() and wxPropertyGridManager::Reparent(). </dd></dl>

</div>
</div>
<a class="anchor" id="a7b273f66fe8d9a54b83000d5a977ddea"></a><!-- doxytag: member="wxPropertyGrid::OnValidationFailure" ref="a7b273f66fe8d9a54b83000d5a977ddea" args="(wxPGProperty *property, wxVariant &amp;invalidValue)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPropertyGrid::OnValidationFailure </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="paramname"> <em>property</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxVariant &amp;&nbsp;</td>
          <td class="paramname"> <em>invalidValue</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Called when validation for given property fails. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>invalidValue</em>&nbsp;</td><td>Value which failed in validation. </td></tr>
  </table>
  </dd>
</dl>
<dl><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Return</em>&nbsp;</td><td>true if user is allowed to change to another property even if current has invalid value. </td></tr>
  </table>
  </dd>
</dl>
<dl class="remark"><dt><b>Remarks:</b></dt><dd>To add your own validation failure behavior, override <a class="el" href="classwxPropertyGrid.htm#a55a0e3496523b449ea22e49e1b260751" title="Override to customize property validation failure behavior.">wxPropertyGrid::DoOnValidationFailure()</a>. </dd></dl>

</div>
</div>
<a class="anchor" id="a07fca99e433b6c9563cf99d5e308c237"></a><!-- doxytag: member="wxPropertyGrid::PerformValidation" ref="a07fca99e433b6c9563cf99d5e308c237" args="(wxPGProperty *p, wxVariant &amp;pendingValue)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool wxPropertyGrid::PerformValidation </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="paramname"> <em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxVariant &amp;&nbsp;</td>
          <td class="paramname"> <em>pendingValue</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Runs all validation functionality (includes sending wxEVT_PG_CHANGING). </p>
<p>Returns true if all tests passed. </p>

</div>
</div>
<a class="anchor" id="a89ee01017530df27ff2c469bfbe0605e"></a><!-- doxytag: member="wxPropertyGrid::RegisterEditorClass" ref="a89ee01017530df27ff2c469bfbe0605e" args="(wxPGEditor *editor, const wxString &amp;name, bool noDefCheck=false)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classwxPGEditor.htm">wxPGEditor</a>* wxPropertyGrid::RegisterEditorClass </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *&nbsp;</td>
          <td class="paramname"> <em>editor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>noDefCheck</em> = <code>false</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Registers a new editor class. </p>
<dl><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Pointer</em>&nbsp;</td><td>to the editor class instance that should be used. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a8c3db3b7df8b21c7ee1a1f1a6efe5e40"></a><!-- doxytag: member="wxPropertyGrid::RemoveFromSelection" ref="a8c3db3b7df8b21c7ee1a1f1a6efe5e40" args="(wxPGPropArg id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPropertyGrid::RemoveFromSelection </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Removes given property from selection. </p>
<p>If property is not selected, an assertion failure will occur. </p>

</div>
</div>
<a class="anchor" id="a799155caa94f83ec50252df91b4715bc"></a><!-- doxytag: member="wxPropertyGrid::ResetColumnSizes" ref="a799155caa94f83ec50252df91b4715bc" args="(bool enableAutoResizing=false)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::ResetColumnSizes </td>
          <td>(</td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>enableAutoResizing</em> = <code>false</code></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Resets column sizes and splitter positions, based on proportions. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>enableAutoResizing</em>&nbsp;</td><td>If , automatic column resizing is enabled (only applicapple if window style wxPG_SPLITTER_AUTO_CENTER is used).</td></tr>
  </table>
  </dd>
</dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="classwxPropertyGridInterface.htm#a5df440361d9e85f3a48d79d7b45667e1" title="Set proportion of a auto-stretchable column.">wxPropertyGridInterface::SetColumnProportion()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="ab2c5acf3ce62377a8d570fd089cb815b"></a><!-- doxytag: member="wxPropertyGrid::SelectProperty" ref="ab2c5acf3ce62377a8d570fd089cb815b" args="(wxPGPropArg id, bool focus=false)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPropertyGrid::SelectProperty </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>focus</em> = <code>false</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Selects a property. </p>
<p>Editor widget is automatically created, but not focused unless focus is true. This will generate wxEVT_PG_SELECT event. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>id</em>&nbsp;</td><td>Id to property to select. </td></tr>
  </table>
  </dd>
</dl>
<dl><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>True</em>&nbsp;</td><td>if selection finished succesfully. Usually only fails if current value in editor is not valid.</td></tr>
  </table>
  </dd>
</dl>
<dl class="remark"><dt><b>Remarks:</b></dt><dd>This clears any previous selection.</dd></dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="classwxPropertyGridInterface.htm#a21aaa366bcdf8ce5d2f45fa81b143331" title="Clears current selection, if any.">wxPropertyGridInterface::ClearSelection()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a523f90a749685d6d97ca247907f1793a"></a><!-- doxytag: member="wxPropertyGrid::SetButtonShortcut" ref="a523f90a749685d6d97ca247907f1793a" args="(int keycode, bool ctrlDown=false, bool altDown=false)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::SetButtonShortcut </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>keycode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>ctrlDown</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>altDown</em> = <code>false</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Changes keyboard shortcut to push the editor button. </p>
<dl class="remark"><dt><b>Remarks:</b></dt><dd>You can set default with keycode 0. Good value for the platform is guessed, but don't expect it to be very accurate. </dd></dl>

</div>
</div>
<a class="anchor" id="a206216506a3e873044b020a3f41c2841"></a><!-- doxytag: member="wxPropertyGrid::SetCaptionBackgroundColour" ref="a206216506a3e873044b020a3f41c2841" args="(const wxColour &amp;col)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::SetCaptionBackgroundColour </td>
          <td>(</td>
          <td class="paramtype">const wxColour &amp;&nbsp;</td>
          <td class="paramname"> <em>col</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets category caption background colour. </p>

</div>
</div>
<a class="anchor" id="a5b352c8d768b71e89bdc7c3a430cc089"></a><!-- doxytag: member="wxPropertyGrid::SetCaptionForegroundColour" ref="a5b352c8d768b71e89bdc7c3a430cc089" args="(const wxColour &amp;col)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::SetCaptionForegroundColour </td>
          <td>(</td>
          <td class="paramtype">const wxColour &amp;&nbsp;</td>
          <td class="paramname"> <em>col</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets category caption text colour. </p>

</div>
</div>
<a class="anchor" id="a0610da7b0eae7239902fe7b9a9c06983"></a><!-- doxytag: member="wxPropertyGrid::SetCellBackgroundColour" ref="a0610da7b0eae7239902fe7b9a9c06983" args="(const wxColour &amp;col)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::SetCellBackgroundColour </td>
          <td>(</td>
          <td class="paramtype">const wxColour &amp;&nbsp;</td>
          <td class="paramname"> <em>col</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets default cell background colour - applies to property cells. </p>
<p>Note that appearance of editor widgets may not be affected. </p>

</div>
</div>
<a class="anchor" id="a9ca000c6df42b90fd751e65ead5296c1"></a><!-- doxytag: member="wxPropertyGrid::SetCellTextColour" ref="a9ca000c6df42b90fd751e65ead5296c1" args="(const wxColour &amp;col)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::SetCellTextColour </td>
          <td>(</td>
          <td class="paramtype">const wxColour &amp;&nbsp;</td>
          <td class="paramname"> <em>col</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets default cell text colour - applies to property name and value text. </p>
<p>Note that appearance of editor widgets may not be affected. </p>

</div>
</div>
<a class="anchor" id="a52022182a61c16b35e54fa6602345771"></a><!-- doxytag: member="wxPropertyGrid::SetEmptySpaceColour" ref="a52022182a61c16b35e54fa6602345771" args="(const wxColour &amp;col)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::SetEmptySpaceColour </td>
          <td>(</td>
          <td class="paramtype">const wxColour &amp;&nbsp;</td>
          <td class="paramname"> <em>col</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets colour of empty space below properties. </p>

</div>
</div>
<a class="anchor" id="a258482fbdc922a616daa63a4988f041e"></a><!-- doxytag: member="wxPropertyGrid::SetLineColour" ref="a258482fbdc922a616daa63a4988f041e" args="(const wxColour &amp;col)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::SetLineColour </td>
          <td>(</td>
          <td class="paramtype">const wxColour &amp;&nbsp;</td>
          <td class="paramname"> <em>col</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets colour of lines between cells. </p>

</div>
</div>
<a class="anchor" id="a5126790886683c52971cfcd2ebe4d04e"></a><!-- doxytag: member="wxPropertyGrid::SetMarginColour" ref="a5126790886683c52971cfcd2ebe4d04e" args="(const wxColour &amp;col)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::SetMarginColour </td>
          <td>(</td>
          <td class="paramtype">const wxColour &amp;&nbsp;</td>
          <td class="paramname"> <em>col</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets background colour of margin. </p>

</div>
</div>
<a class="anchor" id="a8c6328a5c09549ccfe9756fafe5065da"></a><!-- doxytag: member="wxPropertyGrid::SetPropertyAttributeAll" ref="a8c6328a5c09549ccfe9756fafe5065da" args="(const wxString &amp;attrName, wxVariant value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::SetPropertyAttributeAll </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>attrName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxVariant&nbsp;</td>
          <td class="paramname"> <em>value</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets property attribute for all applicapple properties. </p>
<p>Be sure to use this method after all properties have been added to the grid. </p>

</div>
</div>
<a class="anchor" id="ab8e74bd6065a4d5750fa3ce9c14bda90"></a><!-- doxytag: member="wxPropertyGrid::SetPropertyBackgroundColour" ref="ab8e74bd6065a4d5750fa3ce9c14bda90" args="(wxPGPropArg id, const wxColour &amp;col, int flags=wxPG_RECURSE)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::SetPropertyBackgroundColour </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxColour &amp;&nbsp;</td>
          <td class="paramname"> <em>col</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>flags</em> = <code>wxPG_RECURSE</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets background colour of property and all its children. </p>
<p>Colours of captions are not affected. Background brush cache is optimized for often set colours to be set last.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>flags</em>&nbsp;</td><td>Default is wxPG_RECURSE which causes colour to be set recursively. Omit this flag to only set colour for the property in question and not any of its children. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ae8b3d2b14f73b49ed882d6cea1660c7e"></a><!-- doxytag: member="wxPropertyGrid::SetPropertyColour" ref="ae8b3d2b14f73b49ed882d6cea1660c7e" args="(wxPGPropArg id, const wxColour &amp;col)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::SetPropertyColour </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxColour &amp;&nbsp;</td>
          <td class="paramname"> <em>col</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets background colour of property and all its children. </p>
<p>Colours of captions are not affected. Background brush cache is optimized for often set colours to be set last.</p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.htm#_deprecated000024">Deprecated:</a></b></dt><dd>Since version 1.3. Use SetPropertyBackgroundColour instead. </dd></dl>

</div>
</div>
<a class="anchor" id="a6755a5eed2bd4cacf47399c313fff7e1"></a><!-- doxytag: member="wxPropertyGrid::SetPropertyColourToDefault" ref="a6755a5eed2bd4cacf47399c313fff7e1" args="(wxPGPropArg id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::SetPropertyColourToDefault </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets background and text colour of property and all its children to the default. </p>

</div>
</div>
<a class="anchor" id="aee6c7e1d87b7c1a1c7d12715f43fb459"></a><!-- doxytag: member="wxPropertyGrid::SetPropertyName" ref="aee6c7e1d87b7c1a1c7d12715f43fb459" args="(wxPGPropArg id, const wxString &amp;newname)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::SetPropertyName </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>newname</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets name of a property. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>id</em>&nbsp;</td><td>Id of a property. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>newname</em>&nbsp;</td><td>New name. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a99076183852fcff02bf32a3a834973ea"></a><!-- doxytag: member="wxPropertyGrid::SetPropertyTextColour" ref="a99076183852fcff02bf32a3a834973ea" args="(wxPGPropArg id, const wxColour &amp;col, int flags=wxPG_RECURSE)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::SetPropertyTextColour </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxColour &amp;&nbsp;</td>
          <td class="paramname"> <em>col</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>flags</em> = <code>wxPG_RECURSE</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets text colour of property and all its children. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>flags</em>&nbsp;</td><td>Default is wxPG_RECURSE which causes colour to be set recursively. Omit this flag to only set colour for the property in question and not any of its children. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a1966c58ae5b4551a156971f80b401e7e"></a><!-- doxytag: member="wxPropertyGrid::SetSelectionBackground" ref="a1966c58ae5b4551a156971f80b401e7e" args="(const wxColour &amp;col)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::SetSelectionBackground </td>
          <td>(</td>
          <td class="paramtype">const wxColour &amp;&nbsp;</td>
          <td class="paramname"> <em>col</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets selection background colour - applies to selected property name background. </p>

</div>
</div>
<a class="anchor" id="afe4a8bfb870e966e9a1c6df91c8d8ae0"></a><!-- doxytag: member="wxPropertyGrid::SetSelectionForeground" ref="afe4a8bfb870e966e9a1c6df91c8d8ae0" args="(const wxColour &amp;col)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::SetSelectionForeground </td>
          <td>(</td>
          <td class="paramtype">const wxColour &amp;&nbsp;</td>
          <td class="paramname"> <em>col</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets selection foreground colour - applies to selected property name text. </p>

</div>
</div>
<a class="anchor" id="ad413c2a9f94db90466bc9039f928afe6"></a><!-- doxytag: member="wxPropertyGrid::SetSortFunction" ref="ad413c2a9f94db90466bc9039f928afe6" args="(wxPGSortCallback sortFunction)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::SetSortFunction </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__miscellaneous.htm#gadd392b8d6550141475e3efb953b0a20f">wxPGSortCallback</a>&nbsp;</td>
          <td class="paramname"> <em>sortFunction</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets the property sorting function. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>sortFunction</em>&nbsp;</td><td>The sorting function to be used. It should return a value greater than 0 if position of p1 is after p2. So, for instance, when comparing property names, you can use following implementation:</td></tr>
  </table>
  </dd>
</dl>
<div class="fragment"><pre class="fragment">                <span class="keywordtype">int</span> MyPropertySortFunction(<a class="code" href="classwxPropertyGrid.htm" title="wxPropertyGrid is a specialized two-column grid for editing properties such as strings...">wxPropertyGrid</a>* propGrid,
                                           <a class="code" href="classwxPGProperty.htm" title="wxPGProperty is base class for all wxPropertyGrid properties.">wxPGProperty</a>* p1,
                                           <a class="code" href="classwxPGProperty.htm" title="wxPGProperty is base class for all wxPropertyGrid properties.">wxPGProperty</a>* p2)
                {
                    <span class="keywordflow">return</span> p1-&gt;<a class="code" href="classwxPGProperty.htm#adc211e2a17cfaab3a1c7d4b6fd8788b6" title="Returns property&amp;#39;s base name (ie.">GetBaseName</a>().compare( p2-&gt;<a class="code" href="classwxPGProperty.htm#adc211e2a17cfaab3a1c7d4b6fd8788b6" title="Returns property&amp;#39;s base name (ie.">GetBaseName</a>() );
                }
</pre></div><dl class="remark"><dt><b>Remarks:</b></dt><dd>Default property sort function sorts properties by their labels. </dd></dl>

</div>
</div>
<a class="anchor" id="ac38c3f5b8e6403b806f917b0b07db254"></a><!-- doxytag: member="wxPropertyGrid::SetSplitterLeft" ref="ac38c3f5b8e6403b806f917b0b07db254" args="(bool subProps=false)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::SetSplitterLeft </td>
          <td>(</td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>subProps</em> = <code>false</code></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Moves splitter as left as possible, while still allowing all labels to be shown in full. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>subProps</em>&nbsp;</td><td>If false, will still allow sub-properties (ie. properties which parent is not root or category) to be cropped. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a9587e06dc278a5bd33217b4aa2bfb114"></a><!-- doxytag: member="wxPropertyGrid::SetSplitterPosition" ref="a9587e06dc278a5bd33217b4aa2bfb114" args="(int newxpos, bool refresh=true)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::SetSplitterPosition </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>newxpos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>refresh</em> = <code>true</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets x coordinate of the splitter. </p>
<dl class="remark"><dt><b>Remarks:</b></dt><dd>Splitter position cannot exceed grid size, and therefore setting it during form creation may fail as initial grid size is often smaller than desired splitter position, especially when sizers are being used. </dd></dl>

</div>
</div>
<a class="anchor" id="a2a6f2e2d16ab57be97a445f0efbb5035"></a><!-- doxytag: member="wxPropertyGrid::SetUnspecifiedCommonValue" ref="a2a6f2e2d16ab57be97a445f0efbb5035" args="(int index)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::SetUnspecifiedCommonValue </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>index</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set index of common value that will truly change value to unspecified. </p>
<p>Using -1 will set none to have such effect. Default is 0. </p>

</div>
</div>
<a class="anchor" id="ae4d3d62469b3f0b8a7a6e2f10fa473ff"></a><!-- doxytag: member="wxPropertyGrid::SetUnspecifiedValueAppearance" ref="ae4d3d62469b3f0b8a7a6e2f10fa473ff" args="(const wxPGCell &amp;cell)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::SetUnspecifiedValueAppearance </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classwxPGCell.htm">wxPGCell</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>cell</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets appearance of value cells representing an unspecified property value. </p>
<p>Default appearance is blank.</p>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="classwxPGProperty.htm#a4e55506bbc49f0b7d447df71a00f2df6" title="Sets property value to unspecified.">wxPGProperty::SetValueToUnspecified()</a>, <a class="el" href="classwxPGProperty.htm#a785c3679e91f5b878bcbaec31aa1bccc" title="Returns  if property value is unspecified.">wxPGProperty::IsValueUnspecified()</a>, </dd></dl>

</div>
</div>
<a class="anchor" id="a19a1ce53f879681e9b2b2ede5c571cb7"></a><!-- doxytag: member="wxPropertyGrid::SetupTextCtrlValue" ref="a19a1ce53f879681e9b2b2ede5c571cb7" args="(const wxString text)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::SetupTextCtrlValue </td>
          <td>(</td>
          <td class="paramtype">const wxString&nbsp;</td>
          <td class="paramname"> <em>text</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Must be called in <a class="el" href="classwxPGEditor.htm#a9d33fbd55fe4fe390bdaa826a7ff87e2" title="Instantiates editor controls.">wxPGEditor::CreateControls()</a> if primary editor window is wxTextCtrl, just before textctrl is created. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>text</em>&nbsp;</td><td>Initial text value of created wxTextCtrl. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a8829779832e7670948a11b5ea46f41bb"></a><!-- doxytag: member="wxPropertyGrid::SetVerticalSpacing" ref="a8829779832e7670948a11b5ea46f41bb" args="(int vspacing)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::SetVerticalSpacing </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>vspacing</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets vertical spacing. </p>
<p>Can be 1, 2, or 3 - a value relative to font height. Value of 2 should be default on most platforms. </p>
<dl class="remark"><dt><b>Remarks:</b></dt><dd>On wxMSW, wxComboBox, when used as property editor widget, will spill out with anything less than 3. </dd></dl>

</div>
</div>
<a class="anchor" id="ad10b740bdbc1a8c9fed8a4bc8de323f5"></a><!-- doxytag: member="wxPropertyGrid::SetVirtualWidth" ref="ad10b740bdbc1a8c9fed8a4bc8de323f5" args="(int width)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::SetVirtualWidth </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>width</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set virtual width for this particular page. </p>
<p>Width -1 indicates that the virtual width should be disabled. </p>

</div>
</div>
<a class="anchor" id="a6b416e4dfbfde7cc96481a4a779ae43d"></a><!-- doxytag: member="wxPropertyGrid::SetWindowStyleFlag" ref="a6b416e4dfbfde7cc96481a4a779ae43d" args="(long style)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void wxPropertyGrid::SetWindowStyleFlag </td>
          <td>(</td>
          <td class="paramtype">long&nbsp;</td>
          <td class="paramname"> <em>style</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Overridden function. </p>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="group__wndflags.htm">Additional Window Styles</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a7b0f2d8866f2931762aaabe88bf7d85e"></a><!-- doxytag: member="wxPropertyGrid::ShowPropertyError" ref="a7b0f2d8866f2931762aaabe88bf7d85e" args="(wxPGPropArg id, const wxString &amp;msg)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::ShowPropertyError </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>msg</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Shows an brief error message that is related to a property. </p>

</div>
</div>
<a class="anchor" id="a38d28048e88e019f718e663de5c66cad"></a><!-- doxytag: member="wxPropertyGrid::Sort" ref="a38d28048e88e019f718e663de5c66cad" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::Sort </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sorts all items at all levels (except sub-properties). </p>

</div>
</div>
<a class="anchor" id="a72357b220321bfbd3bc7efdc7d613d22"></a><!-- doxytag: member="wxPropertyGrid::ValueChangeInEvent" ref="a72357b220321bfbd3bc7efdc7d613d22" args="(wxVariant variant)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGrid::ValueChangeInEvent </td>
          <td>(</td>
          <td class="paramtype">wxVariant&nbsp;</td>
          <td class="paramname"> <em>variant</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Call this from <a class="el" href="classwxPGProperty.htm#a16fbe26240bf47ab0a9a02d21781da73" title="Events received by editor widgets are processed here.">wxPGProperty::OnEvent()</a> to cause property value to be changed after the function returns (with true as return value). </p>
<p><a class="el" href="classwxPropertyGrid.htm#a72357b220321bfbd3bc7efdc7d613d22" title="Call this from wxPGProperty::OnEvent() to cause property value to be changed after...">ValueChangeInEvent()</a> must be used if you wish the application to be able to use wxEVT_PG_CHANGING to potentially veto the given value. </p>

</div>
</div>
<a class="anchor" id="aee5777433137edfe9d6fbb301775e9bf"></a><!-- doxytag: member="wxPropertyGrid::WasValueChangedInEvent" ref="aee5777433137edfe9d6fbb301775e9bf" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPropertyGrid::WasValueChangedInEvent </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>You can use this member function, for instance, to detect in <a class="el" href="classwxPGProperty.htm#a16fbe26240bf47ab0a9a02d21781da73" title="Events received by editor widgets are processed here.">wxPGProperty::OnEvent()</a> if <a class="el" href="classwxPGProperty.htm#ade9385b0bc3c9ba4833b271157e87354" title="Call in OnEvent(), OnButtonClick() etc.">wxPGProperty::SetValueInEvent()</a> was already called in <a class="el" href="classwxPGEditor.htm#a035fa3bee4ac87e4300df0c637a56261" title="Handles events.">wxPGEditor::OnEvent()</a>. </p>
<p>It really only detects if was value was changed using <a class="el" href="classwxPGProperty.htm#ade9385b0bc3c9ba4833b271157e87354" title="Call in OnEvent(), OnButtonClick() etc.">wxPGProperty::SetValueInEvent()</a>, which is usually used when a 'picker' dialog is displayed. If value was written by "normal means" in <a class="el" href="classwxPGProperty.htm#a974a9b01c1f88cf4db630b6895453db8" title="Converts &#39;text&#39; into proper value &#39;variant&#39;.">wxPGProperty::StringToValue()</a> or IntToValue(), then this function will return false (on the other hand, <a class="el" href="classwxPGProperty.htm#a16fbe26240bf47ab0a9a02d21781da73" title="Events received by editor widgets are processed here.">wxPGProperty::OnEvent()</a> is not even called in those cases). </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>propgrid.h</li>
</ul>
</div>
<!--- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&nbsp;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&nbsp;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&nbsp;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&nbsp;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&nbsp;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&nbsp;</span>Enumerator</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<hr class="footer"/><address style="text-align: right;"><small>Generated on Sun Feb 27 10:25:59 2011 for wxPropertyGrid by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.3 </small></address>
</body>
</html>
