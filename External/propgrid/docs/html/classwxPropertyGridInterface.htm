<!-- This comment will put IE 6, 7 and 8 in quirks mode -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>wxPropertyGrid: wxPropertyGridInterface Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javaScript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.6.3 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "search",false,'Search');
--></script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <img id="MSearchSelect" src="search/search.png"
             onmouseover="return searchBox.OnSearchSelectShow()"
             onmouseout="return searchBox.OnSearchSelectHide()"
             alt=""/>
        <input type="text" id="MSearchField" value="Search" accesskey="S"
             onfocus="searchBox.OnSearchFieldFocus(true)" 
             onblur="searchBox.OnSearchFieldFocus(false)" 
             onkeyup="searchBox.OnSearchFieldChange(event)"/>
        <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
        </div>
      </li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.htm"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>wxPropertyGridInterface Class Reference</h1><!-- doxytag: class="wxPropertyGridInterface" -->
<p>In order to have most same base methods, both <a class="el" href="classwxPropertyGrid.htm" title="wxPropertyGrid is a specialized two-column grid for editing properties such as strings...">wxPropertyGrid</a> and <a class="el" href="classwxPropertyGridManager.htm" title="wxPropertyGridManager is an efficient multi-page version of wxPropertyGrid, which...">wxPropertyGridManager</a> must derive from this.  
<a href="#_details">More...</a></p>

<p><code>#include &lt;propgrid.h&gt;</code></p>
<div class="dynheader">
Inheritance diagram for wxPropertyGridInterface:</div>
<div class="dynsection">
 <div class="center">
  <img src="classwxPropertyGridInterface.png" usemap="#wxPropertyGridInterface_map" alt=""/>
  <map id="wxPropertyGridInterface_map" name="wxPropertyGridInterface_map">
<area href="classwxPropertyGrid.htm" alt="wxPropertyGrid" shape="rect" coords="0,56,151,80"/>
<area href="classwxPropertyGridManager.htm" alt="wxPropertyGridManager" shape="rect" coords="161,56,312,80"/>
<area href="classwxPropertyGridPage.htm" alt="wxPropertyGridPage" shape="rect" coords="322,56,473,80"/>
</map>
 </div>
</div>

<p><a href="classwxPropertyGridInterface-members.htm">List of all members.</a></p>
<table border="0" cellpadding="0" cellspacing="0">
<tr><td colspan="2"><h2>Public Types</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#acd38be5728243d99365e0f371b6c19ae">EditableStateFlags</a> { <br/>
&nbsp;&nbsp;<a class="el" href="classwxPropertyGridInterface.htm#acd38be5728243d99365e0f371b6c19aeacf359fdb91a019696f4cd34644e624f3">SelectionState</a> =  0x01, 
<a class="el" href="classwxPropertyGridInterface.htm#acd38be5728243d99365e0f371b6c19aeaa59cf2646aedbb9c00aeb8754b11610b">ExpandedState</a> =  0x02, 
<a class="el" href="classwxPropertyGridInterface.htm#acd38be5728243d99365e0f371b6c19aeaae0ce13a64f1cdf3e208e2ede6615d66">ScrollPosState</a> =  0x04, 
<a class="el" href="classwxPropertyGridInterface.htm#acd38be5728243d99365e0f371b6c19aea37f63cb4a3bca8249c62a09dc6d973ff">PageState</a> =  0x08, 
<br/>
&nbsp;&nbsp;<a class="el" href="classwxPropertyGridInterface.htm#acd38be5728243d99365e0f371b6c19aea1cc473f6d94d75e3e97159ccd4a325d3">SplitterPosState</a> =  0x10, 
<a class="el" href="classwxPropertyGridInterface.htm#acd38be5728243d99365e0f371b6c19aea0619889c5d768946557ac361b5fff7e5">DescBoxState</a> =  0x20, 
<a class="el" href="classwxPropertyGridInterface.htm#acd38be5728243d99365e0f371b6c19aea19c3af2d76e93bca4d687865b1ea27f4">AllStates</a>
<br/>
 }</td></tr>
<tr><td colspan="2"><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a847f896622e1ede1c7b6434c90b9ec4a">AddPropertyChoice</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxString &amp;label, int value=INT_MAX)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Adds choice to a property that can accept one.  <a href="#a847f896622e1ede1c7b6434c90b9ec4a"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a8496963f469db86941157f8ce67896c4">Append</a> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *property)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Appends property to the list.  <a href="#a8496963f469db86941157f8ce67896c4"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac14addc86572a75f6da9e378ff0a57b4"></a><!-- doxytag: member="wxPropertyGridInterface::AppendCategory" ref="ac14addc86572a75f6da9e378ff0a57b4" args="(const wxString &amp;label, const wxString &amp;name=(*((wxString *) NULL)))" -->
<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><b>AppendCategory</b> (const wxString &amp;label, const wxString &amp;name=(*((wxString *) NULL)))</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7ed1303be2b446860364cf6cb5e60e34"></a><!-- doxytag: member="wxPropertyGridInterface::AppendIn" ref="a7ed1303be2b446860364cf6cb5e60e34" args="(wxPGPropArg id, wxPGProperty *newproperty)" -->
<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><b>AppendIn</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *newproperty)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a4917f17cd9f415db313942157788e8bf">BeginAddChildren</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Inorder to add new items into a property with fixed children (for instance, <a class="el" href="classwxFlagsProperty.htm" title="Represents a bit set that fits in a long integer.">wxFlagsProperty</a>), you need to call this method.  <a href="#a4917f17cd9f415db313942157788e8bf"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a03e60ec606ffc2a9e1ea944f832ba4d4">ChangePropertyValue</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, wxVariant newValue)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Changes value of a property, as if from an editor.  <a href="#a03e60ec606ffc2a9e1ea944f832ba4d4"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a787e4282dbb85994af0e29a948efa98c"></a><!-- doxytag: member="wxPropertyGridInterface::Clear" ref="a787e4282dbb85994af0e29a948efa98c" args="()=0" -->
virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a787e4282dbb85994af0e29a948efa98c">Clear</a> ()=0</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Deletes all properties. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a1ccfe95ec7f941d75931f4bd039a2ec2">ClearPropertyValue</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Resets value of a property to its default.  <a href="#a1ccfe95ec7f941d75931f4bd039a2ec2"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a21aaa366bcdf8ce5d2f45fa81b143331">ClearSelection</a> (bool validation=true)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Clears current selection, if any.  <a href="#a21aaa366bcdf8ce5d2f45fa81b143331"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#adc64e1889b8be3f775f34e9c91087596">Collapse</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Collapses given category or property with children.  <a href="#adc64e1889b8be3f775f34e9c91087596"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a3acfb29c90820199472ee16d8be40cf2">CollapseAll</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Collapses all items that can be collapsed.  <a href="#a3acfb29c90820199472ee16d8be40cf2"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#ae2b66f448c288826a902d4c2a24cf9a8">Delete</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Deletes a property by id.  <a href="#ae2b66f448c288826a902d4c2a24cf9a8"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#ad7f72b604efa4854a673ebb722b26c94">DeleteProperty</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Removes and deletes a property.  <a href="#ad7f72b604efa4854a673ebb722b26c94"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a89d4a4c66b2f9b0fa0f2690a124ee225">DeletePropertyChoice</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, int index)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Deletes choice from a property.  <a href="#a89d4a4c66b2f9b0fa0f2690a124ee225"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#add678462c196db54113a6b015b841068">Disable</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Disables property.  <a href="#add678462c196db54113a6b015b841068"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#ac2b62fc91927b5b4f9e9a95eebbb26d1">DisableProperty</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Disables property.  <a href="#ac2b62fc91927b5b4f9e9a95eebbb26d1"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#ab46cadeb40c717d902daef74005431bf">EnableProperty</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, bool enable=true)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Enables or disables property, depending on whether enable is true or false.  <a href="#ab46cadeb40c717d902daef74005431bf"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1715d4804457f8b44e9382b3127b0140"></a><!-- doxytag: member="wxPropertyGridInterface::EndAddChildren" ref="a1715d4804457f8b44e9382b3127b0140" args="(wxPGPropArg id)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a1715d4804457f8b44e9382b3127b0140">EndAddChildren</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Called after population of property with fixed children has finished. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a9e37a22d7a60feb41f724119678b663e">Expand</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Expands given category or property with children.  <a href="#a9e37a22d7a60feb41f724119678b663e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a678020610f0af4140eda4726cd89d728"></a><!-- doxytag: member="wxPropertyGridInterface::ExpandAll" ref="a678020610f0af4140eda4726cd89d728" args="(bool expand=true)" -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a678020610f0af4140eda4726cd89d728">ExpandAll</a> (bool expand=true)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Expands all items that can be expanded. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#ac39b51cf43d0dd8cc9b6cf4d54119da8">GetColumnProportion</a> (unsigned int column) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns auto-resize proportion of the given column.  <a href="#ac39b51cf43d0dd8cc9b6cf4d54119da8"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">wxArrayPGProperty&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a6f2ccd5c8da4e6d61ab4b1b1791bc821">GetExpandedProperties</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns list of expanded properties.  <a href="#a6f2ccd5c8da4e6d61ab4b1b1791bc821"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad819f935b84512e7ddeeb8f719c9cf39"></a><!-- doxytag: member="wxPropertyGridInterface::GetFirst" ref="ad819f935b84512e7ddeeb8f719c9cf39" args="(int flags=wxPG_ITERATE_ALL) const " -->
const <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetFirst</b> (int flags=wxPG_ITERATE_ALL) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a408afe75901ecc8092fba0abd3ec1750">GetFirst</a> (int flags=wxPG_ITERATE_ALL)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns id of first item, whether it is a category or property.  <a href="#a408afe75901ecc8092fba0abd3ec1750"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#abf1d15cc10bf6c37aeaf84dfc390d743">GetFirstChild</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns id of first child of given property.  <a href="#abf1d15cc10bf6c37aeaf84dfc390d743"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a081cfe3d6c48372981f38a134594dff2"></a><!-- doxytag: member="wxPropertyGridInterface::GetIterator" ref="a081cfe3d6c48372981f38a134594dff2" args="(int flags, int startPos) const " -->
<a class="el" href="classwxPropertyGridConstIterator.htm">wxPropertyGridConstIterator</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetIterator</b> (int flags, int startPos) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classwxPropertyGridIterator.htm">wxPropertyGridIterator</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#acef8d8a08d18b0f78a29d52c96c85d8d">GetIterator</a> (int flags, int startPos)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns iterator class instance.  <a href="#acef8d8a08d18b0f78a29d52c96c85d8d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="acc9bc495b14420b8c87506b8914fc4f9"></a><!-- doxytag: member="wxPropertyGridInterface::GetIterator" ref="acc9bc495b14420b8c87506b8914fc4f9" args="(int flags=wxPG_ITERATE_DEFAULT, wxPGProperty *firstProp=NULL) const " -->
<a class="el" href="classwxPropertyGridConstIterator.htm">wxPropertyGridConstIterator</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetIterator</b> (int flags=wxPG_ITERATE_DEFAULT, <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *firstProp=NULL) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classwxPropertyGridIterator.htm">wxPropertyGridIterator</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a41ab8661411082563c8191f614f91007">GetIterator</a> (int flags=wxPG_ITERATE_DEFAULT, <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *firstProp=NULL)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns iterator class instance.  <a href="#a41ab8661411082563c8191f614f91007"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#ae1d34e1730d58552710f7f8e2bbcde6d">GetNextSiblingProperty</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns next item under the same parent.  <a href="#ae1d34e1730d58552710f7f8e2bbcde6d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a16e7c98c641c293be0f5bfd569b7c097">GetPropertiesWithFlag</a> (wxArrayPGProperty *targetArr, wxPGProperty::FlagType flags, bool inverse=false, int iterFlags=(wxPG_ITERATE_PROPERTIES|wxPG_ITERATE_HIDDEN|wxPG_ITERATE_CATEGORIES)) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Adds to 'targetArr' pointers to properties that have given flags 'flags' set.  <a href="#a16e7c98c641c293be0f5bfd569b7c097"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a41c6a2d0535f4fce0cb8c351ae324667">GetProperty</a> (const wxString &amp;name) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns pointer to the property with given name (case-sensitive).  <a href="#a41c6a2d0535f4fce0cb8c351ae324667"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">wxVariant&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#ab982d81a75a957158473a468e265b314">GetPropertyAttribute</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxString &amp;attrName) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns value of given attribute.  <a href="#ab982d81a75a957158473a468e265b314"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classwxPGAttributeStorage.htm">wxPGAttributeStorage</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#aa6d505376ece79d5de324adc0d012ead">GetPropertyAttributes</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns map-like storage of property's attributes.  <a href="#aa6d505376ece79d5de324adc0d012ead"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a96e5b736b9598a307282a6c9e35ee2bc">GetPropertyByName</a> (const wxString &amp;name, const wxString &amp;subname) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns id of a sub-property 'subname' of property 'name'.  <a href="#a96e5b736b9598a307282a6c9e35ee2bc"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#ac5723b61ae48d373671343e774632ed3">GetPropertyByName</a> (const wxString &amp;name) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns pointer to the property with given name (case-sensitive).  <a href="#ac5723b61ae48d373671343e774632ed3"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0bf8da098e7bdc94ebc895b6db658eac"></a><!-- doxytag: member="wxPropertyGridInterface::GetPropertyByNameA" ref="a0bf8da098e7bdc94ebc895b6db658eac" args="(const wxString &amp;name) const " -->
<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetPropertyByNameA</b> (const wxString &amp;name) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classwxPropertyCategory.htm">wxPropertyCategory</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a761a3de09cb1483d83b6a8f603144f87">GetPropertyCategory</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns pointer of property's nearest parent category.  <a href="#a761a3de09cb1483d83b6a8f603144f87"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classwxPGChoices.htm">wxPGChoices</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a5ad74d7087934327a32e969691d043a3">GetPropertyChoices</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns writable reference to property's list of choices (and relevant values).  <a href="#a5ad74d7087934327a32e969691d043a3"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const wxChar *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#afa6e4201be4afb1c807d72102b2e4051">GetPropertyClassName</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets name of property's constructor function.  <a href="#afa6e4201be4afb1c807d72102b2e4051"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">wxPGProperty::ClientDataType&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#abd4c446c8a349eabf04adad1e2f80d8c">GetPropertyClientData</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns client data (void*) of a property.  <a href="#abd4c446c8a349eabf04adad1e2f80d8c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#aade92682f7b251d97d3ec2b53bba1e18">GetPropertyEditor</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns property's editor.  <a href="#aade92682f7b251d97d3ec2b53bba1e18"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">wxString&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#ac1bb46f25b7e2c4f66e386d5961aeba3">GetPropertyHelpString</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns help string associated with a property.  <a href="#ac1bb46f25b7e2c4f66e386d5961aeba3"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">wxBitmap *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a5938a486c4704ff1e5554c92afc582b8">GetPropertyImage</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns property's custom value image (NULL of none).  <a href="#a5938a486c4704ff1e5554c92afc582b8"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a38ce152be918956b9589f6a737937b40">GetPropertyIndex</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns property's position under its parent.  <a href="#a38ce152be918956b9589f6a737937b40"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const wxString &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a74f0ff31b45b8ea24d37d7e219de28f1">GetPropertyLabel</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns label of a property.  <a href="#a74f0ff31b45b8ea24d37d7e219de28f1"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">wxString&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a78ee2f3686e934e76bfa20a3b8415b91">GetPropertyName</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns name of a property, by which it is globally accessible.  <a href="#a78ee2f3686e934e76bfa20a3b8415b91"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a66e3790fa0ef52b76aef509e767989c0">GetPropertyParent</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns parent item of a property.  <a href="#a66e3790fa0ef52b76aef509e767989c0"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa879b01c0fcda97265383488af17c300"></a><!-- doxytag: member="wxPropertyGridInterface::GetPropertyPtr" ref="aa879b01c0fcda97265383488af17c300" args="(wxPGPropArg id) const " -->
<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#aa879b01c0fcda97265383488af17c300">GetPropertyPtr</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns pointer to a property. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">wxString&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a4f3d0044de2557f6f2431fd7aeaeed3b">GetPropertyShortClassName</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns short name for property's class.  <a href="#a4f3d0044de2557f6f2431fd7aeaeed3b"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5fa00509e8d8afde8462a64509ba5682"></a><!-- doxytag: member="wxPropertyGridInterface::GetPropertyValidator" ref="a5fa00509e8d8afde8462a64509ba5682" args="(wxPGPropArg id)" -->
wxValidator *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a5fa00509e8d8afde8462a64509ba5682">GetPropertyValidator</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns validator of a property as a reference, which you can pass to any number of SetPropertyValidator. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">wxVariant&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#aa1164652240e4b157ce5250769af537e">GetPropertyValue</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns value as wxVariant.  <a href="#aa1164652240e4b157ce5250769af537e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa464c5932add72e06c8022ac2277709c"></a><!-- doxytag: member="wxPropertyGridInterface::GetPropertyValueAsArrayInt" ref="aa464c5932add72e06c8022ac2277709c" args="(wxPGPropArg id) const " -->
wxArrayInt&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetPropertyValueAsArrayInt</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="afbb1de85a87a1d20fbf70054a144ec19"></a><!-- doxytag: member="wxPropertyGridInterface::GetPropertyValueAsArrayString" ref="afbb1de85a87a1d20fbf70054a144ec19" args="(wxPGPropArg id) const " -->
wxArrayString&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetPropertyValueAsArrayString</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0ac35a786a34eddc9d006a23110fcb61"></a><!-- doxytag: member="wxPropertyGridInterface::GetPropertyValueAsBool" ref="a0ac35a786a34eddc9d006a23110fcb61" args="(wxPGPropArg id) const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetPropertyValueAsBool</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7a75d55eb01cc869cae75fa1cffeac44"></a><!-- doxytag: member="wxPropertyGridInterface::GetPropertyValueAsDouble" ref="a7a75d55eb01cc869cae75fa1cffeac44" args="(wxPGPropArg id) const " -->
double&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetPropertyValueAsDouble</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3c72f929f0f28f6477faaf6e05bfc210"></a><!-- doxytag: member="wxPropertyGridInterface::GetPropertyValueAsInt" ref="a3c72f929f0f28f6477faaf6e05bfc210" args="(wxPGPropArg id) const " -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetPropertyValueAsInt</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2bf4b075b0b25c504a9c78a5b13fe033"></a><!-- doxytag: member="wxPropertyGridInterface::GetPropertyValueAsLong" ref="a2bf4b075b0b25c504a9c78a5b13fe033" args="(wxPGPropArg id) const " -->
long&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetPropertyValueAsLong</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0dc9044f30292c40659e09c28b9b0ee8"></a><!-- doxytag: member="wxPropertyGridInterface::GetPropertyValueAsLongLong" ref="a0dc9044f30292c40659e09c28b9b0ee8" args="(wxPGPropArg id) const " -->
wxLongLong_t&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetPropertyValueAsLongLong</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8a3911940126be47e93d3cb00bc7ea99"></a><!-- doxytag: member="wxPropertyGridInterface::GetPropertyValueAsPoint" ref="a8a3911940126be47e93d3cb00bc7ea99" args="(wxPGPropArg id) const " -->
wxPoint&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetPropertyValueAsPoint</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="add347a6f69b8306a6333e8db29989d02"></a><!-- doxytag: member="wxPropertyGridInterface::GetPropertyValueAsSize" ref="add347a6f69b8306a6333e8db29989d02" args="(wxPGPropArg id) const " -->
wxSize&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetPropertyValueAsSize</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a42537d846f644d3e8cfdb89bd37d9650"></a><!-- doxytag: member="wxPropertyGridInterface::GetPropertyValueAsString" ref="a42537d846f644d3e8cfdb89bd37d9650" args="(wxPGPropArg id) const " -->
wxString&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetPropertyValueAsString</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa4eb719d3b547bf64b2a5e297ec7bc2d"></a><!-- doxytag: member="wxPropertyGridInterface::GetPropertyValueAsULong" ref="aa4eb719d3b547bf64b2a5e297ec7bc2d" args="(wxPGPropArg id) const " -->
unsigned long&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetPropertyValueAsULong</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a573c609faf91311707b7227f1ec63acb"></a><!-- doxytag: member="wxPropertyGridInterface::GetPropertyValueAsULongLong" ref="a573c609faf91311707b7227f1ec63acb" args="(wxPGPropArg id) const " -->
wxULongLong_t&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetPropertyValueAsULongLong</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5a91468a7f40a49f4bf87918a47887b9"></a><!-- doxytag: member="wxPropertyGridInterface::GetPropertyValueAsVoidPtr" ref="a5a91468a7f40a49f4bf87918a47887b9" args="(wxPGPropArg id) const " -->
void *&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetPropertyValueAsVoidPtr</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1818d77f337091cdfc365faf04e4e6e1"></a><!-- doxytag: member="wxPropertyGridInterface::GetPropertyValueAsWxObjectPtr" ref="a1818d77f337091cdfc365faf04e4e6e1" args="(wxPGPropArg id) const " -->
wxObject *&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetPropertyValueAsWxObjectPtr</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">wxVariant&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a1abce6843caee96faaeeee952f970105">GetPropertyValues</a> (const wxString &amp;listname=wxEmptyString, <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *baseparent=NULL, long flags=0) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns a wxVariant list containing wxVariant versions of all property values.  <a href="#a1abce6843caee96faaeeee952f970105"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac5beba003f117f704d2fbc44e8416ab9"></a><!-- doxytag: member="wxPropertyGridInterface::GetPropertyValueType" ref="ac5beba003f117f704d2fbc44e8416ab9" args="(wxPGPropArg id)" -->
wxString&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetPropertyValueType</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const wxArrayPGProperty &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a49ccd0da1d0f4a68004e1a174bf5f998">GetSelectedProperties</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns list of currently selected properties.  <a href="#a49ccd0da1d0f4a68004e1a174bf5f998"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a302ae0ff624d48131544f6010373e599">GetSelection</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns currently selected property.  <a href="#a302ae0ff624d48131544f6010373e599"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a27cd56c69d63f28255c8541511290158"></a><!-- doxytag: member="wxPropertyGridInterface::GetState" ref="a27cd56c69d63f28255c8541511290158" args="() const " -->
<a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetState</b> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a96a1c13733c0a83d7b509fd7a9e9a61a"></a><!-- doxytag: member="wxPropertyGridInterface::GetVIterator" ref="a96a1c13733c0a83d7b509fd7a9e9a61a" args="(int flags) const " -->
virtual <a class="el" href="classwxPGVIterator.htm">wxPGVIterator</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a96a1c13733c0a83d7b509fd7a9e9a61a">GetVIterator</a> (int flags) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Similar to GetIterator, but instead returns <a class="el" href="classwxPGVIterator.htm" title="Abstract implementation of a simple iterator.">wxPGVIterator</a> instance, which can be useful for forward-iterating through arbitrary property containers. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#aac3d5502e764989ed8b031a3d75b8814">HideProperty</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, bool hide=true, int flags=wxPG_RECURSE)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Hides or reveals a property.  <a href="#aac3d5502e764989ed8b031a3d75b8814"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a2add53519899b8a88bda458a9ce62edc">Insert</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> parent, int index, <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *newproperty)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Also see documentation for <a class="el" href="classwxPropertyGridInterface.htm#abf342b34022630c15038c9d7679d3c57">Insert </a>.  <a href="#a2add53519899b8a88bda458a9ce62edc"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#abf342b34022630c15038c9d7679d3c57">Insert</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> priorThis, <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *newproperty)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Inserts property to the property container.  <a href="#abf342b34022630c15038c9d7679d3c57"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5e4786d502b6ff570898e98833e502ff"></a><!-- doxytag: member="wxPropertyGridInterface::InsertCategory" ref="a5e4786d502b6ff570898e98833e502ff" args="(wxPGPropArg id, int index, const wxString &amp;label, const wxString &amp;name=(*((wxString *) NULL)))" -->
<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><b>InsertCategory</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, int index, const wxString &amp;label, const wxString &amp;name=(*((wxString *) NULL)))</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a654deb44773f2d6f8eec9cfb3975d9a4">InsertPropertyChoice</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxString &amp;label, int index, int value=INT_MAX)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Inserts choice to a property that can accept one.  <a href="#a654deb44773f2d6f8eec9cfb3975d9a4"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a4aac4074d97eab3a7eb5b14e247bd573">IsModified</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if property has been modified after value set or modify flag clear by software.  <a href="#a4aac4074d97eab3a7eb5b14e247bd573"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a7dc38b7ce9ba010c49d63935328097b8">IsPropertyCategory</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if property is a category.  <a href="#a7dc38b7ce9ba010c49d63935328097b8"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#ab9ca28beec8a1da397ca984926d1186d">IsPropertyEnabled</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if property is enabled.  <a href="#ab9ca28beec8a1da397ca984926d1186d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#aa3677cf3904d78407f5d60af032760d8">IsPropertyExpanded</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if given property is expanded.  <a href="#aa3677cf3904d78407f5d60af032760d8"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a34c9622a8a65bdcf494a9fabff8e7e6e">IsPropertyKindOf</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, wxClassInfo *info) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if property is of certain type.  <a href="#a34c9622a8a65bdcf494a9fabff8e7e6e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae2640335c9e3e0071bac8a473ba3bf2a"></a><!-- doxytag: member="wxPropertyGridInterface::IsPropertyModified" ref="ae2640335c9e3e0071bac8a473ba3bf2a" args="(wxPGPropArg id) const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#ae2640335c9e3e0071bac8a473ba3bf2a">IsPropertyModified</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if property has been modified after value set or modify flag clear by software. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a60c2e3e8cbf8788f30189ce3b754b465"></a><!-- doxytag: member="wxPropertyGridInterface::IsPropertySelected" ref="a60c2e3e8cbf8788f30189ce3b754b465" args="(wxPGPropArg id) const " -->
virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a60c2e3e8cbf8788f30189ce3b754b465">IsPropertySelected</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if property is selected. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a2005aa0ab6855cc4c4ecee816f97f791">IsPropertyShown</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if property is shown (ie.  <a href="#a2005aa0ab6855cc4c4ecee816f97f791"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa0d2f85d8b21bee60e0a472a9db55054"></a><!-- doxytag: member="wxPropertyGridInterface::IsPropertyUnspecified" ref="aa0d2f85d8b21bee60e0a472a9db55054" args="(wxPGPropArg id) const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#aa0d2f85d8b21bee60e0a472a9db55054">IsPropertyUnspecified</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if property value is set to unspecified. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a39aacb70062e81939e325b4e26d6ba17">IsPropertyValueType</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxChar *typestr) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if property's value type has name typestr.  <a href="#a39aacb70062e81939e325b4e26d6ba17"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aac3d13601fb3a97f531b86923b20d5ff"></a><!-- doxytag: member="wxPropertyGridInterface::LimitPropertyEditing" ref="aac3d13601fb3a97f531b86923b20d5ff" args="(wxPGPropArg id, bool limit=true)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#aac3d13601fb3a97f531b86923b20d5ff">LimitPropertyEditing</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, bool limit=true)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Disables (limit = true) or enables (limit = false) wxTextCtrl editor of a property, if it is not the sole mean to edit the value. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a3bd90cc2fb578c6b535e11170560b348">NamesToProperties</a> (wxArrayPGProperty *properties, const wxArrayString &amp;names) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Converts array of names to array of property pointers.  <a href="#a3bd90cc2fb578c6b535e11170560b348"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#ae41c74187a535ba908c6dde684383de0">PropertiesToNames</a> (wxArrayString *names, const wxArrayPGProperty &amp;properties) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Converts array of properties to array of names.  <a href="#ae41c74187a535ba908c6dde684383de0"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af88955f4d0b962dbd5752a2a74d538bc"></a><!-- doxytag: member="wxPropertyGridInterface::RefreshGrid" ref="af88955f4d0b962dbd5752a2a74d538bc" args="(wxPropertyGridState *state=NULL)" -->
virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#af88955f4d0b962dbd5752a2a74d538bc">RefreshGrid</a> (<a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a> *state=NULL)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">If state is shown in it's grid, refresh it now. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa011608e46ea7ba1503d505c018113a3"></a><!-- doxytag: member="wxPropertyGridInterface::RefreshProperty" ref="aa011608e46ea7ba1503d505c018113a3" args="(wxPGProperty *p)=0" -->
virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><b>RefreshProperty</b> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *p)=0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a48485b2134b49f0bfb9adeb744d5c1a5">RemoveProperty</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Removes a property.  <a href="#a48485b2134b49f0bfb9adeb744d5c1a5"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#ac0b507d04a4420f3aa8fec0c38e99cd1">ReplaceProperty</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *property)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Replaces property with id with newly created property.  <a href="#ac0b507d04a4420f3aa8fec0c38e99cd1"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#aceb7f1ca6c7079c075d9876b94a2cb0f">RestoreEditableState</a> (const wxString &amp;src, int restoreStates=AllStates)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Restores user-editable state.  <a href="#aceb7f1ca6c7079c075d9876b94a2cb0f"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">wxString&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a09dcfdf53629918183615627957afe39">SaveEditableState</a> (int includedStates=AllStates) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Used to acquire user-editable state (selected property, expanded properties, scrolled position, splitter positions).  <a href="#a09dcfdf53629918183615627957afe39"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a5df440361d9e85f3a48d79d7b45667e1">SetColumnProportion</a> (unsigned int column, int proportion)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set proportion of a auto-stretchable column.  <a href="#a5df440361d9e85f3a48d79d7b45667e1"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#ae47209e69ec37de673116648c655bd44">SetExpandedProperties</a> (const wxArrayPGProperty &amp;array, bool expand=true)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets all properties in given array as expanded.  <a href="#ae47209e69ec37de673116648c655bd44"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a5c05318d9e0838ff57361c0b938ca347">SetPropertiesFlag</a> (const wxArrayPGProperty &amp;srcArr, wxPGProperty::FlagType flags, bool inverse=false)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets or clears flag(s) of all properties in given array.  <a href="#a5c05318d9e0838ff57361c0b938ca347"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a129a37f9d87a2a08516772de9860432d">SetPropertyAttribute</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxString &amp;attrName, wxVariant value, long argFlags=0)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets an attribute of a property.  <a href="#a129a37f9d87a2a08516772de9860432d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac511a98f9509a36735127af244e73598"></a><!-- doxytag: member="wxPropertyGridInterface::SetPropertyAttributes" ref="ac511a98f9509a36735127af244e73598" args="(wxPGPropArg id, const wxPGAttributeStorage &amp;attributes)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#ac511a98f9509a36735127af244e73598">SetPropertyAttributes</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const <a class="el" href="classwxPGAttributeStorage.htm">wxPGAttributeStorage</a> &amp;attributes)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets attributes from a <a class="el" href="classwxPGAttributeStorage.htm" title="wxPGAttributeStorage is somewhat optimized storage for key=variant pairs (ie.">wxPGAttributeStorage</a>. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#afd6721e817062d6c9dbb522334c029a0">SetPropertyCell</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, int column, const wxString &amp;text=wxEmptyString, const wxBitmap &amp;bitmap=wxNullBitmap, const wxColour &amp;fgCol=wxNullColour, const wxColour &amp;bgCol=wxNullColour)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets text, bitmap, and colours for given column's cell.  <a href="#afd6721e817062d6c9dbb522334c029a0"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#ad5e4e10acaedf04f666937fd2a90500a">SetPropertyChoices</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, <a class="el" href="classwxPGChoices.htm">wxPGChoices</a> &amp;choices)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set choices of a property to specified set of labels and values.  <a href="#ad5e4e10acaedf04f666937fd2a90500a"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2a7edfd3ca5566d1f88e9208949b9fe6"></a><!-- doxytag: member="wxPropertyGridInterface::SetPropertyChoicesExclusive" ref="a2a7edfd3ca5566d1f88e9208949b9fe6" args="(wxPGPropArg id)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a2a7edfd3ca5566d1f88e9208949b9fe6">SetPropertyChoicesExclusive</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">If property's set of choices is shared, then calling this method converts it to private. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a359ca422650307d64da30bd41f34bea9">SetPropertyClientData</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, wxPGProperty::ClientDataType clientData)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets client data (void*) of a property.  <a href="#a359ca422650307d64da30bd41f34bea9"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a7155520a900a212c6ba48924a0398817">SetPropertyEditor</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxString &amp;editorName)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets editor control of a property.  <a href="#a7155520a900a212c6ba48924a0398817"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#aff961af9dd2787fb97f510ea5ce46407">SetPropertyEditor</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *editor)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets editor control of a property.  <a href="#aff961af9dd2787fb97f510ea5ce46407"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a5793ea3ef9afa47fe2c1c5bf437dd583">SetPropertyHelpString</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxString &amp;helpString)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Associates the help string with property.  <a href="#a5793ea3ef9afa47fe2c1c5bf437dd583"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a88befed8aa91d5c6e62844da2166bb3c">SetPropertyImage</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, wxBitmap &amp;bmp)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set wxBitmap in front of the value.  <a href="#a88befed8aa91d5c6e62844da2166bb3c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#ad7cc77546762cc92e69078d6ac161c63">SetPropertyLabel</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxString &amp;newproplabel)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets label of a property.  <a href="#ad7cc77546762cc92e69078d6ac161c63"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a51ae4dc2d3732d6e681c5a474abc0da9"></a><!-- doxytag: member="wxPropertyGridInterface::SetPropertyMaxLength" ref="a51ae4dc2d3732d6e681c5a474abc0da9" args="(wxPGPropArg id, int maxLen)" -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a51ae4dc2d3732d6e681c5a474abc0da9">SetPropertyMaxLength</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, int maxLen)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets max length of property's text. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#af5442c56a869f8f03c530a0d34555cd2">SetPropertyReadOnly</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, bool set=true, int flags=wxPG_RECURSE)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets property (and, recursively, its children) to have read-only value.  <a href="#af5442c56a869f8f03c530a0d34555cd2"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad83fe8ad87751101316345a14133c45f"></a><!-- doxytag: member="wxPropertyGridInterface::SetPropertyValidator" ref="ad83fe8ad87751101316345a14133c45f" args="(wxPGPropArg id, const wxValidator &amp;validator)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#ad83fe8ad87751101316345a14133c45f">SetPropertyValidator</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxValidator &amp;validator)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets validator of a property. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a51719a02370c475b2c61f32cd7b32ea0"></a><!-- doxytag: member="wxPropertyGridInterface::SetPropertyValue" ref="a51719a02370c475b2c61f32cd7b32ea0" args="(wxPGPropArg id, const wxArrayInt &amp;value)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a51719a02370c475b2c61f32cd7b32ea0">SetPropertyValue</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxArrayInt &amp;value)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (wxArrayInt&amp;) of a property. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2682d90e94b61601f6402bf930a98f1c"></a><!-- doxytag: member="wxPropertyGridInterface::SetPropertyValue" ref="a2682d90e94b61601f6402bf930a98f1c" args="(wxPGPropArg id, wxULongLong_t value)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a2682d90e94b61601f6402bf930a98f1c">SetPropertyValue</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, wxULongLong_t value)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (wxULongLong&amp;) of a property. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aad1fe3813ff98b201bd77071156994f1"></a><!-- doxytag: member="wxPropertyGridInterface::SetPropertyValue" ref="aad1fe3813ff98b201bd77071156994f1" args="(wxPGPropArg id, wxLongLong_t value)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#aad1fe3813ff98b201bd77071156994f1">SetPropertyValue</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, wxLongLong_t value)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (wxLongLong&amp;) of a property. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae80c4671d3bc64f50efb8e08ce1fd0b1"></a><!-- doxytag: member="wxPropertyGridInterface::SetPropertyValue" ref="ae80c4671d3bc64f50efb8e08ce1fd0b1" args="(wxPGPropArg id, const wxSize &amp;value)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#ae80c4671d3bc64f50efb8e08ce1fd0b1">SetPropertyValue</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxSize &amp;value)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (wxSize&amp;) of a property. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a755137a1a588eaf064122fb3335b0cfe"></a><!-- doxytag: member="wxPropertyGridInterface::SetPropertyValue" ref="a755137a1a588eaf064122fb3335b0cfe" args="(wxPGPropArg id, const wxPoint &amp;value)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a755137a1a588eaf064122fb3335b0cfe">SetPropertyValue</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxPoint &amp;value)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (wxPoint&amp;) of a property. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a07d4eb7ae9fc0014cc72bb320e36fa4f">SetPropertyValue</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, wxVariant value)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (wxVariant&amp;) of a property.  <a href="#a07d4eb7ae9fc0014cc72bb320e36fa4f"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a44f390c4041e9c84cc74f078e2c65fec"></a><!-- doxytag: member="wxPropertyGridInterface::SetPropertyValue" ref="a44f390c4041e9c84cc74f078e2c65fec" args="(wxPGPropArg id, wxObject &amp;value)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>SetPropertyValue</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, wxObject &amp;value)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a6a40bb8a2f211397ba8c2f3baa2eca64">SetPropertyValue</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, void *value)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (void*) of a property.  <a href="#a6a40bb8a2f211397ba8c2f3baa2eca64"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac14f033b18667d9965776c2d19dd7bb9"></a><!-- doxytag: member="wxPropertyGridInterface::SetPropertyValue" ref="ac14f033b18667d9965776c2d19dd7bb9" args="(wxPGPropArg id, wxObject *value)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#ac14f033b18667d9965776c2d19dd7bb9">SetPropertyValue</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, wxObject *value)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (wxObject*) of a property. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a4d2cbc3ea3d92c59e87372f4a05cba99">SetPropertyValue</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxString &amp;value)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (wxString) of a property.  <a href="#a4d2cbc3ea3d92c59e87372f4a05cba99"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a63730146d50d376c6e8cce75a88180c4"></a><!-- doxytag: member="wxPropertyGridInterface::SetPropertyValue" ref="a63730146d50d376c6e8cce75a88180c4" args="(wxPGPropArg id, const wxArrayString &amp;value)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a63730146d50d376c6e8cce75a88180c4">SetPropertyValue</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxArrayString &amp;value)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (wxArrayString) of a property. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a417a71f67926094fa70761842a86f1fd"></a><!-- doxytag: member="wxPropertyGridInterface::SetPropertyValue" ref="a417a71f67926094fa70761842a86f1fd" args="(wxPGPropArg id, const wxChar *value)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>SetPropertyValue</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxChar *value)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab3c7f74d260993c2bb679c37dc7ae69b"></a><!-- doxytag: member="wxPropertyGridInterface::SetPropertyValue" ref="ab3c7f74d260993c2bb679c37dc7ae69b" args="(wxPGPropArg id, bool value)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#ab3c7f74d260993c2bb679c37dc7ae69b">SetPropertyValue</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, bool value)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (bool) of a property. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="afc31048af8214a81b9fc24daaa13b56e"></a><!-- doxytag: member="wxPropertyGridInterface::SetPropertyValue" ref="afc31048af8214a81b9fc24daaa13b56e" args="(wxPGPropArg id, double value)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#afc31048af8214a81b9fc24daaa13b56e">SetPropertyValue</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, double value)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (floating point) of a property. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7f13128f8275004348ec252bdad097b8"></a><!-- doxytag: member="wxPropertyGridInterface::SetPropertyValue" ref="a7f13128f8275004348ec252bdad097b8" args="(wxPGPropArg id, int value)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a7f13128f8275004348ec252bdad097b8">SetPropertyValue</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, int value)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (integer) of a property. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa652e127ce0c9d4e80821cbdcfe4983c"></a><!-- doxytag: member="wxPropertyGridInterface::SetPropertyValue" ref="aa652e127ce0c9d4e80821cbdcfe4983c" args="(wxPGPropArg id, long value)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#aa652e127ce0c9d4e80821cbdcfe4983c">SetPropertyValue</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, long value)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (long integer) of a property. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa679594e57df9e6b20e906026e97fa4a"></a><!-- doxytag: member="wxPropertyGridInterface::SetPropertyValues" ref="aa679594e57df9e6b20e906026e97fa4a" args="(const wxVariant &amp;list, wxPGPropArg defaultCategory=((wxPGProperty *) NULL))" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#aa679594e57df9e6b20e906026e97fa4a">SetPropertyValues</a> (const wxVariant &amp;list, <a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> defaultCategory=((<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *) NULL))</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets property values from a list of wxVariants. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3c3baf524979bff36ee6e3cd8ff60b3f"></a><!-- doxytag: member="wxPropertyGridInterface::SetPropertyValues" ref="a3c3baf524979bff36ee6e3cd8ff60b3f" args="(const wxVariantList &amp;list, wxPGPropArg defaultCategory=((wxPGProperty *) NULL))" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a3c3baf524979bff36ee6e3cd8ff60b3f">SetPropertyValues</a> (const wxVariantList &amp;list, <a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> defaultCategory=((<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *) NULL))</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets property values from a list of wxVariants. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#ad0354321e04ed670c1d4904ef68f9ea0">SetPropertyValueUnspecified</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets property's value to unspecified.  <a href="#ad0354321e04ed670c1d4904ef68f9ea0"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#aff5b15494ae318a1475d4389e1abce72">SetPropVal</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, wxVariant &amp;value)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets value (wxDateTime&amp;) of a property.  <a href="#aff5b15494ae318a1475d4389e1abce72"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#ade72c97a047aa409dc7429010f640bb6">SetValidationFailureBehavior</a> (int vfbFlags)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Adjusts how <a class="el" href="classwxPropertyGrid.htm" title="wxPropertyGrid is a specialized two-column grid for editing properties such as strings...">wxPropertyGrid</a> behaves when invalid value is entered in a property.  <a href="#ade72c97a047aa409dc7429010f640bb6"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a42cd83135362d4de8db6d5de968cd2ab"></a><!-- doxytag: member="wxPropertyGridInterface::~wxPropertyGridInterface" ref="a42cd83135362d4de8db6d5de968cd2ab" args="()" -->
virtual&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a42cd83135362d4de8db6d5de968cd2ab">~wxPropertyGridInterface</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Destructor. <br/></td></tr>
<tr><td colspan="2"><h2>Static Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#aa072fc735ec1f0cba666df14c44e0215">CreatePropertyByClass</a> (const wxString &amp;classname, const wxString &amp;label, const wxString &amp;name)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructs a property.  <a href="#aa072fc735ec1f0cba666df14c44e0215"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a07481c1f8471504f266c9e8bf45ed8b0">CreatePropertyByType</a> (const wxString &amp;valuetype, const wxString &amp;label, const wxString &amp;name)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructs a property.  <a href="#a07481c1f8471504f266c9e8bf45ed8b0"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac79128278621fc7878c4cbe5340bbc1f"></a><!-- doxytag: member="wxPropertyGridInterface::GetEditorByName" ref="ac79128278621fc7878c4cbe5340bbc1f" args="(const wxString &amp;editorName)" -->
static <a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetEditorByName</b> (const wxString &amp;editorName)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a38bd0419a578467da07d01aef288848d">InitAllTypeHandlers</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Initializes *all* property types.  <a href="#a38bd0419a578467da07d01aef288848d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a330dc911b08378e967955f8a6a938612">RegisterAdditionalEditors</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Initializes additional property editors (SpinCtrl etc.  <a href="#a330dc911b08378e967955f8a6a938612"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a41b5c6452fad15b15a73fc6e6a08a748">SetBoolChoices</a> (const wxString &amp;true_choice, const wxString &amp;false_choice)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Lets user to set the strings listed in the choice dropdown of a <a class="el" href="classwxBoolProperty.htm" title="Basic property with boolean value.">wxBoolProperty</a>.  <a href="#a41b5c6452fad15b15a73fc6e6a08a748"></a><br/></td></tr>
<tr><td colspan="2"><h2>Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="affdcfc37d5d02c0090a2d08532cf2646"></a><!-- doxytag: member="wxPropertyGridInterface::DoClearSelection" ref="affdcfc37d5d02c0090a2d08532cf2646" args="(bool validation, int selFlags=0)" -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>DoClearSelection</b> (bool validation, int selFlags=0)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="acec49ca903cbf5d520d50c6ecb513dd7"></a><!-- doxytag: member="wxPropertyGridInterface::DoGetPropertyByName" ref="acec49ca903cbf5d520d50c6ecb513dd7" args="(const wxString &amp;name) const " -->
virtual <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><b>DoGetPropertyByName</b> (const wxString &amp;name) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="acff83c63c306dcf78c841036a481c537"></a><!-- doxytag: member="wxPropertyGridInterface::DoSelectPage" ref="acff83c63c306dcf78c841036a481c537" args="(int WXUNUSED(index))" -->
virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>DoSelectPage</b> (int WXUNUSED(index))</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2a80c0a56416edc86145623b2f439ef0"></a><!-- doxytag: member="wxPropertyGridInterface::DoSetPropertyAttribute" ref="a2a80c0a56416edc86145623b2f439ef0" args="(wxPGPropArg id, const wxString &amp;name, wxVariant &amp;value, long argFlags)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>DoSetPropertyAttribute</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxString &amp;name, wxVariant &amp;value, long argFlags)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae627d8ce60249219a1452216e36eda28"></a><!-- doxytag: member="wxPropertyGridInterface::GetEditableStateItem" ref="ae627d8ce60249219a1452216e36eda28" args="(const wxString &amp;name) const " -->
virtual wxVariant&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#ae627d8ce60249219a1452216e36eda28">GetEditableStateItem</a> (const wxString &amp;name) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">In derived class, implement to return editable state component with given name. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1aba940d624dfea2b95db55f86506dc2"></a><!-- doxytag: member="wxPropertyGridInterface::GetPageState" ref="a1aba940d624dfea2b95db55f86506dc2" args="(int pageIndex) const " -->
virtual <a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetPageState</b> (int pageIndex) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a11e19e753e7d8467dbb9718f6e7bc6e1"></a><!-- doxytag: member="wxPropertyGridInterface::SetEditableStateItem" ref="a11e19e753e7d8467dbb9718f6e7bc6e1" args="(const wxString &amp;name, wxVariant value)" -->
virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPropertyGridInterface.htm#a11e19e753e7d8467dbb9718f6e7bc6e1">SetEditableStateItem</a> (const wxString &amp;name, wxVariant value)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">In derived class, implement to set editable state component with given name to given value. <br/></td></tr>
<tr><td colspan="2"><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="acc794c7a828c14826f65ccdb071f1652"></a><!-- doxytag: member="wxPropertyGridInterface::m_emptyString" ref="acc794c7a828c14826f65ccdb071f1652" args="" -->
wxString&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_emptyString</b></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a95f02618e563e0a564e0f433cd9d45de"></a><!-- doxytag: member="wxPropertyGridInterface::m_pState" ref="a95f02618e563e0a564e0f433cd9d45de" args="" -->
<a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_pState</b></td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>In order to have most same base methods, both <a class="el" href="classwxPropertyGrid.htm" title="wxPropertyGrid is a specialized two-column grid for editing properties such as strings...">wxPropertyGrid</a> and <a class="el" href="classwxPropertyGridManager.htm" title="wxPropertyGridManager is an efficient multi-page version of wxPropertyGrid, which...">wxPropertyGridManager</a> must derive from this. </p>
<hr/><h2>Member Enumeration Documentation</h2>
<a class="anchor" id="acd38be5728243d99365e0f371b6c19ae"></a><!-- doxytag: member="wxPropertyGridInterface::EditableStateFlags" ref="acd38be5728243d99365e0f371b6c19ae" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classwxPropertyGridInterface.htm#acd38be5728243d99365e0f371b6c19ae">wxPropertyGridInterface::EditableStateFlags</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p><a class="anchor" id="propgridinterface_editablestate_flags"></a></p>
<p>Flags for <a class="el" href="classwxPropertyGridInterface.htm#a09dcfdf53629918183615627957afe39" title="Used to acquire user-editable state (selected property, expanded properties, scrolled...">wxPropertyGridInterface::SaveEditableState()</a> and <a class="el" href="classwxPropertyGridInterface.htm#aceb7f1ca6c7079c075d9876b94a2cb0f" title="Restores user-editable state.">wxPropertyGridInterface::RestoreEditableState()</a>. </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="acd38be5728243d99365e0f371b6c19aeacf359fdb91a019696f4cd34644e624f3"></a><!-- doxytag: member="SelectionState" ref="acd38be5728243d99365e0f371b6c19aeacf359fdb91a019696f4cd34644e624f3" args="" -->SelectionState</em>&nbsp;</td><td>
<p>Include selected property. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="acd38be5728243d99365e0f371b6c19aeaa59cf2646aedbb9c00aeb8754b11610b"></a><!-- doxytag: member="ExpandedState" ref="acd38be5728243d99365e0f371b6c19aeaa59cf2646aedbb9c00aeb8754b11610b" args="" -->ExpandedState</em>&nbsp;</td><td>
<p>Include expanded/collapsed property information. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="acd38be5728243d99365e0f371b6c19aeaae0ce13a64f1cdf3e208e2ede6615d66"></a><!-- doxytag: member="ScrollPosState" ref="acd38be5728243d99365e0f371b6c19aeaae0ce13a64f1cdf3e208e2ede6615d66" args="" -->ScrollPosState</em>&nbsp;</td><td>
<p>Include scrolled position. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="acd38be5728243d99365e0f371b6c19aea37f63cb4a3bca8249c62a09dc6d973ff"></a><!-- doxytag: member="PageState" ref="acd38be5728243d99365e0f371b6c19aea37f63cb4a3bca8249c62a09dc6d973ff" args="" -->PageState</em>&nbsp;</td><td>
<p>Include selected page information. </p>
<p>Only applies to <a class="el" href="classwxPropertyGridManager.htm" title="wxPropertyGridManager is an efficient multi-page version of wxPropertyGrid, which...">wxPropertyGridManager</a>. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="acd38be5728243d99365e0f371b6c19aea1cc473f6d94d75e3e97159ccd4a325d3"></a><!-- doxytag: member="SplitterPosState" ref="acd38be5728243d99365e0f371b6c19aea1cc473f6d94d75e3e97159ccd4a325d3" args="" -->SplitterPosState</em>&nbsp;</td><td>
<p>Include splitter position. </p>
<p>Stored for each page. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="acd38be5728243d99365e0f371b6c19aea0619889c5d768946557ac361b5fff7e5"></a><!-- doxytag: member="DescBoxState" ref="acd38be5728243d99365e0f371b6c19aea0619889c5d768946557ac361b5fff7e5" args="" -->DescBoxState</em>&nbsp;</td><td>
<p>Include description box size. </p>
<p>Only applies to <a class="el" href="classwxPropertyGridManager.htm" title="wxPropertyGridManager is an efficient multi-page version of wxPropertyGrid, which...">wxPropertyGridManager</a>. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="acd38be5728243d99365e0f371b6c19aea19c3af2d76e93bca4d687865b1ea27f4"></a><!-- doxytag: member="AllStates" ref="acd38be5728243d99365e0f371b6c19aea19c3af2d76e93bca4d687865b1ea27f4" args="" -->AllStates</em>&nbsp;</td><td>
<p>Include all supported user editable state information. </p>
<p>This is usually the default value. </p>
</td></tr>
</table>
</dd>
</dl>

</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="a847f896622e1ede1c7b6434c90b9ec4a"></a><!-- doxytag: member="wxPropertyGridInterface::AddPropertyChoice" ref="a847f896622e1ede1c7b6434c90b9ec4a" args="(wxPGPropArg id, const wxString &amp;label, int value=INT_MAX)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGridInterface::AddPropertyChoice </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>label</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>value</em> = <code>INT_MAX</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Adds choice to a property that can accept one. </p>
<dl class="remark"><dt><b>Remarks:</b></dt><dd><ul>
<li>If you need to make sure that you modify only the set of choices of a single property (and not also choices of other properties with initially identical set), call wxPropertyGrid::SetPropertyChoicesPrivate.</li>
<li>This usually only works for <a class="el" href="classwxEnumProperty.htm" title="You can derive custom properties with choices from this class.">wxEnumProperty</a> and derivatives (<a class="el" href="classwxFlagsProperty.htm" title="Represents a bit set that fits in a long integer.">wxFlagsProperty</a> can get accept new items but its items may not get updated). </li>
</ul>
</dd></dl>

</div>
</div>
<a class="anchor" id="a8496963f469db86941157f8ce67896c4"></a><!-- doxytag: member="wxPropertyGridInterface::Append" ref="a8496963f469db86941157f8ce67896c4" args="(wxPGProperty *property)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGridInterface::Append </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="paramname"> <em>property</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Appends property to the list. </p>
<p><a class="el" href="classwxPropertyGrid.htm" title="wxPropertyGrid is a specialized two-column grid for editing properties such as strings...">wxPropertyGrid</a> assumes ownership of the object. Becomes child of most recently added category. </p>
<dl class="remark"><dt><b>Remarks:</b></dt><dd><ul>
<li><a class="el" href="classwxPropertyGrid.htm" title="wxPropertyGrid is a specialized two-column grid for editing properties such as strings...">wxPropertyGrid</a> takes the ownership of the property pointer.</li>
<li>If appending a category with name identical to a category already in the <a class="el" href="classwxPropertyGrid.htm" title="wxPropertyGrid is a specialized two-column grid for editing properties such as strings...">wxPropertyGrid</a>, then newly created category is deleted, and most recently added category (under which properties are appended) is set to the one with same name. This allows easier adding of items to same categories in multiple passes.</li>
<li>Does not automatically redraw the control, so you may need to call Refresh when calling this function after control has been shown for the first time. </li>
</ul>
</dd></dl>

</div>
</div>
<a class="anchor" id="a4917f17cd9f415db313942157788e8bf"></a><!-- doxytag: member="wxPropertyGridInterface::BeginAddChildren" ref="a4917f17cd9f415db313942157788e8bf" args="(wxPGPropArg id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGridInterface::BeginAddChildren </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Inorder to add new items into a property with fixed children (for instance, <a class="el" href="classwxFlagsProperty.htm" title="Represents a bit set that fits in a long integer.">wxFlagsProperty</a>), you need to call this method. </p>
<p>After populating has been finished, you need to call EndAddChildren. </p>

</div>
</div>
<a class="anchor" id="a03e60ec606ffc2a9e1ea944f832ba4d4"></a><!-- doxytag: member="wxPropertyGridInterface::ChangePropertyValue" ref="a03e60ec606ffc2a9e1ea944f832ba4d4" args="(wxPGPropArg id, wxVariant newValue)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPropertyGridInterface::ChangePropertyValue </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxVariant&nbsp;</td>
          <td class="paramname"> <em>newValue</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Changes value of a property, as if from an editor. </p>
<p>Use this instead of <a class="el" href="classwxPropertyGridInterface.htm#aa652e127ce0c9d4e80821cbdcfe4983c" title="Sets value (long integer) of a property.">SetPropertyValue()</a> if you need the value to run through validation process, and also send the property change event.</p>
<dl><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Returns</em>&nbsp;</td><td>true if value was succesfully changed. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented in <a class="el" href="classwxPropertyGrid.htm#a6958b5c1a1f71512afaf6f2c07c1becd">wxPropertyGrid</a>.</p>

</div>
</div>
<a class="anchor" id="a1ccfe95ec7f941d75931f4bd039a2ec2"></a><!-- doxytag: member="wxPropertyGridInterface::ClearPropertyValue" ref="a1ccfe95ec7f941d75931f4bd039a2ec2" args="(wxPGPropArg id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPropertyGridInterface::ClearPropertyValue </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Resets value of a property to its default. </p>

</div>
</div>
<a class="anchor" id="a21aaa366bcdf8ce5d2f45fa81b143331"></a><!-- doxytag: member="wxPropertyGridInterface::ClearSelection" ref="a21aaa366bcdf8ce5d2f45fa81b143331" args="(bool validation=true)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPropertyGridInterface::ClearSelection </td>
          <td>(</td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>validation</em> = <code>true</code></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Clears current selection, if any. </p>
<p>Returns true if success (ie. validator did not intercept). You can set validation = false to let selection be cleared even if property had invalid value in its editor. </p>

</div>
</div>
<a class="anchor" id="adc64e1889b8be3f775f34e9c91087596"></a><!-- doxytag: member="wxPropertyGridInterface::Collapse" ref="adc64e1889b8be3f775f34e9c91087596" args="(wxPGPropArg id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPropertyGridInterface::Collapse </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Collapses given category or property with children. </p>
<p>Returns true if actually collapses. </p>

</div>
</div>
<a class="anchor" id="a3acfb29c90820199472ee16d8be40cf2"></a><!-- doxytag: member="wxPropertyGridInterface::CollapseAll" ref="a3acfb29c90820199472ee16d8be40cf2" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPropertyGridInterface::CollapseAll </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Collapses all items that can be collapsed. </p>
<dl><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Return</em>&nbsp;</td><td>false if failed (may fail if editor value cannot be validated). </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aa072fc735ec1f0cba666df14c44e0215"></a><!-- doxytag: member="wxPropertyGridInterface::CreatePropertyByClass" ref="aa072fc735ec1f0cba666df14c44e0215" args="(const wxString &amp;classname, const wxString &amp;label, const wxString &amp;name)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGridInterface::CreatePropertyByClass </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>classname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>label</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Constructs a property. </p>
<p>Class used is given as the first string argument. It may be either normal property class name, such as "wxIntProperty" or a short one such as "Int". </p>

</div>
</div>
<a class="anchor" id="a07481c1f8471504f266c9e8bf45ed8b0"></a><!-- doxytag: member="wxPropertyGridInterface::CreatePropertyByType" ref="a07481c1f8471504f266c9e8bf45ed8b0" args="(const wxString &amp;valuetype, const wxString &amp;label, const wxString &amp;name)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGridInterface::CreatePropertyByType </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>valuetype</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>label</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Constructs a property. </p>
<p>Value type name used is given as the first string argument. It may be "string", "long", etc. Any value returned by wxVariant::GetType fits there.</p>
<p>Otherwise, this is similar as CreatePropertyByClass. </p>
<dl class="remark"><dt><b>Remarks:</b></dt><dd><b>Cannot</b> generate property category. </dd></dl>

</div>
</div>
<a class="anchor" id="ae2b66f448c288826a902d4c2a24cf9a8"></a><!-- doxytag: member="wxPropertyGridInterface::Delete" ref="ae2b66f448c288826a902d4c2a24cf9a8" args="(wxPGPropArg id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGridInterface::Delete </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Deletes a property by id. </p>
<p>If category is deleted, all children are automatically deleted as well. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.htm#_deprecated000007">Deprecated:</a></b></dt><dd>Since version 1.3. Use <a class="el" href="classwxPropertyGridInterface.htm#ad7f72b604efa4854a673ebb722b26c94" title="Removes and deletes a property.">DeleteProperty()</a> instead. </dd></dl>

</div>
</div>
<a class="anchor" id="ad7f72b604efa4854a673ebb722b26c94"></a><!-- doxytag: member="wxPropertyGridInterface::DeleteProperty" ref="ad7f72b604efa4854a673ebb722b26c94" args="(wxPGPropArg id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGridInterface::DeleteProperty </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Removes and deletes a property. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>id</em>&nbsp;</td><td>Pointer or name of a property.</td></tr>
  </table>
  </dd>
</dl>
<dl class="remark"><dt><b>Remarks:</b></dt><dd>If you delete a property in a <a class="el" href="classwxPropertyGrid.htm" title="wxPropertyGrid is a specialized two-column grid for editing properties such as strings...">wxPropertyGrid</a> event handler, the actual deletion is postponed until the next idle event. </dd></dl>

</div>
</div>
<a class="anchor" id="a89d4a4c66b2f9b0fa0f2690a124ee225"></a><!-- doxytag: member="wxPropertyGridInterface::DeletePropertyChoice" ref="a89d4a4c66b2f9b0fa0f2690a124ee225" args="(wxPGPropArg id, int index)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGridInterface::DeletePropertyChoice </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>index</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Deletes choice from a property. </p>
<p>If selected item is deleted, then the value is set to unspecified.</p>
<p>See AddPropertyChoice for more details. </p>

</div>
</div>
<a class="anchor" id="add678462c196db54113a6b015b841068"></a><!-- doxytag: member="wxPropertyGridInterface::Disable" ref="add678462c196db54113a6b015b841068" args="(wxPGPropArg id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPropertyGridInterface::Disable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Disables property. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.htm#_deprecated000008">Deprecated:</a></b></dt><dd>Since version 1.3. Use wxPropertyGrid::Enable(property, false) instead. </dd></dl>

</div>
</div>
<a class="anchor" id="ac2b62fc91927b5b4f9e9a95eebbb26d1"></a><!-- doxytag: member="wxPropertyGridInterface::DisableProperty" ref="ac2b62fc91927b5b4f9e9a95eebbb26d1" args="(wxPGPropArg id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPropertyGridInterface::DisableProperty </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Disables property. </p>

</div>
</div>
<a class="anchor" id="ab46cadeb40c717d902daef74005431bf"></a><!-- doxytag: member="wxPropertyGridInterface::EnableProperty" ref="ab46cadeb40c717d902daef74005431bf" args="(wxPGPropArg id, bool enable=true)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPropertyGridInterface::EnableProperty </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>enable</em> = <code>true</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Enables or disables property, depending on whether enable is true or false. </p>

</div>
</div>
<a class="anchor" id="a9e37a22d7a60feb41f724119678b663e"></a><!-- doxytag: member="wxPropertyGridInterface::Expand" ref="a9e37a22d7a60feb41f724119678b663e" args="(wxPGPropArg id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPropertyGridInterface::Expand </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Expands given category or property with children. </p>
<p>Returns true if actually expands. </p>

</div>
</div>
<a class="anchor" id="ac39b51cf43d0dd8cc9b6cf4d54119da8"></a><!-- doxytag: member="wxPropertyGridInterface::GetColumnProportion" ref="ac39b51cf43d0dd8cc9b6cf4d54119da8" args="(unsigned int column) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int wxPropertyGridInterface::GetColumnProportion </td>
          <td>(</td>
          <td class="paramtype">unsigned int&nbsp;</td>
          <td class="paramname"> <em>column</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns auto-resize proportion of the given column. </p>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="classwxPropertyGridInterface.htm#a5df440361d9e85f3a48d79d7b45667e1" title="Set proportion of a auto-stretchable column.">SetColumnProportion()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a6f2ccd5c8da4e6d61ab4b1b1791bc821"></a><!-- doxytag: member="wxPropertyGridInterface::GetExpandedProperties" ref="a6f2ccd5c8da4e6d61ab4b1b1791bc821" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxArrayPGProperty wxPropertyGridInterface::GetExpandedProperties </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns list of expanded properties. </p>
<dl class="remark"><dt><b>Remarks:</b></dt><dd>If wxPG_USE_STL is 1, then wxArrayPGProperty is typedef of std::vector&lt;wxPGProperty*&gt;. </dd></dl>

</div>
</div>
<a class="anchor" id="a408afe75901ecc8092fba0abd3ec1750"></a><!-- doxytag: member="wxPropertyGridInterface::GetFirst" ref="a408afe75901ecc8092fba0abd3ec1750" args="(int flags=wxPG_ITERATE_ALL)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGridInterface::GetFirst </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>flags</em> = <code>wxPG_ITERATE_ALL</code></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns id of first item, whether it is a category or property. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>flags</em>&nbsp;</td><td><a class="el" href="group__iteratorflags.htm">List of iterator flags</a> </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="abf1d15cc10bf6c37aeaf84dfc390d743"></a><!-- doxytag: member="wxPropertyGridInterface::GetFirstChild" ref="abf1d15cc10bf6c37aeaf84dfc390d743" args="(wxPGPropArg id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGridInterface::GetFirstChild </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns id of first child of given property. </p>
<dl class="remark"><dt><b>Remarks:</b></dt><dd>Does not return sub-properties! </dd></dl>

</div>
</div>
<a class="anchor" id="acef8d8a08d18b0f78a29d52c96c85d8d"></a><!-- doxytag: member="wxPropertyGridInterface::GetIterator" ref="acef8d8a08d18b0f78a29d52c96c85d8d" args="(int flags, int startPos)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPropertyGridIterator.htm">wxPropertyGridIterator</a> wxPropertyGridInterface::GetIterator </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>flags</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>startPos</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns iterator class instance. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>flags</em>&nbsp;</td><td><a class="el" href="classwxPropertyGridIterator.htm" title="Preferable way to iterate through contents of wxPropertyGrid, wxPropertyGridManager...">wxPropertyGridIterator</a> flags. If default wxPG_ITERATE_DEFAULT supplied, everything except private child properties are iterated. <a class="el" href="group__iteratorflags.htm">List of iterator flags</a> </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>startPos</em>&nbsp;</td><td>Either wxTOP or wxBOTTOM. wxTOP will indicate that iterations start from the first property from the top, and wxBOTTOM means that the iteration will instead begin from bottommost valid item. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented in <a class="el" href="classwxPropertyGridManager.htm#ab4744d272b89227696351bcb59ca78e8">wxPropertyGridManager</a>.</p>

</div>
</div>
<a class="anchor" id="a41ab8661411082563c8191f614f91007"></a><!-- doxytag: member="wxPropertyGridInterface::GetIterator" ref="a41ab8661411082563c8191f614f91007" args="(int flags=wxPG_ITERATE_DEFAULT, wxPGProperty *firstProp=NULL)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPropertyGridIterator.htm">wxPropertyGridIterator</a> wxPropertyGridInterface::GetIterator </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>flags</em> = <code>wxPG_ITERATE_DEFAULT</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="paramname"> <em>firstProp</em> = <code>NULL</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns iterator class instance. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>flags</em>&nbsp;</td><td><a class="el" href="classwxPropertyGridIterator.htm" title="Preferable way to iterate through contents of wxPropertyGrid, wxPropertyGridManager...">wxPropertyGridIterator</a> flags. If default wxPG_ITERATE_DEFAULT supplied, everything except private child properties are iterated. <a class="el" href="group__iteratorflags.htm">List of iterator flags</a> </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>firstProp</em>&nbsp;</td><td>Property to start iteration from. If NULL, then first child of root is used. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented in <a class="el" href="classwxPropertyGridManager.htm#a853cfc6f62f497a2ecc08f71ae697be6">wxPropertyGridManager</a>.</p>

</div>
</div>
<a class="anchor" id="ae1d34e1730d58552710f7f8e2bbcde6d"></a><!-- doxytag: member="wxPropertyGridInterface::GetNextSiblingProperty" ref="ae1d34e1730d58552710f7f8e2bbcde6d" args="(wxPGPropArg id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGridInterface::GetNextSiblingProperty </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns next item under the same parent. </p>

</div>
</div>
<a class="anchor" id="a16e7c98c641c293be0f5bfd569b7c097"></a><!-- doxytag: member="wxPropertyGridInterface::GetPropertiesWithFlag" ref="a16e7c98c641c293be0f5bfd569b7c097" args="(wxArrayPGProperty *targetArr, wxPGProperty::FlagType flags, bool inverse=false, int iterFlags=(wxPG_ITERATE_PROPERTIES|wxPG_ITERATE_HIDDEN|wxPG_ITERATE_CATEGORIES)) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGridInterface::GetPropertiesWithFlag </td>
          <td>(</td>
          <td class="paramtype">wxArrayPGProperty *&nbsp;</td>
          <td class="paramname"> <em>targetArr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxPGProperty::FlagType&nbsp;</td>
          <td class="paramname"> <em>flags</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>inverse</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>iterFlags</em> = <code>(wxPG_ITERATE_PROPERTIES|wxPG_ITERATE_HIDDEN|wxPG_ITERATE_CATEGORIES)</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Adds to 'targetArr' pointers to properties that have given flags 'flags' set. </p>
<p>However, if 'inverse' is set to true, then only properties without given flags are stored. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>flags</em>&nbsp;</td><td>Property flags to use. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>iterFlags</em>&nbsp;</td><td>Iterator flags to use. Default is everything expect private children. </td></tr>
  </table>
  </dd>
</dl>
<dl class="remark"><dt><b>Remarks:</b></dt><dd>If wxPG_USE_STL is 1, then wxArrayPGProperty is typedef of std::vector&lt;wxPGProperty*&gt;. </dd></dl>

</div>
</div>
<a class="anchor" id="a41c6a2d0535f4fce0cb8c351ae324667"></a><!-- doxytag: member="wxPropertyGridInterface::GetProperty" ref="a41c6a2d0535f4fce0cb8c351ae324667" args="(const wxString &amp;name) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGridInterface::GetProperty </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns pointer to the property with given name (case-sensitive). </p>
<p>If there is no property with such name,  pointer is returned.</p>
<dl class="remark"><dt><b>Remarks:</b></dt><dd>Properties which have non-category, non-root parent can not be accessed globally by their name. Instead, use "&lt;property&gt;.&lt;subproperty&gt;" instead of "&lt;subproperty&gt;". </dd></dl>

</div>
</div>
<a class="anchor" id="ab982d81a75a957158473a468e265b314"></a><!-- doxytag: member="wxPropertyGridInterface::GetPropertyAttribute" ref="ab982d81a75a957158473a468e265b314" args="(wxPGPropArg id, const wxString &amp;attrName) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxVariant wxPropertyGridInterface::GetPropertyAttribute </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>attrName</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns value of given attribute. </p>
<p>If none found, returns NULL-variant. </p>

</div>
</div>
<a class="anchor" id="aa6d505376ece79d5de324adc0d012ead"></a><!-- doxytag: member="wxPropertyGridInterface::GetPropertyAttributes" ref="aa6d505376ece79d5de324adc0d012ead" args="(wxPGPropArg id) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classwxPGAttributeStorage.htm">wxPGAttributeStorage</a>&amp; wxPropertyGridInterface::GetPropertyAttributes </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns map-like storage of property's attributes. </p>
<dl class="remark"><dt><b>Remarks:</b></dt><dd>Note that if extra style wxPG_EX_WRITEONLY_BUILTIN_ATTRIBUTES is set, then builtin-attributes are not included in the storage. </dd></dl>

</div>
</div>
<a class="anchor" id="a96e5b736b9598a307282a6c9e35ee2bc"></a><!-- doxytag: member="wxPropertyGridInterface::GetPropertyByName" ref="a96e5b736b9598a307282a6c9e35ee2bc" args="(const wxString &amp;name, const wxString &amp;subname) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGridInterface::GetPropertyByName </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>subname</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns id of a sub-property 'subname' of property 'name'. </p>
<p>Same as calling GetPropertyByNameI(wxT("name.subname")), albeit slightly faster. </p>

</div>
</div>
<a class="anchor" id="ac5723b61ae48d373671343e774632ed3"></a><!-- doxytag: member="wxPropertyGridInterface::GetPropertyByName" ref="ac5723b61ae48d373671343e774632ed3" args="(const wxString &amp;name) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGridInterface::GetPropertyByName </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns pointer to the property with given name (case-sensitive). </p>
<p>If there is no property with such name,  pointer is returned.</p>
<dl class="remark"><dt><b>Remarks:</b></dt><dd>Properties which have non-category, non-root parent can not be accessed globally by their name. Instead, use "&lt;property&gt;.&lt;subproperty&gt;" instead of "&lt;subproperty&gt;". </dd></dl>

</div>
</div>
<a class="anchor" id="a761a3de09cb1483d83b6a8f603144f87"></a><!-- doxytag: member="wxPropertyGridInterface::GetPropertyCategory" ref="a761a3de09cb1483d83b6a8f603144f87" args="(wxPGPropArg id) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPropertyCategory.htm">wxPropertyCategory</a>* wxPropertyGridInterface::GetPropertyCategory </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns pointer of property's nearest parent category. </p>
<p>If no category found, returns NULL. </p>

</div>
</div>
<a class="anchor" id="a5ad74d7087934327a32e969691d043a3"></a><!-- doxytag: member="wxPropertyGridInterface::GetPropertyChoices" ref="a5ad74d7087934327a32e969691d043a3" args="(wxPGPropArg id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGChoices.htm">wxPGChoices</a>&amp; wxPropertyGridInterface::GetPropertyChoices </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns writable reference to property's list of choices (and relevant values). </p>
<p>If property does not have any choices, will return reference to an invalid set of choices that will return false on IsOk call. </p>

</div>
</div>
<a class="anchor" id="afa6e4201be4afb1c807d72102b2e4051"></a><!-- doxytag: member="wxPropertyGridInterface::GetPropertyClassName" ref="afa6e4201be4afb1c807d72102b2e4051" args="(wxPGPropArg id) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const wxChar* wxPropertyGridInterface::GetPropertyClassName </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Gets name of property's constructor function. </p>

</div>
</div>
<a class="anchor" id="abd4c446c8a349eabf04adad1e2f80d8c"></a><!-- doxytag: member="wxPropertyGridInterface::GetPropertyClientData" ref="abd4c446c8a349eabf04adad1e2f80d8c" args="(wxPGPropArg id) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxPGProperty::ClientDataType wxPropertyGridInterface::GetPropertyClientData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns client data (void*) of a property. </p>

</div>
</div>
<a class="anchor" id="aade92682f7b251d97d3ec2b53bba1e18"></a><!-- doxytag: member="wxPropertyGridInterface::GetPropertyEditor" ref="aade92682f7b251d97d3ec2b53bba1e18" args="(wxPGPropArg id) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a>* wxPropertyGridInterface::GetPropertyEditor </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns property's editor. </p>

</div>
</div>
<a class="anchor" id="ac1bb46f25b7e2c4f66e386d5961aeba3"></a><!-- doxytag: member="wxPropertyGridInterface::GetPropertyHelpString" ref="ac1bb46f25b7e2c4f66e386d5961aeba3" args="(wxPGPropArg id) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxString wxPropertyGridInterface::GetPropertyHelpString </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns help string associated with a property. </p>

</div>
</div>
<a class="anchor" id="a5938a486c4704ff1e5554c92afc582b8"></a><!-- doxytag: member="wxPropertyGridInterface::GetPropertyImage" ref="a5938a486c4704ff1e5554c92afc582b8" args="(wxPGPropArg id) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxBitmap* wxPropertyGridInterface::GetPropertyImage </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns property's custom value image (NULL of none). </p>

</div>
</div>
<a class="anchor" id="a38ce152be918956b9589f6a737937b40"></a><!-- doxytag: member="wxPropertyGridInterface::GetPropertyIndex" ref="a38ce152be918956b9589f6a737937b40" args="(wxPGPropArg id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int wxPropertyGridInterface::GetPropertyIndex </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns property's position under its parent. </p>

</div>
</div>
<a class="anchor" id="a74f0ff31b45b8ea24d37d7e219de28f1"></a><!-- doxytag: member="wxPropertyGridInterface::GetPropertyLabel" ref="a74f0ff31b45b8ea24d37d7e219de28f1" args="(wxPGPropArg id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const wxString&amp; wxPropertyGridInterface::GetPropertyLabel </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns label of a property. </p>

</div>
</div>
<a class="anchor" id="a78ee2f3686e934e76bfa20a3b8415b91"></a><!-- doxytag: member="wxPropertyGridInterface::GetPropertyName" ref="a78ee2f3686e934e76bfa20a3b8415b91" args="(wxPGPropArg id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxString wxPropertyGridInterface::GetPropertyName </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns name of a property, by which it is globally accessible. </p>

</div>
</div>
<a class="anchor" id="a66e3790fa0ef52b76aef509e767989c0"></a><!-- doxytag: member="wxPropertyGridInterface::GetPropertyParent" ref="a66e3790fa0ef52b76aef509e767989c0" args="(wxPGPropArg id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGridInterface::GetPropertyParent </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns parent item of a property. </p>

</div>
</div>
<a class="anchor" id="a4f3d0044de2557f6f2431fd7aeaeed3b"></a><!-- doxytag: member="wxPropertyGridInterface::GetPropertyShortClassName" ref="a4f3d0044de2557f6f2431fd7aeaeed3b" args="(wxPGPropArg id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxString wxPropertyGridInterface::GetPropertyShortClassName </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns short name for property's class. </p>
<p>For example, "wxPropertyCategory" translates to "Category" and "wxIntProperty" to "Int". </p>

</div>
</div>
<a class="anchor" id="aa1164652240e4b157ce5250769af537e"></a><!-- doxytag: member="wxPropertyGridInterface::GetPropertyValue" ref="aa1164652240e4b157ce5250769af537e" args="(wxPGPropArg id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxVariant wxPropertyGridInterface::GetPropertyValue </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns value as wxVariant. </p>
<p>To get wxObject pointer from it, you will have to use WX_PG_VARIANT_TO_WXOBJECT(VARIANT,CLASSNAME) macro.</p>
<p>If property value is unspecified, Null variant is returned. </p>

</div>
</div>
<a class="anchor" id="a1abce6843caee96faaeeee952f970105"></a><!-- doxytag: member="wxPropertyGridInterface::GetPropertyValues" ref="a1abce6843caee96faaeeee952f970105" args="(const wxString &amp;listname=wxEmptyString, wxPGProperty *baseparent=NULL, long flags=0) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxVariant wxPropertyGridInterface::GetPropertyValues </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>listname</em> = <code>wxEmptyString</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="paramname"> <em>baseparent</em> = <code>NULL</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">long&nbsp;</td>
          <td class="paramname"> <em>flags</em> = <code>0</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns a wxVariant list containing wxVariant versions of all property values. </p>
<p>Order is not guaranteed. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>flags</em>&nbsp;</td><td>Use wxPG_KEEP_STRUCTURE to retain category structure; each sub category will be its own wxVariantList of wxVariant. Use wxPG_INC_ATTRIBUTES to include property attributes as well. Each attribute will be stored as list variant named "@@&lt;propname&gt;@@attr." </td></tr>
  </table>
  </dd>
</dl>
<dl class="remark"><dt><b>Remarks:</b></dt><dd></dd></dl>

</div>
</div>
<a class="anchor" id="a49ccd0da1d0f4a68004e1a174bf5f998"></a><!-- doxytag: member="wxPropertyGridInterface::GetSelectedProperties" ref="a49ccd0da1d0f4a68004e1a174bf5f998" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const wxArrayPGProperty&amp; wxPropertyGridInterface::GetSelectedProperties </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns list of currently selected properties. </p>
<dl class="remark"><dt><b>Remarks:</b></dt><dd>wxArrayPGProperty should be compatible with std::vector API. </dd></dl>

</div>
</div>
<a class="anchor" id="a302ae0ff624d48131544f6010373e599"></a><!-- doxytag: member="wxPropertyGridInterface::GetSelection" ref="a302ae0ff624d48131544f6010373e599" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGridInterface::GetSelection </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns currently selected property. </p>
<p>NULL if none.</p>
<dl class="remark"><dt><b>Remarks:</b></dt><dd>When wxPG_EX_MULTIPLE_SELECTION extra style is used, this member function returns the focused property, that is the one that can have active editor. </dd></dl>

<p>Reimplemented in <a class="el" href="classwxPropertyGridManager.htm#a11d495eb9b5aa80560beaae0cb421af4">wxPropertyGridManager</a>.</p>

</div>
</div>
<a class="anchor" id="aac3d5502e764989ed8b031a3d75b8814"></a><!-- doxytag: member="wxPropertyGridInterface::HideProperty" ref="aac3d5502e764989ed8b031a3d75b8814" args="(wxPGPropArg id, bool hide=true, int flags=wxPG_RECURSE)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPropertyGridInterface::HideProperty </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>hide</em> = <code>true</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>flags</em> = <code>wxPG_RECURSE</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Hides or reveals a property. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>hide</em>&nbsp;</td><td>If true, hides property, otherwise reveals it. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>flags</em>&nbsp;</td><td>By default changes are applied recursively. Set this paramter wxPG_DONT_RECURSE to prevent this. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a38bd0419a578467da07d01aef288848d"></a><!-- doxytag: member="wxPropertyGridInterface::InitAllTypeHandlers" ref="a38bd0419a578467da07d01aef288848d" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void wxPropertyGridInterface::InitAllTypeHandlers </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Initializes *all* property types. </p>
<p>Causes references to most object files in the library, so calling this may cause significant increase in executable size when linking with static library. </p>

</div>
</div>
<a class="anchor" id="a2add53519899b8a88bda458a9ce62edc"></a><!-- doxytag: member="wxPropertyGridInterface::Insert" ref="a2add53519899b8a88bda458a9ce62edc" args="(wxPGPropArg parent, int index, wxPGProperty *newproperty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGridInterface::Insert </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>parent</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="paramname"> <em>newproperty</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Also see documentation for <a class="el" href="classwxPropertyGridInterface.htm#abf342b34022630c15038c9d7679d3c57">Insert </a>. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>parent</em>&nbsp;</td><td>New property is inserted under this category. Available only in the second variant. There are two versions of this function to allow this parameter to be either an id or name to a property.</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>index</em>&nbsp;</td><td>Index under category. Available only in the second variant. If index is &lt; 0, property is appended in category. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="abf342b34022630c15038c9d7679d3c57"></a><!-- doxytag: member="wxPropertyGridInterface::Insert" ref="abf342b34022630c15038c9d7679d3c57" args="(wxPGPropArg priorThis, wxPGProperty *newproperty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGridInterface::Insert </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>priorThis</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="paramname"> <em>newproperty</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Inserts property to the property container. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>priorThis</em>&nbsp;</td><td>New property is inserted just prior to this. Available only in the first variant. There are two versions of this function to allow this parameter to be either an id or name to a property.</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>newproperty</em>&nbsp;</td><td>Pointer to the inserted property. <a class="el" href="classwxPropertyGrid.htm" title="wxPropertyGrid is a specialized two-column grid for editing properties such as strings...">wxPropertyGrid</a> will take ownership of this object.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Returns id for the property,</dd></dl>
<dl class="remark"><dt><b>Remarks:</b></dt><dd></dd></dl>
<ul>
<li><a class="el" href="classwxPropertyGrid.htm" title="wxPropertyGrid is a specialized two-column grid for editing properties such as strings...">wxPropertyGrid</a> takes the ownership of the property pointer.</li>
</ul>
<p>While Append may be faster way to add items, make note that when both data storages (categoric and non-categoric) are active, Insert becomes even more slow. This is especially true if current mode is non-categoric.</p>
<p>Example of use:</p>
<div class="fragment"><pre class="fragment">            <span class="comment">// append category</span>
            <a class="code" href="classwxPGProperty.htm" title="wxPGProperty is base class for all wxPropertyGrid properties.">wxPGProperty</a>* my_cat_id = propertygrid-&gt;Append( <span class="keyword">new</span> <a class="code" href="classwxPropertyCategory.htm" title="Category (caption) property.">wxPropertyCategory</a> (wxT(<span class="stringliteral">&quot;My Category&quot;</span>)) );

            ...

            <span class="comment">// insert into category - using second variant</span>
            <a class="code" href="classwxPGProperty.htm" title="wxPGProperty is base class for all wxPropertyGrid properties.">wxPGProperty</a>* my_item_id_1 = propertygrid-&gt;Insert( my_cat_id, 0, <span class="keyword">new</span> <a class="code" href="classwxStringProperty.htm" title="Basic property with string value.">wxStringProperty</a>(wxT(<span class="stringliteral">&quot;My String 1&quot;</span>)) );

            <span class="comment">// insert before to first item - using first variant</span>
            <a class="code" href="classwxPGProperty.htm" title="wxPGProperty is base class for all wxPropertyGrid properties.">wxPGProperty</a>* my_item_id_2 = propertygrid-&gt;Insert( my_item_id, <span class="keyword">new</span> <a class="code" href="classwxStringProperty.htm" title="Basic property with string value.">wxStringProperty</a>(wxT(<span class="stringliteral">&quot;My String 2&quot;</span>)) );
</pre></div> 
</div>
</div>
<a class="anchor" id="a654deb44773f2d6f8eec9cfb3975d9a4"></a><!-- doxytag: member="wxPropertyGridInterface::InsertPropertyChoice" ref="a654deb44773f2d6f8eec9cfb3975d9a4" args="(wxPGPropArg id, const wxString &amp;label, int index, int value=INT_MAX)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGridInterface::InsertPropertyChoice </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>label</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>value</em> = <code>INT_MAX</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Inserts choice to a property that can accept one. </p>
<p>See AddPropertyChoice for more details. </p>

</div>
</div>
<a class="anchor" id="a4aac4074d97eab3a7eb5b14e247bd573"></a><!-- doxytag: member="wxPropertyGridInterface::IsModified" ref="a4aac4074d97eab3a7eb5b14e247bd573" args="(wxPGPropArg id) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPropertyGridInterface::IsModified </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns true if property has been modified after value set or modify flag clear by software. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.htm#_deprecated000010">Deprecated:</a></b></dt><dd>Since version 1.3. Use IsPropertyModified instead. </dd></dl>

</div>
</div>
<a class="anchor" id="a7dc38b7ce9ba010c49d63935328097b8"></a><!-- doxytag: member="wxPropertyGridInterface::IsPropertyCategory" ref="a7dc38b7ce9ba010c49d63935328097b8" args="(wxPGPropArg id) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPropertyGridInterface::IsPropertyCategory </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns true if property is a category. </p>

</div>
</div>
<a class="anchor" id="ab9ca28beec8a1da397ca984926d1186d"></a><!-- doxytag: member="wxPropertyGridInterface::IsPropertyEnabled" ref="ab9ca28beec8a1da397ca984926d1186d" args="(wxPGPropArg id) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPropertyGridInterface::IsPropertyEnabled </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns true if property is enabled. </p>

</div>
</div>
<a class="anchor" id="aa3677cf3904d78407f5d60af032760d8"></a><!-- doxytag: member="wxPropertyGridInterface::IsPropertyExpanded" ref="aa3677cf3904d78407f5d60af032760d8" args="(wxPGPropArg id) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPropertyGridInterface::IsPropertyExpanded </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns true if given property is expanded. </p>
<p>Naturally, always returns false for properties that cannot be expanded. </p>

</div>
</div>
<a class="anchor" id="a34c9622a8a65bdcf494a9fabff8e7e6e"></a><!-- doxytag: member="wxPropertyGridInterface::IsPropertyKindOf" ref="a34c9622a8a65bdcf494a9fabff8e7e6e" args="(wxPGPropArg id, wxClassInfo *info) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPropertyGridInterface::IsPropertyKindOf </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxClassInfo *&nbsp;</td>
          <td class="paramname"> <em>info</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns true if property is of certain type. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>info</em>&nbsp;</td><td>Preferably use <a class="el" href="group__miscellaneous.htm#ga74d8d2f3302b624b76d343d2abb1ff53" title="Use this with wxPropertyGrid::IsPropertyKindOf.">WX_PG_CLASSINFO(PROPERTYNAME)</a>. Alternative is PROPERTYNAMEClassInfo. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a2005aa0ab6855cc4c4ecee816f97f791"></a><!-- doxytag: member="wxPropertyGridInterface::IsPropertyShown" ref="a2005aa0ab6855cc4c4ecee816f97f791" args="(wxPGPropArg id) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPropertyGridInterface::IsPropertyShown </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns true if property is shown (ie. </p>
<p>hideproperty with true not called for it). </p>

</div>
</div>
<a class="anchor" id="a39aacb70062e81939e325b4e26d6ba17"></a><!-- doxytag: member="wxPropertyGridInterface::IsPropertyValueType" ref="a39aacb70062e81939e325b4e26d6ba17" args="(wxPGPropArg id, const wxChar *typestr) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPropertyGridInterface::IsPropertyValueType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxChar *&nbsp;</td>
          <td class="paramname"> <em>typestr</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns true if property's value type has name typestr. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.htm#_deprecated000009">Deprecated:</a></b></dt><dd>Since version 1.3. Use GetPropertyValueType() and wxString comparison instead. </dd></dl>

</div>
</div>
<a class="anchor" id="a3bd90cc2fb578c6b535e11170560b348"></a><!-- doxytag: member="wxPropertyGridInterface::NamesToProperties" ref="a3bd90cc2fb578c6b535e11170560b348" args="(wxArrayPGProperty *properties, const wxArrayString &amp;names) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGridInterface::NamesToProperties </td>
          <td>(</td>
          <td class="paramtype">wxArrayPGProperty *&nbsp;</td>
          <td class="paramname"> <em>properties</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxArrayString &amp;&nbsp;</td>
          <td class="paramname"> <em>names</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Converts array of names to array of property pointers. </p>
<dl class="remark"><dt><b>Remarks:</b></dt><dd>If wxPG_USE_STL is 1, then wxArrayPGProperty is typedef of std::vector&lt;wxPGProperty*&gt;. </dd></dl>

</div>
</div>
<a class="anchor" id="ae41c74187a535ba908c6dde684383de0"></a><!-- doxytag: member="wxPropertyGridInterface::PropertiesToNames" ref="ae41c74187a535ba908c6dde684383de0" args="(wxArrayString *names, const wxArrayPGProperty &amp;properties) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGridInterface::PropertiesToNames </td>
          <td>(</td>
          <td class="paramtype">wxArrayString *&nbsp;</td>
          <td class="paramname"> <em>names</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxArrayPGProperty &amp;&nbsp;</td>
          <td class="paramname"> <em>properties</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Converts array of properties to array of names. </p>
<dl class="remark"><dt><b>Remarks:</b></dt><dd>If wxPG_USE_STL is 1, then wxArrayPGProperty is typedef of std::vector&lt;wxPGProperty*&gt;. </dd></dl>

</div>
</div>
<a class="anchor" id="a330dc911b08378e967955f8a6a938612"></a><!-- doxytag: member="wxPropertyGridInterface::RegisterAdditionalEditors" ref="a330dc911b08378e967955f8a6a938612" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void wxPropertyGridInterface::RegisterAdditionalEditors </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Initializes additional property editors (SpinCtrl etc. </p>
<p>). Causes references to most object files in the library, so calling this may cause significant increase in executable size when linking with static library. </p>

</div>
</div>
<a class="anchor" id="a48485b2134b49f0bfb9adeb744d5c1a5"></a><!-- doxytag: member="wxPropertyGridInterface::RemoveProperty" ref="a48485b2134b49f0bfb9adeb744d5c1a5" args="(wxPGPropArg id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGridInterface::RemoveProperty </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Removes a property. </p>
<p>Does not delete the property object, but instead returns it.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>id</em>&nbsp;</td><td>Pointer or name of a property.</td></tr>
  </table>
  </dd>
</dl>
<dl class="remark"><dt><b>Remarks:</b></dt><dd>Removed property cannot have any children.</dd></dl>
<p>Also, if you remove property in a <a class="el" href="classwxPropertyGrid.htm" title="wxPropertyGrid is a specialized two-column grid for editing properties such as strings...">wxPropertyGrid</a> event handler, the actual removal is postponed until the next idle event. </p>

</div>
</div>
<a class="anchor" id="ac0b507d04a4420f3aa8fec0c38e99cd1"></a><!-- doxytag: member="wxPropertyGridInterface::ReplaceProperty" ref="ac0b507d04a4420f3aa8fec0c38e99cd1" args="(wxPGPropArg id, wxPGProperty *property)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGridInterface::ReplaceProperty </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="paramname"> <em>property</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Replaces property with id with newly created property. </p>
<p>For example, this code replaces existing property named "Flags" with one that will have different set of items: </p>
<div class="fragment"><pre class="fragment">            pg-&gt;<a class="code" href="classwxPropertyGridInterface.htm#ac0b507d04a4420f3aa8fec0c38e99cd1" title="Replaces property with id with newly created property.">ReplaceProperty</a>(wxT(<span class="stringliteral">&quot;Flags&quot;</span>),
                <a class="code" href="classwxFlagsProperty.htm" title="Represents a bit set that fits in a long integer.">wxFlagsProperty</a>(wxT(<span class="stringliteral">&quot;Flags&quot;</span>),wxPG_LABEL,newItems))
</pre></div><p> For more info, see <a class="el" href="classwxPropertyGridInterface.htm#abf342b34022630c15038c9d7679d3c57" title="Inserts property to the property container.">wxPropertyGrid::Insert</a>. </p>

</div>
</div>
<a class="anchor" id="aceb7f1ca6c7079c075d9876b94a2cb0f"></a><!-- doxytag: member="wxPropertyGridInterface::RestoreEditableState" ref="aceb7f1ca6c7079c075d9876b94a2cb0f" args="(const wxString &amp;src, int restoreStates=AllStates)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPropertyGridInterface::RestoreEditableState </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>restoreStates</em> = <code>AllStates</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Restores user-editable state. </p>
<p>See also <a class="el" href="classwxPropertyGridInterface.htm#a09dcfdf53629918183615627957afe39" title="Used to acquire user-editable state (selected property, expanded properties, scrolled...">wxPropertyGridInterface::SaveEditableState()</a>.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>src</em>&nbsp;</td><td>String generated by SaveEditableState.</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>restoreStates</em>&nbsp;</td><td>Which parts to restore from source string. See <a class="el" href="classwxPropertyGridInterface.htm#propgridinterface_editablestate_flags">list of editable state</a> flags".</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>False if there was problem reading the string.</dd></dl>
<dl class="remark"><dt><b>Remarks:</b></dt><dd>If some parts of state (such as scrolled or splitter position) fail to restore correctly, please make sure that you call this function after <a class="el" href="classwxPropertyGrid.htm" title="wxPropertyGrid is a specialized two-column grid for editing properties such as strings...">wxPropertyGrid</a> size has been set (this may sometimes be tricky when sizers are used). </dd></dl>

</div>
</div>
<a class="anchor" id="a09dcfdf53629918183615627957afe39"></a><!-- doxytag: member="wxPropertyGridInterface::SaveEditableState" ref="a09dcfdf53629918183615627957afe39" args="(int includedStates=AllStates) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxString wxPropertyGridInterface::SaveEditableState </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>includedStates</em> = <code>AllStates</code></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Used to acquire user-editable state (selected property, expanded properties, scrolled position, splitter positions). </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>includedStates</em>&nbsp;</td><td>Which parts of state to include. See <a class="el" href="classwxPropertyGridInterface.htm#propgridinterface_editablestate_flags">list of editable state flags</a>. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a41b5c6452fad15b15a73fc6e6a08a748"></a><!-- doxytag: member="wxPropertyGridInterface::SetBoolChoices" ref="a41b5c6452fad15b15a73fc6e6a08a748" args="(const wxString &amp;true_choice, const wxString &amp;false_choice)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void wxPropertyGridInterface::SetBoolChoices </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>true_choice</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>false_choice</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Lets user to set the strings listed in the choice dropdown of a <a class="el" href="classwxBoolProperty.htm" title="Basic property with boolean value.">wxBoolProperty</a>. </p>
<p>Defaults are "True" and "False", so changing them to, say, "Yes" and "No" may be useful in some less technical applications. </p>

</div>
</div>
<a class="anchor" id="a5df440361d9e85f3a48d79d7b45667e1"></a><!-- doxytag: member="wxPropertyGridInterface::SetColumnProportion" ref="a5df440361d9e85f3a48d79d7b45667e1" args="(unsigned int column, int proportion)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPropertyGridInterface::SetColumnProportion </td>
          <td>(</td>
          <td class="paramtype">unsigned int&nbsp;</td>
          <td class="paramname"> <em>column</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>proportion</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set proportion of a auto-stretchable column. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>Returns  on failure.</dd></dl>
<dl class="remark"><dt><b>Remarks:</b></dt><dd>This member function will fail unless window style wxPG_SPLITTER_AUTO_CENTER is used.</dd></dl>
<p>Also, you should call this for individual pages of <a class="el" href="classwxPropertyGridManager.htm" title="wxPropertyGridManager is an efficient multi-page version of wxPropertyGrid, which...">wxPropertyGridManager</a> (if used).</p>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="classwxPropertyGridInterface.htm#ac39b51cf43d0dd8cc9b6cf4d54119da8" title="Returns auto-resize proportion of the given column.">GetColumnProportion()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="ae47209e69ec37de673116648c655bd44"></a><!-- doxytag: member="wxPropertyGridInterface::SetExpandedProperties" ref="ae47209e69ec37de673116648c655bd44" args="(const wxArrayPGProperty &amp;array, bool expand=true)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGridInterface::SetExpandedProperties </td>
          <td>(</td>
          <td class="paramtype">const wxArrayPGProperty &amp;&nbsp;</td>
          <td class="paramname"> <em>array</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>expand</em> = <code>true</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets all properties in given array as expanded. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>expand</em>&nbsp;</td><td>False if you want to collapse properties instead. </td></tr>
  </table>
  </dd>
</dl>
<dl class="remark"><dt><b>Remarks:</b></dt><dd>If wxPG_USE_STL is 1, then wxArrayPGProperty is typedef of std::vector&lt;wxPGProperty*&gt;. </dd></dl>

</div>
</div>
<a class="anchor" id="a5c05318d9e0838ff57361c0b938ca347"></a><!-- doxytag: member="wxPropertyGridInterface::SetPropertiesFlag" ref="a5c05318d9e0838ff57361c0b938ca347" args="(const wxArrayPGProperty &amp;srcArr, wxPGProperty::FlagType flags, bool inverse=false)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGridInterface::SetPropertiesFlag </td>
          <td>(</td>
          <td class="paramtype">const wxArrayPGProperty &amp;&nbsp;</td>
          <td class="paramname"> <em>srcArr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxPGProperty::FlagType&nbsp;</td>
          <td class="paramname"> <em>flags</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>inverse</em> = <code>false</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets or clears flag(s) of all properties in given array. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>flags</em>&nbsp;</td><td>Property flags to set or clear. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>inverse</em>&nbsp;</td><td>Set to true if you want to clear flag instead of setting them. </td></tr>
  </table>
  </dd>
</dl>
<dl class="remark"><dt><b>Remarks:</b></dt><dd>If wxPG_USE_STL is 1, then wxArrayPGProperty is typedef of std::vector&lt;wxPGProperty*&gt;. </dd></dl>

</div>
</div>
<a class="anchor" id="a129a37f9d87a2a08516772de9860432d"></a><!-- doxytag: member="wxPropertyGridInterface::SetPropertyAttribute" ref="a129a37f9d87a2a08516772de9860432d" args="(wxPGPropArg id, const wxString &amp;attrName, wxVariant value, long argFlags=0)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGridInterface::SetPropertyAttribute </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>attrName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxVariant&nbsp;</td>
          <td class="paramname"> <em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">long&nbsp;</td>
          <td class="paramname"> <em>argFlags</em> = <code>0</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets an attribute of a property. </p>
<p>Ids and relevants values are totally specific to property classes and may affect either the given instance or all instances of that class. See <a class="el" href="group__attrids.htm">wxPropertyGrid Property Attribute Identifiers</a> for list of built-in attributes. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>argFlags</em>&nbsp;</td><td>Optional. Use wxPG_RECURSE to set the attribute to child properties as well. </td></tr>
  </table>
  </dd>
</dl>
<dl class="remark"><dt><b>Remarks:</b></dt><dd><ul>
<li>Settings attribute's value to Null variant will simply remove it from property's set of attributes.</li>
<li>wxVariant doesn't have int constructor (as of 2.5.4), so <b>you will need to cast int values (including most numeral constants) to long</b>. </li>
</ul>
</dd></dl>

</div>
</div>
<a class="anchor" id="afd6721e817062d6c9dbb522334c029a0"></a><!-- doxytag: member="wxPropertyGridInterface::SetPropertyCell" ref="afd6721e817062d6c9dbb522334c029a0" args="(wxPGPropArg id, int column, const wxString &amp;text=wxEmptyString, const wxBitmap &amp;bitmap=wxNullBitmap, const wxColour &amp;fgCol=wxNullColour, const wxColour &amp;bgCol=wxNullColour)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGridInterface::SetPropertyCell </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>column</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>text</em> = <code>wxEmptyString</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxBitmap &amp;&nbsp;</td>
          <td class="paramname"> <em>bitmap</em> = <code>wxNullBitmap</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxColour &amp;&nbsp;</td>
          <td class="paramname"> <em>fgCol</em> = <code>wxNullColour</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxColour &amp;&nbsp;</td>
          <td class="paramname"> <em>bgCol</em> = <code>wxNullColour</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets text, bitmap, and colours for given column's cell. </p>
<dl class="remark"><dt><b>Remarks:</b></dt><dd><ul>
<li>You can set label cell by setting column to 0.</li>
<li>You can use wxPG_LABEL as text to use default text for column. </li>
</ul>
</dd></dl>

</div>
</div>
<a class="anchor" id="ad5e4e10acaedf04f666937fd2a90500a"></a><!-- doxytag: member="wxPropertyGridInterface::SetPropertyChoices" ref="ad5e4e10acaedf04f666937fd2a90500a" args="(wxPGPropArg id, wxPGChoices &amp;choices)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGridInterface::SetPropertyChoices </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classwxPGChoices.htm">wxPGChoices</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>choices</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set choices of a property to specified set of labels and values. </p>
<dl class="remark"><dt><b>Remarks:</b></dt><dd>This operation clears the property value. Also, if you try to use this on a property which cannot hold choices, a run-time error will be shown.</dd></dl>
<p>This function will deselect the property, if necessary. </p>

</div>
</div>
<a class="anchor" id="a359ca422650307d64da30bd41f34bea9"></a><!-- doxytag: member="wxPropertyGridInterface::SetPropertyClientData" ref="a359ca422650307d64da30bd41f34bea9" args="(wxPGPropArg id, wxPGProperty::ClientDataType clientData)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGridInterface::SetPropertyClientData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxPGProperty::ClientDataType&nbsp;</td>
          <td class="paramname"> <em>clientData</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets client data (void*) of a property. </p>
<dl class="remark"><dt><b>Remarks:</b></dt><dd>This untyped client data has to be deleted manually. </dd></dl>

</div>
</div>
<a class="anchor" id="a7155520a900a212c6ba48924a0398817"></a><!-- doxytag: member="wxPropertyGridInterface::SetPropertyEditor" ref="a7155520a900a212c6ba48924a0398817" args="(wxPGPropArg id, const wxString &amp;editorName)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGridInterface::SetPropertyEditor </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>editorName</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets editor control of a property. </p>
<p>As editor argument, use editor name string, such as wxT("TextCtrl") or wxT("Choice"). </p>

</div>
</div>
<a class="anchor" id="aff961af9dd2787fb97f510ea5ce46407"></a><!-- doxytag: member="wxPropertyGridInterface::SetPropertyEditor" ref="aff961af9dd2787fb97f510ea5ce46407" args="(wxPGPropArg id, const wxPGEditor *editor)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGridInterface::SetPropertyEditor </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *&nbsp;</td>
          <td class="paramname"> <em>editor</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets editor control of a property. </p>
<p>As editor argument, use wxPG_EDITOR(EditorName), where basic built-in editor names are TextCtrl, Choice, ComboBox, CheckBox, TextCtrlAndButton, and ChoiceAndButton. Additional editors include SpinCtrl and DatePickerCtrl, which also require <a class="el" href="classwxPropertyGridInterface.htm#a330dc911b08378e967955f8a6a938612" title="Initializes additional property editors (SpinCtrl etc.">wxPropertyGrid::RegisterAdditionalEditors()</a> call prior using. </p>

</div>
</div>
<a class="anchor" id="a5793ea3ef9afa47fe2c1c5bf437dd583"></a><!-- doxytag: member="wxPropertyGridInterface::SetPropertyHelpString" ref="a5793ea3ef9afa47fe2c1c5bf437dd583" args="(wxPGPropArg id, const wxString &amp;helpString)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGridInterface::SetPropertyHelpString </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>helpString</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Associates the help string with property. </p>
<dl class="remark"><dt><b>Remarks:</b></dt><dd>By default, text is shown either in the manager's "description" text box or in the status bar. If extra window style wxPG_EX_HELP_AS_TOOLTIPS is used, then the text will appear as a tooltip. </dd></dl>

</div>
</div>
<a class="anchor" id="a88befed8aa91d5c6e62844da2166bb3c"></a><!-- doxytag: member="wxPropertyGridInterface::SetPropertyImage" ref="a88befed8aa91d5c6e62844da2166bb3c" args="(wxPGPropArg id, wxBitmap &amp;bmp)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGridInterface::SetPropertyImage </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxBitmap &amp;&nbsp;</td>
          <td class="paramname"> <em>bmp</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set wxBitmap in front of the value. </p>
<dl class="remark"><dt><b>Remarks:</b></dt><dd><ul>
<li>Bitmap will be scaled to a size returned by <a class="el" href="classwxPropertyGrid.htm#a1b0b18a57e1b0d9ce137c140de5d8f78" title="Returns size of the custom paint image in front of property.">wxPropertyGrid::GetImageSize()</a>; </li>
</ul>
</dd></dl>

</div>
</div>
<a class="anchor" id="ad7cc77546762cc92e69078d6ac161c63"></a><!-- doxytag: member="wxPropertyGridInterface::SetPropertyLabel" ref="ad7cc77546762cc92e69078d6ac161c63" args="(wxPGPropArg id, const wxString &amp;newproplabel)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGridInterface::SetPropertyLabel </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>newproplabel</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets label of a property. </p>
<dl class="remark"><dt><b>Remarks:</b></dt><dd><ul>
<li>Properties under same parent may have same labels. However, property names must still remain unique. </li>
</ul>
</dd></dl>

</div>
</div>
<a class="anchor" id="af5442c56a869f8f03c530a0d34555cd2"></a><!-- doxytag: member="wxPropertyGridInterface::SetPropertyReadOnly" ref="af5442c56a869f8f03c530a0d34555cd2" args="(wxPGPropArg id, bool set=true, int flags=wxPG_RECURSE)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGridInterface::SetPropertyReadOnly </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>set</em> = <code>true</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>flags</em> = <code>wxPG_RECURSE</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets property (and, recursively, its children) to have read-only value. </p>
<p>In other words, user cannot change the value in the editor, but they can still copy it.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>flags</em>&nbsp;</td><td>By default changes are applied recursively. Set this paramter wxPG_DONT_RECURSE to prevent this.</td></tr>
  </table>
  </dd>
</dl>
<dl class="remark"><dt><b>Remarks:</b></dt><dd>This is mainly for use with textctrl editor. Not all other editors fully support it.</dd></dl>
<p>Also note that read-only state does not immediately become active for currently open property editor. </p>

</div>
</div>
<a class="anchor" id="a07d4eb7ae9fc0014cc72bb320e36fa4f"></a><!-- doxytag: member="wxPropertyGridInterface::SetPropertyValue" ref="a07d4eb7ae9fc0014cc72bb320e36fa4f" args="(wxPGPropArg id, wxVariant value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGridInterface::SetPropertyValue </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxVariant&nbsp;</td>
          <td class="paramname"> <em>value</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets value (wxVariant&amp;) of a property. </p>
<dl class="remark"><dt><b>Remarks:</b></dt><dd>Use <a class="el" href="classwxPropertyGrid.htm#a6958b5c1a1f71512afaf6f2c07c1becd" title="Changes value of a property, as if from an editor.">wxPropertyGrid::ChangePropertyValue()</a> instead if you need to run through validation process and send property change event. </dd></dl>

</div>
</div>
<a class="anchor" id="a6a40bb8a2f211397ba8c2f3baa2eca64"></a><!-- doxytag: member="wxPropertyGridInterface::SetPropertyValue" ref="a6a40bb8a2f211397ba8c2f3baa2eca64" args="(wxPGPropArg id, void *value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGridInterface::SetPropertyValue </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&nbsp;</td>
          <td class="paramname"> <em>value</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets value (void*) of a property. </p>

</div>
</div>
<a class="anchor" id="a4d2cbc3ea3d92c59e87372f4a05cba99"></a><!-- doxytag: member="wxPropertyGridInterface::SetPropertyValue" ref="a4d2cbc3ea3d92c59e87372f4a05cba99" args="(wxPGPropArg id, const wxString &amp;value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGridInterface::SetPropertyValue </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>value</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets value (wxString) of a property. </p>
<dl class="remark"><dt><b>Remarks:</b></dt><dd>This method uses <a class="el" href="classwxPGProperty.htm#a55f438205fd7684d76a9435cbaec6aa5" title="Converts string to a value, and if succesfull, calls SetValue() on it.">wxPGProperty::SetValueFromString</a>, which all properties should implement. This means that there should not be a type error, and instead the string is converted to property's actual value type. </dd></dl>

</div>
</div>
<a class="anchor" id="ad0354321e04ed670c1d4904ef68f9ea0"></a><!-- doxytag: member="wxPropertyGridInterface::SetPropertyValueUnspecified" ref="ad0354321e04ed670c1d4904ef68f9ea0" args="(wxPGPropArg id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGridInterface::SetPropertyValueUnspecified </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets property's value to unspecified. </p>
<p>If it has children (it may be category), then the same thing is done to them. </p>

</div>
</div>
<a class="anchor" id="aff5b15494ae318a1475d4389e1abce72"></a><!-- doxytag: member="wxPropertyGridInterface::SetPropVal" ref="aff5b15494ae318a1475d4389e1abce72" args="(wxPGPropArg id, wxVariant &amp;value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGridInterface::SetPropVal </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="paramname"> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxVariant &amp;&nbsp;</td>
          <td class="paramname"> <em>value</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets value (wxDateTime&amp;) of a property. </p>
<p>Sets value (wxVariant&amp;) of a property. Same as SetPropertyValue, but accepts reference. </p>

</div>
</div>
<a class="anchor" id="ade72c97a047aa409dc7429010f640bb6"></a><!-- doxytag: member="wxPropertyGridInterface::SetValidationFailureBehavior" ref="ade72c97a047aa409dc7429010f640bb6" args="(int vfbFlags)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPropertyGridInterface::SetValidationFailureBehavior </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>vfbFlags</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Adjusts how <a class="el" href="classwxPropertyGrid.htm" title="wxPropertyGrid is a specialized two-column grid for editing properties such as strings...">wxPropertyGrid</a> behaves when invalid value is entered in a property. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>vfbFlags</em>&nbsp;</td><td>See <a class="el" href="group__vfbflags.htm">list of valid flags values</a> </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>propgrid.h</li>
</ul>
</div>
<!--- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&nbsp;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&nbsp;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&nbsp;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&nbsp;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&nbsp;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&nbsp;</span>Enumerator</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<hr class="footer"/><address style="text-align: right;"><small>Generated on Sun Feb 27 10:25:59 2011 for wxPropertyGrid by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.3 </small></address>
</body>
</html>
