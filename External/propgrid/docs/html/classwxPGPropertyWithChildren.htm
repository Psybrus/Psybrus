<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>wxPropertyGrid: wxPGPropertyWithChildren class Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.3.6 -->
<div class="qindex">  <form class="search" action="search.php" method="get">
<a class="qindex" href="index.htm">Main&nbsp;Page</a> | <a class="qindex" href="modules.htm">Modules</a> | <a class="qindex" href="hierarchy.htm">Class&nbsp;Hierarchy</a> | <a class="qindex" href="classes.htm">Alphabetical&nbsp;List</a> | <a class="qindex" href="annotated.htm">Class&nbsp;List</a> | <a class="qindex" href="functions.htm">Class&nbsp;Members</a>  | <span class="search"><u>S</u>earch&nbsp;for&nbsp;<input class="search" type="text" name="query" value="" size="20" accesskey="s"/></span></form></div>
<h1>wxPGPropertyWithChildren Class Reference</h1>wxPGPropertyWithChildren, alias wxParentPropertyClass, is a base class for new properties that have sub-properties. For example, wxFontProperty and wxFlagsProperty descend from this class.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;propgrid.h&gt;</code>
<p>
<p>Inheritance diagram for wxPGPropertyWithChildren:
<p><center><img src="classwxPGPropertyWithChildren.png" usemap="#wxPGPropertyWithChildren_map" border="0" alt=""></center>
<map name="wxPGPropertyWithChildren_map">
<area href="classwxPGProperty.htm" alt="wxPGProperty" shape="rect" coords="175,0,340,24">
<area href="classwxPGRootProperty.htm" alt="wxPGRootProperty" shape="rect" coords="175,112,340,136">
<area href="classwxPropertyCategory.htm" alt="wxPropertyCategory" shape="rect" coords="350,112,515,136">
</map>
<a href="classwxPGPropertyWithChildren-members.htm">List of all members.</a><table border=0 cellpadding=0 cellspacing=0>
<tr><td></td></tr>
<tr><td colspan=2><br><h2>Public Types</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryw0" doxytag="wxPGPropertyWithChildren::ClientDataType" ></a>
typedef void *&nbsp;</td><td class="memItemRight" valign=bottom><b>ClientDataType</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryw1" doxytag="wxPGPropertyWithChildren::FlagType" ></a>
typedef unsigned short&nbsp;</td><td class="memItemRight" valign=bottom><b>FlagType</b></td></tr>

<tr><td colspan=2><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya0" doxytag="wxPGPropertyWithChildren::ActualIntToValue" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><b>ActualIntToValue</b> (wxVariant &amp;variant, int number, int argFlags=0) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya1" doxytag="wxPGPropertyWithChildren::ActualStringToValue" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><b>ActualStringToValue</b> (wxVariant &amp;variant, const wxString &amp;text, int argFlags=0) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya2" doxytag="wxPGPropertyWithChildren::ActualValidateValue" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><b>ActualValidateValue</b> (wxVariant &amp;value) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGPropertyWithChildren.htm#wxPropertyCategorya3">AdaptListToValue</a> (wxVariant &amp;list, wxVariant *value) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGPropertyWithChildren.htm#wxPropertyCategorya4">AddChild</a> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *prop)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGPropertyWithChildren.htm#wxPropertyCategorya5">AddChild2</a> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *prop, int index=-1, bool correct_mode=true)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya6">AppendChoice</a> (const wxString &amp;label, int value=INT_MAX)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya8">CanHaveExtraChildren</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGPropertyWithChildren.htm#wxPGPropertyWithChildrena8">ChildChanged</a> (wxVariant &amp;thisValue, int childIndex, wxVariant &amp;childValue) const=0</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya10" doxytag="wxPGPropertyWithChildren::ClearFlag" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>ClearFlag</b> (FlagType flag)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya12">DeleteChoice</a> (int index)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual wxVariant&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya13">DoGetAttribute</a> (const wxString &amp;name) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya14">DoGetEditorClass</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual wxValidator *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya15">DoGetValidator</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual wxVariant&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya16">DoGetValue</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya17">DoSetAttribute</a> (const wxString &amp;name, wxVariant &amp;value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya18" doxytag="wxPGPropertyWithChildren::DoSetName" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>DoSetName</b> (const wxString &amp;str)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGPropertyWithChildren.htm#wxPropertyCategorya19">Empty</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya20">EnsureDataExt</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya21" doxytag="wxPGPropertyWithChildren::FixIndexesOfChildren" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>FixIndexesOfChildren</b> (size_t starthere=0)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya22" doxytag="wxPGPropertyWithChildren::GetArrIndex" ></a>
unsigned int&nbsp;</td><td class="memItemRight" valign=bottom><b>GetArrIndex</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>long&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya23">GetAttribute</a> (const wxString &amp;name, long defVal)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxString&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya24">GetAttribute</a> (const wxString &amp;name, const wxString &amp;defVal)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya25" doxytag="wxPGPropertyWithChildren::GetAttribute" ></a>
wxVariant&nbsp;</td><td class="memItemRight" valign=bottom><b>GetAttribute</b> (const wxString &amp;name) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>const <a class="el" href="classwxPGAttributeStorage.htm">wxPGAttributeStorage</a> &amp;&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya26">GetAttributes</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxVariant&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya27">GetAttributesAsList</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>const wxString &amp;&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya28">GetBaseName</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya29" doxytag="wxPGPropertyWithChildren::GetCell" ></a>
<a class="el" href="classwxPGCell.htm">wxPGCell</a> *&nbsp;</td><td class="memItemRight" valign=bottom><b>GetCell</b> (unsigned int column) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual <a class="el" href="classwxPGCellRenderer.htm">wxPGCellRenderer</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya30">GetCellRenderer</a> (int column) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>size_t&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya31">GetChildCount</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGPropertyWithChildren.htm#wxPropertyCategorya32">GetChildrenHeight</a> (int lh, int iMax=-1) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya33" doxytag="wxPGPropertyWithChildren::GetChoiceCount" ></a>
unsigned int&nbsp;</td><td class="memItemRight" valign=bottom><b>GetChoiceCount</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya34">GetChoiceInfo</a> (wxPGChoiceInfo *choiceinfo)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya35" doxytag="wxPGPropertyWithChildren::GetChoices" ></a>
const <a class="el" href="classwxPGChoices.htm">wxPGChoices</a> &amp;&nbsp;</td><td class="memItemRight" valign=bottom><b>GetChoices</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya36" doxytag="wxPGPropertyWithChildren::GetChoices" ></a>
<a class="el" href="classwxPGChoices.htm">wxPGChoices</a> &amp;&nbsp;</td><td class="memItemRight" valign=bottom><b>GetChoices</b> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya37" doxytag="wxPGPropertyWithChildren::GetChoiceString" ></a>
wxString&nbsp;</td><td class="memItemRight" valign=bottom><b>GetChoiceString</b> (unsigned int index)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya38" doxytag="wxPGPropertyWithChildren::GetClassName" ></a>
const wxChar *&nbsp;</td><td class="memItemRight" valign=bottom><b>GetClassName</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya39" doxytag="wxPGPropertyWithChildren::GetClientData" ></a>
ClientDataType&nbsp;</td><td class="memItemRight" valign=bottom><b>GetClientData</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya40">GetColumnEditor</a> (int column) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya41">GetCommonValue</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>size_t&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGPropertyWithChildren.htm#wxPropertyCategorya42">GetCount</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya43" doxytag="wxPGPropertyWithChildren::GetCurrentChoice" ></a>
const <a class="el" href="classwxPGChoiceEntry.htm">wxPGChoiceEntry</a> *&nbsp;</td><td class="memItemRight" valign=bottom><b>GetCurrentChoice</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGPropertyDataExt.htm">wxPGPropertyDataExt</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya44">GetDataExt</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya45" doxytag="wxPGPropertyWithChildren::GetDefaultValue" ></a>
wxVariant&nbsp;</td><td class="memItemRight" valign=bottom><b>GetDefaultValue</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya46" doxytag="wxPGPropertyWithChildren::GetDepth" ></a>
unsigned int&nbsp;</td><td class="memItemRight" valign=bottom><b>GetDepth</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya47">GetDisplayedCommonValueCount</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya48" doxytag="wxPGPropertyWithChildren::GetDisplayedString" ></a>
wxString&nbsp;</td><td class="memItemRight" valign=bottom><b>GetDisplayedString</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya49" doxytag="wxPGPropertyWithChildren::GetEditorClass" ></a>
const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *&nbsp;</td><td class="memItemRight" valign=bottom><b>GetEditorClass</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual <a class="el" href="classwxPGEditorDialogAdapter.htm">wxPGEditorDialogAdapter</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya50">GetEditorDialog</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya51" doxytag="wxPGPropertyWithChildren::GetFlags" ></a>
unsigned int&nbsp;</td><td class="memItemRight" valign=bottom><b>GetFlags</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxString&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya52">GetFlagsAsString</a> (FlagType flagsMask) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxString&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya53">GetFullName</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya54">GetGrid</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya55">GetGridIfDisplayed</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya56" doxytag="wxPGPropertyWithChildren::GetHelpString" ></a>
wxString&nbsp;</td><td class="memItemRight" valign=bottom><b>GetHelpString</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGProperty.htm">wxPGId</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya57">GetId</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual wxSize&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya58">GetImageSize</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>unsigned int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya59">GetIndexInParent</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya60" doxytag="wxPGPropertyWithChildren::GetItemAtY" ></a>
<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><b>GetItemAtY</b> (unsigned int y, unsigned int lh, unsigned int *nextItemY) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>const wxString &amp;&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya61">GetLabel</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>const <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya62">GetLastVisibleSubItem</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya63">GetMainParent</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya64" doxytag="wxPGPropertyWithChildren::GetMaxLength" ></a>
int&nbsp;</td><td class="memItemRight" valign=bottom><b>GetMaxLength</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>const wxString &amp;&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya65">GetName</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGPropertyWithChildren.htm">wxPGPropertyWithChildren</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya66">GetParent</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>signed char&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya67">GetParentingType</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGPropertyWithChildren.htm#wxPropertyCategorya68">GetParentState</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGPropertyWithChildren.htm#wxPropertyCategorya69">GetPropertyByName</a> (const wxString &amp;name) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxString&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya72">GetType</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxValidator *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya73">GetValidator</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya74" doxytag="wxPGPropertyWithChildren::GetValue" ></a>
wxVariant&nbsp;</td><td class="memItemRight" valign=bottom><b>GetValue</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya75" doxytag="wxPGPropertyWithChildren::GetValueAs" ></a>
template&lt;class T&gt; T &amp;&nbsp;</td><td class="memItemRight" valign=bottom><b>GetValueAs</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual wxString&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGPropertyWithChildren.htm#wxPGRootPropertya73">GetValueAsString</a> (int argFlags=0) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxVariant&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya77">GetValueAsVariant</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya78" doxytag="wxPGPropertyWithChildren::GetValueImage" ></a>
wxBitmap *&nbsp;</td><td class="memItemRight" valign=bottom><b>GetValueImage</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya79" doxytag="wxPGPropertyWithChildren::GetValueRef" ></a>
const wxVariant &amp;&nbsp;</td><td class="memItemRight" valign=bottom><b>GetValueRef</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxVariant &amp;&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya80">GetValueRef</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxString&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya81">GetValueString</a> (int argFlags=0) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya82">GetY</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya83" doxytag="wxPGPropertyWithChildren::HasFlag" ></a>
FlagType&nbsp;</td><td class="memItemRight" valign=bottom><b>HasFlag</b> (FlagType flag) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya84">Hide</a> (bool hide)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGPropertyWithChildren.htm#wxPropertyCategorya85">Index</a> (const <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *p) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya86">InsertChoice</a> (const wxString &amp;label, int index, int value=INT_MAX)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya87">IntToValue</a> (wxVariant &amp;value, int number, int argFlags=0) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya88">IsCategory</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya89" doxytag="wxPGPropertyWithChildren::IsEnabled" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><b>IsEnabled</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGPropertyWithChildren.htm#wxPropertyCategorya90">IsExpanded</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya91" doxytag="wxPGPropertyWithChildren::IsFlagSet" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><b>IsFlagSet</b> (FlagType flag) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya92" doxytag="wxPGPropertyWithChildren::IsSomeParent" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><b>IsSomeParent</b> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *candidate_parent) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya93">IsSubProperty</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya94" doxytag="wxPGPropertyWithChildren::IsValueType" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><b>IsValueType</b> (const wxChar *str)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya95" doxytag="wxPGPropertyWithChildren::IsValueUnspecified" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><b>IsValueUnspecified</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya96">IsVisible</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGPropertyWithChildren.htm#wxPropertyCategorya97">Item</a> (size_t i) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGPropertyWithChildren.htm#wxPropertyCategorya98">Last</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya99">OnCustomPaint</a> (wxDC &amp;dc, const wxRect &amp;rect, <a class="el" href="structwxPGPaintData.htm">wxPGPaintData</a> &amp;paintdata)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya100">OnEvent</a> (<a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *propgrid, wxWindow *wnd_primary, wxEvent &amp;event)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual wxSize&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya101">OnMeasureImage</a> (int item=-1) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya102">OnSetValue</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya103" doxytag="wxPGPropertyWithChildren::PrepareSubProperties" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>PrepareSubProperties</b> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya104">PrepareValueForDialogEditing</a> (<a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *propgrid)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya105">RecreateEditor</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya106">RefreshChildren</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya107">RefreshEditor</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya108">SetAttribute</a> (const wxString &amp;name, wxVariant value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya109">SetAttributes</a> (const <a class="el" href="classwxPGAttributeStorage.htm">wxPGAttributeStorage</a> &amp;attributes)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya110">SetCell</a> (int column, <a class="el" href="classwxPGCell.htm">wxPGCell</a> *cellObj)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya111">SetChoices</a> (const wxArrayString &amp;labels, const wxArrayInt &amp;values=wxArrayInt())</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya112">SetChoices</a> (<a class="el" href="classwxPGChoices.htm">wxPGChoices</a> &amp;choices)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya113">SetChoiceSelection</a> (int newValue, const wxPGChoiceInfo &amp;choiceInfo)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya114">SetChoicesExclusive</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya115">SetClientData</a> (ClientDataType clientData)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya116">SetCommonValue</a> (int commonValue)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya117">SetEditor</a> (const wxString &amp;editorName)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya118">SetEditor</a> (const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *editor)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya119" doxytag="wxPGPropertyWithChildren::SetExpanded" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>SetExpanded</b> (bool expanded)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya120" doxytag="wxPGPropertyWithChildren::SetFlag" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>SetFlag</b> (FlagType flag)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya121">SetFlagsFromString</a> (const wxString &amp;str)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya122" doxytag="wxPGPropertyWithChildren::SetHelpString" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>SetHelpString</b> (const wxString &amp;helpString)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya123" doxytag="wxPGPropertyWithChildren::SetLabel" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>SetLabel</b> (const wxString &amp;label)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya124">SetMaxLength</a> (int maxLen)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya125" doxytag="wxPGPropertyWithChildren::SetParentState" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>SetParentState</b> (<a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a> *pstate)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya127">SetValidator</a> (const wxValidator &amp;validator)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya128">SetValue</a> (wxVariant value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya129">SetValue0</a> (wxVariant &amp;value, wxVariant *pList=NULL, bool refreshEditor=true)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya130">SetValueFromInt</a> (long value, int flags=0)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya131">SetValueFromString</a> (const wxString &amp;text, int flags=0)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya132">SetValueImage</a> (wxBitmap &amp;bmp)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya133" doxytag="wxPGPropertyWithChildren::SetValueToUnspecified" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>SetValueToUnspecified</b> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya134">SetWasModified</a> (bool set=true)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya135" doxytag="wxPGPropertyWithChildren::ShowError" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>ShowError</b> (const wxString &amp;msg) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGPropertyWithChildren.htm#wxPropertyCategorya136">StringToValue</a> (wxVariant &amp;variant, const wxString &amp;text, int argFlags=0) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya137" doxytag="wxPGPropertyWithChildren::SubPropsChanged" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>SubPropsChanged</b> (int oldSelInd=-1)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategorya138" doxytag="wxPGPropertyWithChildren::UpdateControl" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>UpdateControl</b> (wxWindow *primary)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya139">UsesAutoUnspecified</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya140">ValidateValue</a> (wxVariant &amp;value) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGPropertyWithChildren.htm#wxPGPropertyWithChildrena136">wxPGPropertyWithChildren</a> (const wxString &amp;label, const wxString &amp;name)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGPropertyWithChildren.htm#wxPGPropertyWithChildrena137">wxPGPropertyWithChildren</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGPropertyWithChildren.htm#wxPGPropertyWithChildrena138">~wxPGPropertyWithChildren</a> ()</td></tr>

<tr><td colspan=2><br><h2>Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryb0" doxytag="wxPGPropertyWithChildren::GetY2" ></a>
int&nbsp;</td><td class="memItemRight" valign=bottom><b>GetY2</b> (int lh) const </td></tr>

<tr><td colspan=2><br><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryp0" doxytag="wxPGPropertyWithChildren::m_arrIndex" ></a>
unsigned int&nbsp;</td><td class="memItemRight" valign=bottom><b>m_arrIndex</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryp1" doxytag="wxPGPropertyWithChildren::m_attributes" ></a>
<a class="el" href="classwxPGAttributeStorage.htm">wxPGAttributeStorage</a>&nbsp;</td><td class="memItemRight" valign=bottom><b>m_attributes</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryp2" doxytag="wxPGPropertyWithChildren::m_bgColIndex" ></a>
unsigned char&nbsp;</td><td class="memItemRight" valign=bottom><b>m_bgColIndex</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryp4" doxytag="wxPGPropertyWithChildren::m_cells" ></a>
wxArrayPtrVoid&nbsp;</td><td class="memItemRight" valign=bottom><b>m_cells</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryp5" doxytag="wxPGPropertyWithChildren::m_children" ></a>
wxArrayPtrVoid&nbsp;</td><td class="memItemRight" valign=bottom><b>m_children</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryp6" doxytag="wxPGPropertyWithChildren::m_clientData" ></a>
ClientDataType&nbsp;</td><td class="memItemRight" valign=bottom><b>m_clientData</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryp7" doxytag="wxPGPropertyWithChildren::m_commonValue" ></a>
int&nbsp;</td><td class="memItemRight" valign=bottom><b>m_commonValue</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryp8" doxytag="wxPGPropertyWithChildren::m_dataExt" ></a>
<a class="el" href="classwxPGPropertyDataExt.htm">wxPGPropertyDataExt</a> *&nbsp;</td><td class="memItemRight" valign=bottom><b>m_dataExt</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryp9" doxytag="wxPGPropertyWithChildren::m_depth" ></a>
unsigned char&nbsp;</td><td class="memItemRight" valign=bottom><b>m_depth</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryp10" doxytag="wxPGPropertyWithChildren::m_depthBgCol" ></a>
unsigned char&nbsp;</td><td class="memItemRight" valign=bottom><b>m_depthBgCol</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryp11" doxytag="wxPGPropertyWithChildren::m_fgColIndex" ></a>
unsigned char&nbsp;</td><td class="memItemRight" valign=bottom><b>m_fgColIndex</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryp12" doxytag="wxPGPropertyWithChildren::m_flags" ></a>
FlagType&nbsp;</td><td class="memItemRight" valign=bottom><b>m_flags</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryp13" doxytag="wxPGPropertyWithChildren::m_label" ></a>
wxString&nbsp;</td><td class="memItemRight" valign=bottom><b>m_label</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryp14" doxytag="wxPGPropertyWithChildren::m_maxLen" ></a>
short&nbsp;</td><td class="memItemRight" valign=bottom><b>m_maxLen</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryp15" doxytag="wxPGPropertyWithChildren::m_name" ></a>
wxString&nbsp;</td><td class="memItemRight" valign=bottom><b>m_name</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryp16" doxytag="wxPGPropertyWithChildren::m_parent" ></a>
<a class="el" href="classwxPGPropertyWithChildren.htm">wxPGPropertyWithChildren</a> *&nbsp;</td><td class="memItemRight" valign=bottom><b>m_parent</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryp17" doxytag="wxPGPropertyWithChildren::m_parentingType" ></a>
signed char&nbsp;</td><td class="memItemRight" valign=bottom><b>m_parentingType</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryp18" doxytag="wxPGPropertyWithChildren::m_parentState" ></a>
<a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a> *&nbsp;</td><td class="memItemRight" valign=bottom><b>m_parentState</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryp20" doxytag="wxPGPropertyWithChildren::m_value" ></a>
wxVariant&nbsp;</td><td class="memItemRight" valign=bottom><b>m_value</b></td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
wxPGPropertyWithChildren, alias wxParentPropertyClass, is a base class for new properties that have sub-properties. For example, wxFontProperty and wxFlagsProperty descend from this class. 
<p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="wxPGPropertyWithChildrena137" doxytag="wxPGPropertyWithChildren::wxPGPropertyWithChildren" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxPGPropertyWithChildren::wxPGPropertyWithChildren </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Special constructor only used in special cases. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPGPropertyWithChildrena136" doxytag="wxPGPropertyWithChildren::wxPGPropertyWithChildren" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxPGPropertyWithChildren::wxPGPropertyWithChildren </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>label</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>name</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
When new class is derived, call this constructor. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>label</em>&nbsp;</td><td>Label for the property. </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPGPropertyWithChildrena138" doxytag="wxPGPropertyWithChildren::~wxPGPropertyWithChildren" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual wxPGPropertyWithChildren::~<a class="el" href="classwxPGPropertyWithChildren.htm">wxPGPropertyWithChildren</a> </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Destructor. 
<p>
    </td>
  </tr>
</table>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="wxPropertyCategorya3" doxytag="wxPGPropertyWithChildren::AdaptListToValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPGPropertyWithChildren::AdaptListToValue </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxVariant &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>list</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxVariant *&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"> const</td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Adapts list variant into proper value using consequtive ChildChanged-calls. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya4" doxytag="wxPGPropertyWithChildren::AddChild" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPGPropertyWithChildren::AddChild </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>prop</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
This is used by properties that have fixed sub-properties. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya5" doxytag="wxPGPropertyWithChildren::AddChild2" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPGPropertyWithChildren::AddChild2 </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>prop</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>index</em> = -1, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>bool&nbsp;</td>
          <td class="mdname" nowrap> <em>correct_mode</em> = true</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
This is used by Insert etc. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya6" doxytag="wxPGPropertyWithChildren::AppendChoice" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int wxPGProperty::AppendChoice </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>label</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em> = INT_MAX</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Adds entry to property's <a class="el" href="classwxPGChoices.htm">wxPGChoices</a> and editor control (if it is active). 
<p>
Returns index of item added.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya8" doxytag="wxPGPropertyWithChildren::CanHaveExtraChildren" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPGProperty::CanHaveExtraChildren </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns true if extra children can be added for this property (i.e. 
<p>
it is <a class="el" href="classwxPropertyCategory.htm">wxPropertyCategory</a> or wxCustomProperty)     </td>
  </tr>
</table>
<a class="anchor" name="wxPGPropertyWithChildrena8" doxytag="wxPGPropertyWithChildren::ChildChanged" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void wxPGPropertyWithChildren::ChildChanged </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxVariant &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>thisValue</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>childIndex</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxVariant &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>childValue</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"> const<code> [pure virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Called after value of a child property has been altered. 
<p>
Note that this function is usually called at the time that value of this property, or given child property, is still pending for change.<p>
Sample pseudo-code implementation:<p>
<pre class="fragment"><div>        <span class="keywordtype">void</span> MyProperty::ChildChanged( wxVariant&amp; thisValue, <span class="keywordtype">int</span> childIndex, wxVariant&amp; childValue )<span class="keyword"> const</span>
<span class="keyword">        </span>{
            <span class="comment">// Acquire reference to actual type of data stored in variant</span>
            <span class="comment">// (TFromVariant only exists if wxPropertyGrid's wxVariant-macros were used to create</span>
            <span class="comment">// the variant class).</span>
            T&amp; data = TFromVariant(thisValue);

            <span class="comment">// Copy childValue into data.</span>
            <span class="keywordflow">switch</span> ( childIndex )
            {
                <span class="keywordflow">case</span> 0:
                    data.SetSubProp1( childvalue.GetLong() );
                    <span class="keywordflow">break</span>;
                <span class="keywordflow">case</span> 1:
                    data.SetSubProp2( childvalue.GetString() );
                    <span class="keywordflow">break</span>;
                ...
            }
        }
</div></pre><p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>thisValue</em>&nbsp;</td><td>Value of this property, that should be altered. </td></tr>
    <tr><td valign=top><em>childIndex</em>&nbsp;</td><td>Index of child changed (you can use Item(childIndex) to get). </td></tr>
    <tr><td valign=top><em>childValue</em>&nbsp;</td><td>Value of the child property. </td></tr>
  </table>
</dl>

<p>
Implemented in <a class="el" href="classwxPGRootProperty.htm#wxPGRootPropertya8">wxPGRootProperty</a>, and <a class="el" href="classwxPropertyCategory.htm#wxPropertyCategorya9">wxPropertyCategory</a>.    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya12" doxytag="wxPGPropertyWithChildren::DeleteChoice" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPGProperty::DeleteChoice </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>index</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Removes entry from property's <a class="el" href="classwxPGChoices.htm">wxPGChoices</a> and editor control (if it is active). 
<p>
If selected item is deleted, then the value is set to unspecified.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya13" doxytag="wxPGPropertyWithChildren::DoGetAttribute" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual wxVariant wxPGProperty::DoGetAttribute </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxString &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>name</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [virtual, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns value of an attribute. 
<p>
Override if custom habdling of attributes is needed.<p>
Default implementation simply return NULL variant.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya14" doxytag="wxPGPropertyWithChildren::DoGetEditorClass" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a>* wxPGProperty::DoGetEditorClass </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [virtual, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns pointer to an instance of editor class. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya15" doxytag="wxPGPropertyWithChildren::DoGetValidator" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual wxValidator* wxPGProperty::DoGetValidator </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [virtual, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns pointer to the wxValidator that should be used with the editor of this property (NULL for no validator). 
<p>
Setting validator explicitly via SetPropertyValidator will override this.<p>
In most situations, code like this should work well (macros are used to maintain one actual validator instance, so on the second call the function exits within the first macro):<p>
<pre class="fragment"><div>        wxValidator* wxMyPropertyClass::DoGetValidator ()<span class="keyword"> const</span>
<span class="keyword">        </span>{
            WX_PG_DOGETVALIDATOR_ENTRY()

            wxMyValidator* validator = <span class="keyword">new</span> wxMyValidator(...);

            ... prepare validator...

            WX_PG_DOGETVALIDATOR_EXIT(validator)
        }
</div></pre><p>
<dl compact><dt><b>Remarks:</b></dt><dd>You can get common filename validator by returning wxFileProperty::GetClassValidator(). wxDirProperty, for example, uses it. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya16" doxytag="wxPGPropertyWithChildren::DoGetValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual wxVariant wxPGProperty::DoGetValue </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, virtual, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Override this to return something else than m_value as the value. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya17" doxytag="wxPGPropertyWithChildren::DoSetAttribute" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual bool wxPGProperty::DoSetAttribute </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>name</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxVariant &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Special handling for attributes of this property. 
<p>
If returns false, then the attribute will be automatically stored in m_attributes.<p>
Default implementation simply returns false.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya19" doxytag="wxPGPropertyWithChildren::Empty" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPGPropertyWithChildren::Empty </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Deletes all sub-properties. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya20" doxytag="wxPGPropertyWithChildren::EnsureDataExt" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPGProperty::EnsureDataExt </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
If property did not have data extension, one is created now (returns true in that case). 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya23" doxytag="wxPGPropertyWithChildren::GetAttribute" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> long wxPGProperty::GetAttribute </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>name</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>long&nbsp;</td>
          <td class="mdname" nowrap> <em>defVal</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns named attribute, as long, if found. 
<p>
Otherwise defVal is returned.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya24" doxytag="wxPGPropertyWithChildren::GetAttribute" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxString wxPGProperty::GetAttribute </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>name</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>defVal</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns named attribute, as string, if found. 
<p>
Otherwise defVal is returned.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya26" doxytag="wxPGPropertyWithChildren::GetAttributes" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> const <a class="el" href="classwxPGAttributeStorage.htm">wxPGAttributeStorage</a>&amp; wxPGProperty::GetAttributes </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns comma-delimited string of property attributes. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya27" doxytag="wxPGPropertyWithChildren::GetAttributesAsList" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxVariant wxPGProperty::GetAttributesAsList </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns m_attributes as list wxVariant. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya28" doxytag="wxPGPropertyWithChildren::GetBaseName" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> const wxString&amp; wxPGProperty::GetBaseName </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns property's base name (ie. 
<p>
parent's name is not added in any case)     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya30" doxytag="wxPGPropertyWithChildren::GetCellRenderer" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual <a class="el" href="classwxPGCellRenderer.htm">wxPGCellRenderer</a>* wxPGProperty::GetCellRenderer </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>column</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [virtual, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns used <a class="el" href="classwxPGCellRenderer.htm">wxPGCellRenderer</a> instance for given property column (label=0, value=1). 
<p>
Default implementation returns editor's renderer for all columns.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya31" doxytag="wxPGPropertyWithChildren::GetChildCount" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> size_t wxPGProperty::GetChildCount </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns number of children (always 0 for normal properties). 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya32" doxytag="wxPGPropertyWithChildren::GetChildrenHeight" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int wxPGPropertyWithChildren::GetChildrenHeight </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname" nowrap> <em>lh</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>iMax</em> = -1</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"> const</td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns height of children, recursively, and by taking expanded/collapsed status into account. 
<p>
iMax is used when finding property y-positions.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya34" doxytag="wxPGPropertyWithChildren::GetChoiceInfo" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual int wxPGProperty::GetChoiceInfo </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxPGChoiceInfo *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>choiceinfo</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [virtual, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns current value's index to the choice control. 
<p>
May also return, through pointer arguments, strings that should be inserted to that control. Irrelevant to classes which do not employ wxPG_EDITOR(Choice) or similar. <dl compact><dt><b>Remarks:</b></dt><dd><ul>
<li>If returns NULL in choices, then this class must be derived from wxBaseEnumProperty.</li><li>Must not crash even if property's set of choices is uninitialized (i.e. it points to wxPGGlobalVars-&gt;m_emptyConstants). </li></ul>
</dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya40" doxytag="wxPGPropertyWithChildren::GetColumnEditor" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a>* wxPGProperty::GetColumnEditor </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>column</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns editor used for given column. 
<p>
NULL for no editor.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya41" doxytag="wxPGPropertyWithChildren::GetCommonValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int wxPGProperty::GetCommonValue </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns common value selected for this property. 
<p>
-1 for none.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya42" doxytag="wxPGPropertyWithChildren::GetCount" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> size_t wxPGPropertyWithChildren::GetCount </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns number of sub-properties. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya44" doxytag="wxPGPropertyWithChildren::GetDataExt" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGPropertyDataExt.htm">wxPGPropertyDataExt</a>* wxPGProperty::GetDataExt </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns property's data extension (NULL if none). 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya47" doxytag="wxPGPropertyWithChildren::GetDisplayedCommonValueCount" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int wxPGProperty::GetDisplayedCommonValueCount </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return number of displayed common values for this property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya50" doxytag="wxPGPropertyWithChildren::GetEditorDialog" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual <a class="el" href="classwxPGEditorDialogAdapter.htm">wxPGEditorDialogAdapter</a>* wxPGProperty::GetEditorDialog </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [virtual, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns instance of a new <a class="el" href="classwxPGEditorDialogAdapter.htm">wxPGEditorDialogAdapter</a> instance, which is used when user presses the (optional) button next to the editor control;. 
<p>
Default implementation returns NULL (ie. no action is generated when button is pressed).     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya52" doxytag="wxPGPropertyWithChildren::GetFlagsAsString" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxString wxPGProperty::GetFlagsAsString </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">FlagType&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>flagsMask</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Gets flags as a'|' delimited string. 
<p>
Note that flag names are not prepended with 'wxPG_PROP_'. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>flagsMask</em>&nbsp;</td><td>String will only be made to include flags combined by this parameter. </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya53" doxytag="wxPGPropertyWithChildren::GetFullName" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxString wxPGProperty::GetFullName </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns property's name with all parents. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya54" doxytag="wxPGPropertyWithChildren::GetGrid" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a>* wxPGProperty::GetGrid </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns property grid where property lies. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya55" doxytag="wxPGPropertyWithChildren::GetGridIfDisplayed" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a>* wxPGProperty::GetGridIfDisplayed </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns owner <a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a>, but only if one is currently on a page displaying this property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya57" doxytag="wxPGPropertyWithChildren::GetId" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGProperty.htm">wxPGId</a> wxPGProperty::GetId </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns property id. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya58" doxytag="wxPGPropertyWithChildren::GetImageSize" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual wxSize wxPGProperty::GetImageSize </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [virtual, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Deprecated, overriding this will cause run-time assertion failure. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya59" doxytag="wxPGPropertyWithChildren::GetIndexInParent" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> unsigned int wxPGProperty::GetIndexInParent </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns position in parent's array. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya61" doxytag="wxPGPropertyWithChildren::GetLabel" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> const wxString&amp; wxPGProperty::GetLabel </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns property's label. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya62" doxytag="wxPGPropertyWithChildren::GetLastVisibleSubItem" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> const <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPGProperty::GetLastVisibleSubItem </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns last visible sub-property, recursively. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya63" doxytag="wxPGPropertyWithChildren::GetMainParent" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPGProperty::GetMainParent </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns highest level non-category, non-root parent. 
<p>
Useful when you have nested wxCustomProperties/wxParentProperties. <dl compact><dt><b>Remarks:</b></dt><dd>Thus, if immediate parent is root or category, this will return the property itself. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya65" doxytag="wxPGPropertyWithChildren::GetName" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> const wxString&amp; wxPGProperty::GetName </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns property's name. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya66" doxytag="wxPGPropertyWithChildren::GetParent" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGPropertyWithChildren.htm">wxPGPropertyWithChildren</a>* wxPGProperty::GetParent </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return parent of property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya67" doxytag="wxPGPropertyWithChildren::GetParentingType" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> signed char wxPGProperty::GetParentingType </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns 0 for normal items. 
<p>
1 for categories, -1 for other properties with children, -2 for wxCustomProperty (mostly like -1 ones but with few expections). <dl compact><dt><b>Remarks:</b></dt><dd>Should not be overridden by new custom properties. Usually only used internally. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya68" doxytag="wxPGPropertyWithChildren::GetParentState" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a>* wxPGPropertyWithChildren::GetParentState </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns <a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a> to which this property belongs. 
<p>

<p>
Reimplemented from <a class="el" href="classwxPGProperty.htm#wxPGPropertya57">wxPGProperty</a>.    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya69" doxytag="wxPGPropertyWithChildren::GetPropertyByName" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPGPropertyWithChildren::GetPropertyByName </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxString &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>name</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const</td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns (direct) child property with given name (or NULL if not found). 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya72" doxytag="wxPGPropertyWithChildren::GetType" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxString wxPGProperty::GetType </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns type name of property that is compatible with CreatePropertyByType. 
<p>
and wxVariant::GetType.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya73" doxytag="wxPGPropertyWithChildren::GetValidator" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxValidator* wxPGProperty::GetValidator </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Gets assignable version of property's validator. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPGRootPropertya73" doxytag="wxPGPropertyWithChildren::GetValueAsString" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual wxString wxPGPropertyWithChildren::GetValueAsString </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>argFlags</em> = 0          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Advanced variant of <a class="el" href="classwxPGPropertyWithChildren.htm#wxPGRootPropertya73">GetValueAsString()</a> that forms a string that contains sequence of text representations of sub-properties. 
<p>

<p>
Reimplemented from <a class="el" href="classwxPGProperty.htm#wxPGPropertya62">wxPGProperty</a>.
<p>
Reimplemented in <a class="el" href="classwxPropertyCategory.htm#wxPropertyCategorya76">wxPropertyCategory</a>.    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya77" doxytag="wxPGPropertyWithChildren::GetValueAsVariant" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxVariant wxPGProperty::GetValueAsVariant </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns value as wxVariant. 
<p>
DEPRECATED: Use GetValue() instead.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya80" doxytag="wxPGPropertyWithChildren::GetValueRef" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxVariant&amp; wxPGProperty::GetValueRef </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns reference to the internal stored value. 
<p>
GetValue is preferred way to get the actual value, since GetValueRef ignores DoGetValue, which may override stored value.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya81" doxytag="wxPGPropertyWithChildren::GetValueString" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxString wxPGProperty::GetValueString </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>argFlags</em> = 0          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Same as GetValueAsString, except takes common value into account. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya82" doxytag="wxPGPropertyWithChildren::GetY" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int wxPGProperty::GetY </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns coordinate to the top y of the property. 
<p>
Note that the position of scrollbars is not taken into account.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya84" doxytag="wxPGPropertyWithChildren::Hide" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPGProperty::Hide </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">bool&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>hide</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Hides or reveals the property. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>hide</em>&nbsp;</td><td>true for hide, false for reveal. </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya85" doxytag="wxPGPropertyWithChildren::Index" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int wxPGPropertyWithChildren::Index </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>p</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns index of given sub-property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya86" doxytag="wxPGPropertyWithChildren::InsertChoice" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int wxPGProperty::InsertChoice </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>label</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>index</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em> = INT_MAX</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Adds entry to property's <a class="el" href="classwxPGChoices.htm">wxPGChoices</a> and editor control (if it is active). 
<p>
Returns index of item added.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya87" doxytag="wxPGPropertyWithChildren::IntToValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual bool wxPGProperty::IntToValue </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxVariant &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>number</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>argFlags</em> = 0</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"> const<code> [virtual, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Converts 'number' (including choice selection) into proper value 'variant'. 
<p>
Returns true if new (different than m_value) value could be interpreted from the integer. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>argFlags</em>&nbsp;</td><td>If wxPG_FULL_VALUE is set, returns complete, storable value instead of displayable </td></tr>
  </table>
</dl>
<dl compact><dt><b>Remarks:</b></dt><dd><ul>
<li>Default implementation may work correctly if used value type is int.</li><li>If property is not supposed to use choice or spinctrl or other editor with int-based value, it is not necessary to implement this method.</li><li>If property uses choice control, and displays a dialog on some choice items, then it is preferred to display that dialog in IntToValue instead of OnEvent. </li></ul>
</dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya88" doxytag="wxPGPropertyWithChildren::IsCategory" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPGProperty::IsCategory </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns true if this property is actually a <a class="el" href="classwxPropertyCategory.htm">wxPropertyCategory</a>. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya90" doxytag="wxPGPropertyWithChildren::IsExpanded" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPGPropertyWithChildren::IsExpanded </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Redefined here to reduce code size. 
<p>

<p>
Reimplemented from <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>.    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya93" doxytag="wxPGPropertyWithChildren::IsSubProperty" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPGProperty::IsSubProperty </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns true if this is a sub-property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya96" doxytag="wxPGPropertyWithChildren::IsVisible" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPGProperty::IsVisible </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns true if all parents expanded. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya97" doxytag="wxPGPropertyWithChildren::Item" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPGPropertyWithChildren::Item </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">size_t&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>i</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns sub-property at index i. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya98" doxytag="wxPGPropertyWithChildren::Last" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPGPropertyWithChildren::Last </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns last sub-property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya99" doxytag="wxPGPropertyWithChildren::OnCustomPaint" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void wxPGProperty::OnCustomPaint </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxDC &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>dc</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxRect &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>rect</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="structwxPGPaintData.htm">wxPGPaintData</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>paintdata</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Override to paint an image in front of the property value text or drop-down list item (but only if <a class="el" href="classwxPGProperty.htm#wxPropertyCategorya101">wxPGProperty::OnMeasureImage</a> is overridden as well). 
<p>
If property's <a class="el" href="classwxPGProperty.htm#wxPropertyCategorya101">OnMeasureImage()</a> returns size that has height != 0 but less than row height ( &lt; 0 has special meanings), <a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> calls this method to draw a custom image in a limited area in front of the editor control or value text/graphics, and if control has drop-down list, then the image is drawn there as well (even in the case <a class="el" href="classwxPGProperty.htm#wxPropertyCategorya101">OnMeasureImage()</a> returned higher height than row height).<p>
NOTE: Following applies when <a class="el" href="classwxPGProperty.htm#wxPropertyCategorya101">OnMeasureImage()</a> returns a "flexible" height ( using wxPG_FLEXIBLE_SIZE(W,H) macro), which implies variable height items: If rect.x is &lt; 0, then this is a measure item call, which means that dc is invalid and only thing that should be done is to set paintdata.m_drawnHeight to the height of the image of item at index paintdata.m_choiceItem. This call may be done even as often as once every drop-down popup show.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>dc</em>&nbsp;</td><td>wxDC to paint on. </td></tr>
    <tr><td valign=top><em>rect</em>&nbsp;</td><td>Box reserved for custom graphics. Includes surrounding rectangle, if any. If x is &lt; 0, then this is a measure item call (see above). </td></tr>
    <tr><td valign=top><em>paintdata</em>&nbsp;</td><td><a class="el" href="structwxPGPaintData.htm">wxPGPaintData</a> structure with much useful data.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Remarks:</b></dt><dd><ul>
<li>You can actually exceed rect width, but if you do so then paintdata.m_drawnWidth must be set to the full width drawn in pixels.</li><li>Due to technical reasons, rect's height will be default even if custom height was reported during measure call.</li><li>Brush is guaranteed to be default background colour. It has been already used to clear the background of area being painted. It can be modified.</li><li>Pen is guaranteed to be 1-wide 'black' (or whatever is the proper colour) pen for drawing framing rectangle. It can be changed as well. </li></ul>
</dd></dl>
<dl compact><dt><b>See also:</b></dt><dd><a class="el" href="classwxPGProperty.htm#wxPGPropertya62"></a> </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya100" doxytag="wxPGPropertyWithChildren::OnEvent" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual bool wxPGProperty::OnEvent </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>propgrid</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxWindow *&nbsp;</td>
          <td class="mdname" nowrap> <em>wnd_primary</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxEvent &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>event</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Events received by editor widgets are processed here. 
<p>
Note that editor class usually processes most events. Some, such as button press events of TextCtrlAndButton class, should be handled here. Also, if custom handling for regular events is desired, then that can also be done (for example, wxSystemColourProperty custom handles wxEVT_COMMAND_CHOICE_SELECTED).<p>
If the event causes value to be changed, wxPropertyGrid::ValueChangeInEvent(value) should be used.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>event</em>&nbsp;</td><td>Associated wxEvent. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>Should</em>&nbsp;</td><td>return true if any changes in value should be reported. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Remarks:</b></dt><dd><ul>
<li>If property uses choice control, and displays a dialog on some choice items, then it is preferred to display that dialog in IntToValue instead of OnEvent. </li></ul>
</dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya101" doxytag="wxPGPropertyWithChildren::OnMeasureImage" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual wxSize wxPGProperty::OnMeasureImage </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>item</em> = -1          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [virtual, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns size of the custom painted image in front of property. 
<p>
This method must be overridden to return non-default value if OnCustomPaint is to be called. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>item</em>&nbsp;</td><td>Normally -1, but can be an index to the property's list of items. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Remarks:</b></dt><dd><ul>
<li>Default behaviour is to return wxSize(0,0), which means no image.</li><li>Default image width or height is indicated with dimension -1.</li><li>You can also return wxPG_DEFAULT_IMAGE_SIZE which equals wxSize(-1, -1). </li></ul>
</dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya102" doxytag="wxPGPropertyWithChildren::OnSetValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void wxPGProperty::OnSetValue </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [virtual, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
This virtual function is called after m_value has been validated and set. 
<p>
<dl compact><dt><b>Remarks:</b></dt><dd><ul>
<li>If m_value was set to Null variant (ie. unspecified value), OnSetValue will not be called.</li><li>Default implementation does nothing. </li></ul>
</dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya104" doxytag="wxPGPropertyWithChildren::PrepareValueForDialogEditing" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPGProperty::PrepareValueForDialogEditing </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>propgrid</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Updates property value in case there were last minute changes. 
<p>
If value was unspecified, it will be set to default. Use only for properties that have TextCtrl-based editor. <dl compact><dt><b>Remarks:</b></dt><dd>If you have code similar to <pre class="fragment"><div>            <span class="comment">// Update the value in case of last minute changes</span>
            <span class="keywordflow">if</span> ( primary &amp;&amp; propgrid-&gt;IsEditorsValueModified() )
                 GetEditorClass()-&gt;CopyValueFromControl( <span class="keyword">this</span>, primary );
</div></pre>in <a class="el" href="classwxPGProperty.htm#wxPropertyCategorya100">wxPGProperty::OnEvent</a> wxEVT_COMMAND_BUTTON_CLICKED handler, then replace it with call to this method. </dd></dl>
<dl compact><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>True</em>&nbsp;</td><td>if value changed. </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya105" doxytag="wxPGPropertyWithChildren::RecreateEditor" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPGProperty::RecreateEditor </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
If property's editor is created this forces its recreation. 
<p>
Useful in SetAttribute etc. Returns true if actually did anything.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya106" doxytag="wxPGPropertyWithChildren::RefreshChildren" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void wxPGProperty::RefreshChildren </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [virtual, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Refresh values of child properties. 
<p>
Automatically called after value is set.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya107" doxytag="wxPGPropertyWithChildren::RefreshEditor" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPGProperty::RefreshEditor </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
If property's editor is active, then update it's value. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya108" doxytag="wxPGPropertyWithChildren::SetAttribute" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPGProperty::SetAttribute </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>name</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxVariant&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets an attribute for this property. 
<p>
There are both common attributes and property class specific ones. For list of common attributes, see <a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea132">wxPropertyContainerMethods::SetPropertyAttribute()</a>.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya109" doxytag="wxPGPropertyWithChildren::SetAttributes" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPGProperty::SetAttributes </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="classwxPGAttributeStorage.htm">wxPGAttributeStorage</a> &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>attributes</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets attributes from a comma-delimited string. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya110" doxytag="wxPGPropertyWithChildren::SetCell" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPGProperty::SetCell </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname" nowrap> <em>column</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="classwxPGCell.htm">wxPGCell</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>cellObj</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets cell information for given column. 
<p>
Note that the property takes ownership of given <a class="el" href="classwxPGCell.htm">wxPGCell</a> instance.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya111" doxytag="wxPGPropertyWithChildren::SetChoices" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPGProperty::SetChoices </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxArrayString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>labels</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxArrayInt &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>values</em> = wxArrayInt()</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets new set of choices for property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya112" doxytag="wxPGPropertyWithChildren::SetChoices" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPGProperty::SetChoices </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGChoices.htm">wxPGChoices</a> &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>choices</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets new set of choices for property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya113" doxytag="wxPGPropertyWithChildren::SetChoiceSelection" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPGProperty::SetChoiceSelection </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname" nowrap> <em>newValue</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxPGChoiceInfo &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>choiceInfo</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Changes value of a property with choices, but only works if the value type is long or string. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya114" doxytag="wxPGPropertyWithChildren::SetChoicesExclusive" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPGProperty::SetChoicesExclusive </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
If property has choices and they are not yet exclusive, new such copy of them will be created. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya115" doxytag="wxPGPropertyWithChildren::SetClientData" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPGProperty::SetClientData </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">ClientDataType&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>clientData</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets client data (void*) of a property. 
<p>
<dl compact><dt><b>Remarks:</b></dt><dd>This untyped client data has to be deleted manually. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya116" doxytag="wxPGPropertyWithChildren::SetCommonValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPGProperty::SetCommonValue </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>commonValue</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets common value selected for this property. 
<p>
-1 for none.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya117" doxytag="wxPGPropertyWithChildren::SetEditor" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPGProperty::SetEditor </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxString &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>editorName</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets editor for a property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya118" doxytag="wxPGPropertyWithChildren::SetEditor" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPGProperty::SetEditor </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>editor</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets editor for a property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya121" doxytag="wxPGPropertyWithChildren::SetFlagsFromString" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPGProperty::SetFlagsFromString </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxString &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>str</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets flags from a '|' delimited string. 
<p>
Note that flag names are not prepended with 'wxPG_PROP_'.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya124" doxytag="wxPGPropertyWithChildren::SetMaxLength" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPGProperty::SetMaxLength </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>maxLen</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Set max length of text editor. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya127" doxytag="wxPGPropertyWithChildren::SetValidator" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPGProperty::SetValidator </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxValidator &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>validator</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets wxValidator for a property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya128" doxytag="wxPGPropertyWithChildren::SetValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPGProperty::SetValue </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxVariant&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>value</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Call this to set value of the property. 
<p>
Unlike methods in <a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a>, this does not automatically update the display.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya129" doxytag="wxPGPropertyWithChildren::SetValue0" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPGProperty::SetValue0 </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxVariant &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxVariant *&nbsp;</td>
          <td class="mdname" nowrap> <em>pList</em> = NULL, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>bool&nbsp;</td>
          <td class="mdname" nowrap> <em>refreshEditor</em> = true</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Like SetValue, but can accept value as list of child values (only if wxPG_PROP_AGGREGATE flag is set). 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>pList</em>&nbsp;</td><td>Pointer to list variant that contains child values. Used to indicate which children should be marked as modified. </td></tr>
    <tr><td valign=top><em>refreshEditor</em>&nbsp;</td><td>If true, then editor control is refreshed (if active). </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya130" doxytag="wxPGPropertyWithChildren::SetValueFromInt" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual bool wxPGProperty::SetValueFromInt </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">long&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>flags</em> = 0</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Converts integer to a value, and if succesfull, calls <a class="el" href="classwxPGProperty.htm#wxPropertyCategorya128">SetValue()</a> on it. 
<p>
Default behaviour is to do nothing. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>value</em>&nbsp;</td><td>Int to get the value from. </td></tr>
    <tr><td valign=top><em>flags</em>&nbsp;</td><td>If has wxPG_FULL_VALUE, then the value given is a actual value and not an index. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>true</em>&nbsp;</td><td>if value was changed. </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya131" doxytag="wxPGPropertyWithChildren::SetValueFromString" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual bool wxPGProperty::SetValueFromString </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>text</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>flags</em> = 0</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Converts string to a value, and if succesfull, calls <a class="el" href="classwxPGProperty.htm#wxPropertyCategorya128">SetValue()</a> on it. 
<p>
Default behaviour is to do nothing. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>text</em>&nbsp;</td><td>String to get the value from. </td></tr>
    <tr><td valign=top><em>report_error</em>&nbsp;</td><td>If true, invalid string will be reported (prefer to use wxLogError). </td></tr>
  </table>
</dl>
<dl compact><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>true</em>&nbsp;</td><td>if value was changed. </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya132" doxytag="wxPGPropertyWithChildren::SetValueImage" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPGProperty::SetValueImage </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxBitmap &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>bmp</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Set wxBitmap in front of the value. 
<p>
This bitmap may be ignored by custom cell renderers.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya134" doxytag="wxPGPropertyWithChildren::SetWasModified" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPGProperty::SetWasModified </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">bool&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>set</em> = true          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Call with 'false' in OnSetValue to cancel value changes after all (ie. 
<p>
cancel 'true' returned by <a class="el" href="classwxPGProperty.htm#wxPGPropertya116">StringToValue()</a> or <a class="el" href="classwxPGProperty.htm#wxPropertyCategorya87">IntToValue()</a>).     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya136" doxytag="wxPGPropertyWithChildren::StringToValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual bool wxPGPropertyWithChildren::StringToValue </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxVariant &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>variant</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>text</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>argFlags</em> = 0</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"> const<code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
This overridden version converts comma or semicolon separated tokens into list variant of child values. 
<p>

<p>
Implements <a class="el" href="classwxPGProperty.htm#wxPGPropertya116">wxPGProperty</a>.
<p>
Reimplemented in <a class="el" href="classwxPGRootProperty.htm#wxPGRootPropertya132">wxPGRootProperty</a>.    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya139" doxytag="wxPGPropertyWithChildren::UsesAutoUnspecified" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPGProperty::UsesAutoUnspecified </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns true if containing grid uses wxPG_EX_AUTO_UNSPECIFIED_VALUES. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategorya140" doxytag="wxPGPropertyWithChildren::ValidateValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual bool wxPGProperty::ValidateValue </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxVariant &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>value</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [virtual, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Implement this function in derived class to check and/or convert the value. 
<p>
Return true if it is ok.<p>
Default implementation does nothing except returns true.     </td>
  </tr>
</table>
<hr>The documentation for this class was generated from the following file:<ul>
<li>propgrid.h</ul>
<hr size="1"><address style="align: right;"><small>Generated on Sun Nov 25 16:42:38 2007 for wxPropertyGrid by
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border=0 > 
</a>1.3.6 </small></address>
</body>
</html>
