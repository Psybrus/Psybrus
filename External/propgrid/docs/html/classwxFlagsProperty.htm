<!-- This comment will put IE 6, 7 and 8 in quirks mode -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>wxPropertyGrid: wxFlagsProperty Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javaScript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.6.3 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "search",false,'Search');
--></script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <img id="MSearchSelect" src="search/search.png"
             onmouseover="return searchBox.OnSearchSelectShow()"
             onmouseout="return searchBox.OnSearchSelectHide()"
             alt=""/>
        <input type="text" id="MSearchField" value="Search" accesskey="S"
             onfocus="searchBox.OnSearchFieldFocus(true)" 
             onblur="searchBox.OnSearchFieldFocus(false)" 
             onkeyup="searchBox.OnSearchFieldChange(event)"/>
        <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
        </div>
      </li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.htm"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>wxFlagsProperty Class Reference</h1><!-- doxytag: class="wxFlagsProperty" --><!-- doxytag: inherits="wxPGProperty" -->
<p>Represents a bit set that fits in a long integer.  
<a href="#_details">More...</a></p>

<p><code>#include &lt;props.h&gt;</code></p>
<div class="dynheader">
Inheritance diagram for wxFlagsProperty:</div>
<div class="dynsection">
 <div class="center">
  <img src="classwxFlagsProperty.png" usemap="#wxFlagsProperty_map" alt=""/>
  <map id="wxFlagsProperty_map" name="wxFlagsProperty_map">
<area href="classwxPGProperty.htm" alt="wxPGProperty" shape="rect" coords="0,0,107,24"/>
</map>
 </div>
</div>

<p><a href="classwxFlagsProperty-members.htm">List of all members.</a></p>
<table border="0" cellpadding="0" cellspacing="0">
<tr><td colspan="2"><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxFlagsProperty.htm#aa307a2f9cb827c82cb1e9b927a966138">ChildChanged</a> (wxVariant &amp;thisValue, int childIndex, wxVariant &amp;childValue) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Called after value of a child property has been altered.  <a href="#aa307a2f9cb827c82cb1e9b927a966138"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxFlagsProperty.htm#a9a30ea7560122b1f096e145d34264aea">GetChoiceInfo</a> (<a class="el" href="structwxPGChoiceInfo.htm">wxPGChoiceInfo</a> *choiceinfo)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns current value's index to the choice control.  <a href="#a9a30ea7560122b1f096e145d34264aea"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad1f7cb5e89cbf5f0706929f64d841911"></a><!-- doxytag: member="wxFlagsProperty::GetItemCount" ref="ad1f7cb5e89cbf5f0706929f64d841911" args="() const " -->
size_t&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetItemCount</b> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af4c6230c8dfda39c11bb495d934cc9f7"></a><!-- doxytag: member="wxFlagsProperty::GetLabel" ref="af4c6230c8dfda39c11bb495d934cc9f7" args="(size_t ind) const " -->
const wxString &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetLabel</b> (size_t ind) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual wxString&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxFlagsProperty.htm#a2bb759850558ea0385079dbb14a06fca">GetValueAsString</a> (int argFlags) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns text representation of property's value.  <a href="#a2bb759850558ea0385079dbb14a06fca"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxFlagsProperty.htm#ae3b98011acae0b0117a4fedd836af664">OnSetValue</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This virtual function is called after m_value has been set.  <a href="#ae3b98011acae0b0117a4fedd836af664"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxFlagsProperty.htm#ac818a4f52f5df809d22a2e213b497215">RefreshChildren</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Refresh values of child properties.  <a href="#ac818a4f52f5df809d22a2e213b497215"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxFlagsProperty.htm#a249ef74160eb1b0688e33a0e9faffd98">StringToValue</a> (wxVariant &amp;variant, const wxString &amp;text, int flags) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Converts 'text' into proper value 'variant'.  <a href="#a249ef74160eb1b0688e33a0e9faffd98"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac547774fea3b601430de3e7bacdf06d0"></a><!-- doxytag: member="wxFlagsProperty::wxFlagsProperty" ref="ac547774fea3b601430de3e7bacdf06d0" args="(const wxString &amp;label=wxPG_LABEL, const wxString &amp;name=wxPG_LABEL, const wxArrayString &amp;labels=wxArrayString(), const wxArrayInt &amp;values=wxArrayInt(), int value=0)" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><b>wxFlagsProperty</b> (const wxString &amp;label=wxPG_LABEL, const wxString &amp;name=wxPG_LABEL, const wxArrayString &amp;labels=wxArrayString(), const wxArrayInt &amp;values=wxArrayInt(), int value=0)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a65cb41eac457406ed1a9c1649b2cb279"></a><!-- doxytag: member="wxFlagsProperty::wxFlagsProperty" ref="a65cb41eac457406ed1a9c1649b2cb279" args="(const wxString &amp;label, const wxString &amp;name, wxPGChoices &amp;choices, long value=0)" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><b>wxFlagsProperty</b> (const wxString &amp;label, const wxString &amp;name, <a class="el" href="classwxPGChoices.htm">wxPGChoices</a> &amp;choices, long value=0)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a839c785a773adddd64c8676ea4201dd9"></a><!-- doxytag: member="wxFlagsProperty::wxFlagsProperty" ref="a839c785a773adddd64c8676ea4201dd9" args="(const wxString &amp;label, const wxString &amp;name, const wxChar **labels, const long *values=NULL, long value=0)" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><b>wxFlagsProperty</b> (const wxString &amp;label, const wxString &amp;name, const wxChar **labels, const long *values=NULL, long value=0)</td></tr>
<tr><td colspan="2"><h2>Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af4265f05292dff5a9a30cd828d9afb78"></a><!-- doxytag: member="wxFlagsProperty::IdToBit" ref="af4265f05292dff5a9a30cd828d9afb78" args="(const wxString &amp;id) const " -->
long&nbsp;</td><td class="memItemRight" valign="bottom"><b>IdToBit</b> (const wxString &amp;id) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="adc80c9a814137e9e0e6b17d9ef7768da"></a><!-- doxytag: member="wxFlagsProperty::Init" ref="adc80c9a814137e9e0e6b17d9ef7768da" args="()" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>Init</b> ()</td></tr>
<tr><td colspan="2"><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="abac31dbfd47bf8ca1e313c9cca1590f1"></a><!-- doxytag: member="wxFlagsProperty::m_choices" ref="abac31dbfd47bf8ca1e313c9cca1590f1" args="" -->
<a class="el" href="classwxPGChoices.htm">wxPGChoices</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_choices</b></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2e2e4f0157de84832090fde06d0bdb87"></a><!-- doxytag: member="wxFlagsProperty::m_oldChoicesData" ref="a2e2e4f0157de84832090fde06d0bdb87" args="" -->
<a class="el" href="classwxPGChoicesData.htm">wxPGChoicesData</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_oldChoicesData</b></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a720668d400b86246654b75b340cae509"></a><!-- doxytag: member="wxFlagsProperty::m_oldValue" ref="a720668d400b86246654b75b340cae509" args="" -->
long&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_oldValue</b></td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>Represents a bit set that fits in a long integer. </p>
<p><a class="el" href="classwxBoolProperty.htm" title="Basic property with boolean value.">wxBoolProperty</a> sub-properties are created for editing individual bits. Textctrl is created to manually edit the flags as a text; a continous sequence of spaces, commas and semicolons is considered as a flag id separator. <b>Note:</b> When changing "choices" (ie. flag labels) of <a class="el" href="classwxFlagsProperty.htm" title="Represents a bit set that fits in a long integer.">wxFlagsProperty</a>, you will need to use SetPropertyChoices - otherwise they will not get updated properly. </p>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="aa307a2f9cb827c82cb1e9b927a966138"></a><!-- doxytag: member="wxFlagsProperty::ChildChanged" ref="aa307a2f9cb827c82cb1e9b927a966138" args="(wxVariant &amp;thisValue, int childIndex, wxVariant &amp;childValue) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void wxFlagsProperty::ChildChanged </td>
          <td>(</td>
          <td class="paramtype">wxVariant &amp;&nbsp;</td>
          <td class="paramname"> <em>thisValue</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>childIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxVariant &amp;&nbsp;</td>
          <td class="paramname"> <em>childValue</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Called after value of a child property has been altered. </p>
<p>Note that this function is usually called at the time that value of this property, or given child property, is still pending for change.</p>
<p>Sample pseudo-code implementation:</p>
<div class="fragment"><pre class="fragment">        <span class="keywordtype">void</span> <a class="code" href="classwxFlagsProperty.htm#aa307a2f9cb827c82cb1e9b927a966138" title="Called after value of a child property has been altered.">MyProperty::ChildChanged</a>( wxVariant&amp; thisValue, <span class="keywordtype">int</span> childIndex, wxVariant&amp; childValue )<span class="keyword"> const</span>
<span class="keyword">        </span>{
            <span class="comment">// Acquire reference to actual type of data stored in variant</span>
            <span class="comment">// (TFromVariant only exists if wxPropertyGrid&#39;s wxVariant-macros were used to create</span>
            <span class="comment">// the variant class).</span>
            T&amp; data = TFromVariant(thisValue);

            <span class="comment">// Copy childValue into data.</span>
            <span class="keywordflow">switch</span> ( childIndex )
            {
                <span class="keywordflow">case</span> 0:
                    data.SetSubProp1( childvalue.GetLong() );
                    <span class="keywordflow">break</span>;
                <span class="keywordflow">case</span> 1:
                    data.SetSubProp2( childvalue.GetString() );
                    <span class="keywordflow">break</span>;
                ...
            }
        }
</pre></div><dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>thisValue</em>&nbsp;</td><td>Value of this property, that should be altered. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>childIndex</em>&nbsp;</td><td>Index of child changed (you can use Item(childIndex) to get). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>childValue</em>&nbsp;</td><td>Value of the child property. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classwxPGProperty.htm#ace7a9dc69fdf8185cff04c1604cb4fbd">wxPGProperty</a>.</p>

</div>
</div>
<a class="anchor" id="a9a30ea7560122b1f096e145d34264aea"></a><!-- doxytag: member="wxFlagsProperty::GetChoiceInfo" ref="a9a30ea7560122b1f096e145d34264aea" args="(wxPGChoiceInfo *choiceinfo)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual int wxFlagsProperty::GetChoiceInfo </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structwxPGChoiceInfo.htm">wxPGChoiceInfo</a> *&nbsp;</td>
          <td class="paramname"> <em>choiceinfo</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns current value's index to the choice control. </p>
<p>May also return, through pointer arguments, strings that should be inserted to that control. Irrelevant to classes which do not employ wxPG_EDITOR(Choice) or similar. </p>
<dl class="remark"><dt><b>Remarks:</b></dt><dd><ul>
<li>If returns NULL in choices, then this class must be derived from <a class="el" href="classwxBaseEnumProperty.htm" title="Derive dynamic custom properties with choices from this class.">wxBaseEnumProperty</a>.</li>
<li>Must not crash even if property's set of choices is uninitialized (i.e. it points to wxPGGlobalVars-&gt;m_emptyConstants). </li>
</ul>
</dd></dl>

<p>Reimplemented from <a class="el" href="classwxPGProperty.htm#a805b98f7d147782079bb9a48915a949f">wxPGProperty</a>.</p>

</div>
</div>
<a class="anchor" id="a2bb759850558ea0385079dbb14a06fca"></a><!-- doxytag: member="wxFlagsProperty::GetValueAsString" ref="a2bb759850558ea0385079dbb14a06fca" args="(int argFlags) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual wxString wxFlagsProperty::GetValueAsString </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>argFlags</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns text representation of property's value. </p>
<p>Generally this function should not be called from the application code. Instead, call <a class="el" href="classwxPGProperty.htm#a9133d43d6e539e2814ed28d2f37d953e" title="Same as GetValueAsString, except takes common value into account.">GetValueString()</a>.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>argFlags</em>&nbsp;</td><td>If wxPG_FULL_VALUE is set, returns complete, storable string value instead of displayable. If wxPG_EDITABLE_VALUE is set, returns string value that must be editable in textctrl. If wxPG_COMPOSITE_FRAGMENT is set, returns text that is appropriate to display as a part of composite property string value.</td></tr>
  </table>
  </dd>
</dl>
<dl class="remark"><dt><b>Remarks:</b></dt><dd><ul>
<li>Default implementation returns string composed from text representations of child properties.</li>
<li>Implementations are never called with m_value being null variant (ie. unspecified value), so you don't need to check for that. Naturally this means that unspecified value is always displayed as an empty string.</li>
</ul>
</dd></dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="classwxPGProperty.htm#a9133d43d6e539e2814ed28d2f37d953e" title="Same as GetValueAsString, except takes common value into account.">GetValueString()</a> </dd></dl>

<p>Reimplemented from <a class="el" href="classwxPGProperty.htm#a29f70a60e4844efbebc140270e1a4358">wxPGProperty</a>.</p>

</div>
</div>
<a class="anchor" id="ae3b98011acae0b0117a4fedd836af664"></a><!-- doxytag: member="wxFlagsProperty::OnSetValue" ref="ae3b98011acae0b0117a4fedd836af664" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void wxFlagsProperty::OnSetValue </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This virtual function is called after m_value has been set. </p>
<dl class="remark"><dt><b>Remarks:</b></dt><dd><ul>
<li>If m_value was set to Null variant (ie. unspecified value), <a class="el" href="classwxFlagsProperty.htm#ae3b98011acae0b0117a4fedd836af664" title="This virtual function is called after m_value has been set.">OnSetValue()</a> will not be called.</li>
<li>m_value may be of any variant type. Typically properties internally support only one variant type, and as such <a class="el" href="classwxFlagsProperty.htm#ae3b98011acae0b0117a4fedd836af664" title="This virtual function is called after m_value has been set.">OnSetValue()</a> provides a good opportunity to convert supported values into internal type.</li>
<li>Default implementation does nothing. </li>
</ul>
</dd></dl>

<p>Reimplemented from <a class="el" href="classwxPGProperty.htm#ae5c4f47d3ff609d19346b994a9a25acb">wxPGProperty</a>.</p>

</div>
</div>
<a class="anchor" id="ac818a4f52f5df809d22a2e213b497215"></a><!-- doxytag: member="wxFlagsProperty::RefreshChildren" ref="ac818a4f52f5df809d22a2e213b497215" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void wxFlagsProperty::RefreshChildren </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Refresh values of child properties. </p>
<p>Automatically called after value is set. </p>

<p>Reimplemented from <a class="el" href="classwxPGProperty.htm#a167afcb85ed4d527e34567e32a0cc714">wxPGProperty</a>.</p>

</div>
</div>
<a class="anchor" id="a249ef74160eb1b0688e33a0e9faffd98"></a><!-- doxytag: member="wxFlagsProperty::StringToValue" ref="a249ef74160eb1b0688e33a0e9faffd98" args="(wxVariant &amp;variant, const wxString &amp;text, int flags) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool wxFlagsProperty::StringToValue </td>
          <td>(</td>
          <td class="paramtype">wxVariant &amp;&nbsp;</td>
          <td class="paramname"> <em>variant</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>text</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>argFlags</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Converts 'text' into proper value 'variant'. </p>
<p>Returns true if new (different than m_value) value could be interpreted from the text. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>argFlags</em>&nbsp;</td><td>If wxPG_FULL_VALUE is set, returns complete, storable value instead of displayable one (they may be different). If wxPG_COMPOSITE_FRAGMENT is set, text is interpreted as a part of composite property string value (as generated by <a class="el" href="classwxFlagsProperty.htm#a2bb759850558ea0385079dbb14a06fca" title="Returns text representation of property&#39;s value.">GetValueAsString()</a> called with this same flag).</td></tr>
  </table>
  </dd>
</dl>
<dl class="remark"><dt><b>Remarks:</b></dt><dd><ul>
<li>Default implementation converts semicolon delimited tokens into child values. Only works for properties with children.</li>
<li>You might want to take into account that m_value is Null variant if property value is unspecified (which is usually only case if you explicitly enabled that sort behavior). </li>
</ul>
</dd></dl>

<p>Reimplemented from <a class="el" href="classwxPGProperty.htm#a974a9b01c1f88cf4db630b6895453db8">wxPGProperty</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>props.h</li>
</ul>
</div>
<!--- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&nbsp;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&nbsp;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&nbsp;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&nbsp;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&nbsp;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&nbsp;</span>Enumerator</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<hr class="footer"/><address style="text-align: right;"><small>Generated on Sun Feb 27 10:25:59 2011 for wxPropertyGrid by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.3 </small></address>
</body>
</html>
