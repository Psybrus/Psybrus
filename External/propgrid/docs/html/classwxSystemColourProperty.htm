<!-- This comment will put IE 6, 7 and 8 in quirks mode -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>wxPropertyGrid: wxSystemColourProperty Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javaScript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.6.3 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "search",false,'Search');
--></script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <img id="MSearchSelect" src="search/search.png"
             onmouseover="return searchBox.OnSearchSelectShow()"
             onmouseout="return searchBox.OnSearchSelectHide()"
             alt=""/>
        <input type="text" id="MSearchField" value="Search" accesskey="S"
             onfocus="searchBox.OnSearchFieldFocus(true)" 
             onblur="searchBox.OnSearchFieldFocus(false)" 
             onkeyup="searchBox.OnSearchFieldChange(event)"/>
        <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
        </div>
      </li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.htm"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>wxSystemColourProperty Class Reference</h1><!-- doxytag: class="wxSystemColourProperty" --><!-- doxytag: inherits="wxEnumProperty" -->
<p>Has dropdown list of wxWidgets system colours.  
<a href="#_details">More...</a></p>

<p><code>#include &lt;advprops.h&gt;</code></p>
<div class="dynheader">
Inheritance diagram for wxSystemColourProperty:</div>
<div class="dynsection">
 <div class="center">
  <img src="classwxSystemColourProperty.png" usemap="#wxSystemColourProperty_map" alt=""/>
  <map id="wxSystemColourProperty_map" name="wxSystemColourProperty_map">
<area href="classwxEnumProperty.htm" alt="wxEnumProperty" shape="rect" coords="0,112,154,136"/>
<area href="classwxBaseEnumProperty.htm" alt="wxBaseEnumProperty" shape="rect" coords="0,56,154,80"/>
<area href="classwxPGProperty.htm" alt="wxPGProperty" shape="rect" coords="0,0,154,24"/>
</map>
 </div>
</div>

<p><a href="classwxSystemColourProperty-members.htm">List of all members.</a></p>
<table border="0" cellpadding="0" cellspacing="0">
<tr><td colspan="2"><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6e71b47f3ab9b9393b840f472ee272ca"></a><!-- doxytag: member="wxSystemColourProperty::ColourToString" ref="a6e71b47f3ab9b9393b840f472ee272ca" args="(const wxColour &amp;col, int index) const " -->
virtual wxString&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxSystemColourProperty.htm#a6e71b47f3ab9b9393b840f472ee272ca">ColourToString</a> (const wxColour &amp;col, int index) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Override in derived class to customize how colours are printed as strings. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxSystemColourProperty.htm#ae94861630099e15274e7fb73c6acbeec">DoSetAttribute</a> (const wxString &amp;name, wxVariant &amp;value)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Special handling for attributes of this property.  <a href="#ae94861630099e15274e7fb73c6acbeec"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual wxColour&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxSystemColourProperty.htm#ae5bc6d37153b260d99f790867df6e088">GetColour</a> (int index) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Default is to use wxSystemSettings::GetColour(index).  <a href="#ae5bc6d37153b260d99f790867df6e088"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af462285f69372e4f8408963e826d691f"></a><!-- doxytag: member="wxSystemColourProperty::GetCustomColourIndex" ref="af462285f69372e4f8408963e826d691f" args="() const " -->
virtual int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxSystemColourProperty.htm#af462285f69372e4f8408963e826d691f">GetCustomColourIndex</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns index of entry that triggers colour picker dialog (default is last). <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="afc9a61f3d488e26af36b83590c7f95f1"></a><!-- doxytag: member="wxSystemColourProperty::GetVal" ref="afc9a61f3d488e26af36b83590c7f95f1" args="(const wxVariant *pVariant=NULL) const " -->
<a class="el" href="classwxColourPropertyValue.htm">wxColourPropertyValue</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetVal</b> (const wxVariant *pVariant=NULL) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual wxString&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxSystemColourProperty.htm#a92e1bbcbd610ee118cb7ca1e4c3bdd83">GetValueAsString</a> (int argFlags=0) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns text representation of property's value.  <a href="#a92e1bbcbd610ee118cb7ca1e4c3bdd83"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxSystemColourProperty.htm#aacd92d2ddffdf36c05f6726b749f9e32">IntToValue</a> (wxVariant &amp;variant, int number, int argFlags=0) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Converts 'number' (including choice selection) into proper value 'variant'.  <a href="#aacd92d2ddffdf36c05f6726b749f9e32"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxSystemColourProperty.htm#a9951df68b356ad59a51f3cf8910c88fc">OnCustomPaint</a> (wxDC &amp;dc, const wxRect &amp;rect, <a class="el" href="structwxPGPaintData.htm">wxPGPaintData</a> &amp;paintdata)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Override to paint an image in front of the property value text or drop-down list item (but only if <a class="el" href="classwxPGProperty.htm#a8c4008c4d7d148bd06f9db590301df76" title="Returns size of the custom painted image in front of property.">wxPGProperty::OnMeasureImage</a> is overridden as well).  <a href="#a9951df68b356ad59a51f3cf8910c88fc"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxSystemColourProperty.htm#ab00d87fa2c6dee99480849180b70ab4e">OnEvent</a> (<a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *propgrid, wxWindow *primary, wxEvent &amp;event)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Events received by editor widgets are processed here.  <a href="#ab00d87fa2c6dee99480849180b70ab4e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual wxSize&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxSystemColourProperty.htm#a9db3715eaa7e33fad4d901813f7a5d9e">OnMeasureImage</a> (int item) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns size of the custom painted image in front of property.  <a href="#a9db3715eaa7e33fad4d901813f7a5d9e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxSystemColourProperty.htm#ab5a97bd1acae0a58fa96f8282d89b4e9">OnSetValue</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This virtual function is called after m_value has been set.  <a href="#ab5a97bd1acae0a58fa96f8282d89b4e9"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a63ad11216edcfa03940c72ed12e32220"></a><!-- doxytag: member="wxSystemColourProperty::QueryColourFromUser" ref="a63ad11216edcfa03940c72ed12e32220" args="(wxVariant &amp;variant) const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>QueryColourFromUser</b> (wxVariant &amp;variant) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxSystemColourProperty.htm#ac32c042d219650b6f720ac30dba21d7d">StringToValue</a> (wxVariant &amp;variant, const wxString &amp;text, int argFlags=0) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Converts 'text' into proper value 'variant'.  <a href="#ac32c042d219650b6f720ac30dba21d7d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a62cddb0cf44f3d4bf1926dcd069c33ae"></a><!-- doxytag: member="wxSystemColourProperty::wxSystemColourProperty" ref="a62cddb0cf44f3d4bf1926dcd069c33ae" args="(const wxString &amp;label=wxPG_LABEL, const wxString &amp;name=wxPG_LABEL, const wxColourPropertyValue &amp;value=wxColourPropertyValue())" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><b>wxSystemColourProperty</b> (const wxString &amp;label=wxPG_LABEL, const wxString &amp;name=wxPG_LABEL, const <a class="el" href="classwxColourPropertyValue.htm">wxColourPropertyValue</a> &amp;value=<a class="el" href="classwxColourPropertyValue.htm">wxColourPropertyValue</a>())</td></tr>
<tr><td colspan="2"><h2>Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad4c99871a0d3e59a14dd91984fd0ee16"></a><!-- doxytag: member="wxSystemColourProperty::ColToInd" ref="ad4c99871a0d3e59a14dd91984fd0ee16" args="(const wxColour &amp;colour) const " -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><b>ColToInd</b> (const wxColour &amp;colour) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa995efb2b37b6351b122dc3a3a1fb6b7"></a><!-- doxytag: member="wxSystemColourProperty::DoTranslateVal" ref="aa995efb2b37b6351b122dc3a3a1fb6b7" args="(wxColourPropertyValue &amp;v) const " -->
virtual wxVariant&nbsp;</td><td class="memItemRight" valign="bottom"><b>DoTranslateVal</b> (<a class="el" href="classwxColourPropertyValue.htm">wxColourPropertyValue</a> &amp;v) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a132e4331c322bd182f033e3703138320"></a><!-- doxytag: member="wxSystemColourProperty::Init" ref="a132e4331c322bd182f033e3703138320" args="(int type, const wxColour &amp;colour)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>Init</b> (int type, const wxColour &amp;colour)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3ed30f919ad6cceaad91447c1c67044d"></a><!-- doxytag: member="wxSystemColourProperty::TranslateVal" ref="a3ed30f919ad6cceaad91447c1c67044d" args="(int type, const wxColour &amp;colour) const " -->
wxVariant&nbsp;</td><td class="memItemRight" valign="bottom"><b>TranslateVal</b> (int type, const wxColour &amp;colour) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8dd91ba1abdf8c89bd436abf4eb5772c"></a><!-- doxytag: member="wxSystemColourProperty::TranslateVal" ref="a8dd91ba1abdf8c89bd436abf4eb5772c" args="(wxColourPropertyValue &amp;v) const " -->
wxVariant&nbsp;</td><td class="memItemRight" valign="bottom"><b>TranslateVal</b> (<a class="el" href="classwxColourPropertyValue.htm">wxColourPropertyValue</a> &amp;v) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a92b19c685f3ed816f919f091c4c31c8f"></a><!-- doxytag: member="wxSystemColourProperty::wxSystemColourProperty" ref="a92b19c685f3ed816f919f091c4c31c8f" args="(const wxString &amp;label, const wxString &amp;name, const wxChar **labels, const long *values, wxPGChoices *choicesCache, const wxColour &amp;value)" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><b>wxSystemColourProperty</b> (const wxString &amp;label, const wxString &amp;name, const wxChar **labels, const long *values, <a class="el" href="classwxPGChoices.htm">wxPGChoices</a> *choicesCache, const wxColour &amp;value)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a66fd37e63c3243391c2420503b57302c"></a><!-- doxytag: member="wxSystemColourProperty::wxSystemColourProperty" ref="a66fd37e63c3243391c2420503b57302c" args="(const wxString &amp;label, const wxString &amp;name, const wxChar **labels, const long *values, wxPGChoices *choicesCache, const wxColourPropertyValue &amp;value)" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><b>wxSystemColourProperty</b> (const wxString &amp;label, const wxString &amp;name, const wxChar **labels, const long *values, <a class="el" href="classwxPGChoices.htm">wxPGChoices</a> *choicesCache, const <a class="el" href="classwxColourPropertyValue.htm">wxColourPropertyValue</a> &amp;value)</td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>Has dropdown list of wxWidgets system colours. </p>
<p>Value used is of <a class="el" href="classwxColourPropertyValue.htm" title="Because text, background and other colours tend to differ between platforms, wxSystemColourProperty...">wxColourPropertyValue</a> type. </p>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="ae94861630099e15274e7fb73c6acbeec"></a><!-- doxytag: member="wxSystemColourProperty::DoSetAttribute" ref="ae94861630099e15274e7fb73c6acbeec" args="(const wxString &amp;name, wxVariant &amp;value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool wxSystemColourProperty::DoSetAttribute </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxVariant &amp;&nbsp;</td>
          <td class="paramname"> <em>value</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Special handling for attributes of this property. </p>
<p>If returns false, then the attribute will be automatically stored in m_attributes.</p>
<p>Default implementation simply returns false. </p>

<p>Reimplemented from <a class="el" href="classwxPGProperty.htm#a7d355ae4bd55f00bc149e5416c39908c">wxPGProperty</a>.</p>

</div>
</div>
<a class="anchor" id="ae5bc6d37153b260d99f790867df6e088"></a><!-- doxytag: member="wxSystemColourProperty::GetColour" ref="ae5bc6d37153b260d99f790867df6e088" args="(int index) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual wxColour wxSystemColourProperty::GetColour </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>index</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Default is to use wxSystemSettings::GetColour(index). </p>
<p>Override to use custom colour tables etc. </p>

</div>
</div>
<a class="anchor" id="a92e1bbcbd610ee118cb7ca1e4c3bdd83"></a><!-- doxytag: member="wxSystemColourProperty::GetValueAsString" ref="a92e1bbcbd610ee118cb7ca1e4c3bdd83" args="(int argFlags=0) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual wxString wxSystemColourProperty::GetValueAsString </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>argFlags</em> = <code>0</code></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns text representation of property's value. </p>
<p>Generally this function should not be called from the application code. Instead, call <a class="el" href="classwxPGProperty.htm#a9133d43d6e539e2814ed28d2f37d953e" title="Same as GetValueAsString, except takes common value into account.">GetValueString()</a>.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>argFlags</em>&nbsp;</td><td>If wxPG_FULL_VALUE is set, returns complete, storable string value instead of displayable. If wxPG_EDITABLE_VALUE is set, returns string value that must be editable in textctrl. If wxPG_COMPOSITE_FRAGMENT is set, returns text that is appropriate to display as a part of composite property string value.</td></tr>
  </table>
  </dd>
</dl>
<dl class="remark"><dt><b>Remarks:</b></dt><dd><ul>
<li>Default implementation returns string composed from text representations of child properties.</li>
<li>Implementations are never called with m_value being null variant (ie. unspecified value), so you don't need to check for that. Naturally this means that unspecified value is always displayed as an empty string.</li>
</ul>
</dd></dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="classwxPGProperty.htm#a9133d43d6e539e2814ed28d2f37d953e" title="Same as GetValueAsString, except takes common value into account.">GetValueString()</a> </dd></dl>

<p>Reimplemented from <a class="el" href="classwxBaseEnumProperty.htm#aa3f4987d0178b9acdcbd9794ff4f3d72">wxBaseEnumProperty</a>.</p>

</div>
</div>
<a class="anchor" id="aacd92d2ddffdf36c05f6726b749f9e32"></a><!-- doxytag: member="wxSystemColourProperty::IntToValue" ref="aacd92d2ddffdf36c05f6726b749f9e32" args="(wxVariant &amp;variant, int number, int argFlags=0) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool wxSystemColourProperty::IntToValue </td>
          <td>(</td>
          <td class="paramtype">wxVariant &amp;&nbsp;</td>
          <td class="paramname"> <em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>number</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>argFlags</em> = <code>0</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Converts 'number' (including choice selection) into proper value 'variant'. </p>
<p>Returns true if new (different than m_value) value could be interpreted from the integer. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>argFlags</em>&nbsp;</td><td>If wxPG_FULL_VALUE is set, returns complete, storable value instead of displayable</td></tr>
  </table>
  </dd>
</dl>
<dl class="remark"><dt><b>Remarks:</b></dt><dd><ul>
<li>Default implementation may work correctly if used value type is int.</li>
<li>If property is not supposed to use choice or spinctrl or other editor with int-based value, it is not necessary to implement this method.</li>
<li>If property uses choice control, and displays a dialog on some choice items, then it is preferred to display that dialog in IntToValue instead of OnEvent.</li>
<li>You might want to take into account that m_value is Null variant if property value is unspecified (which is usually only case if you explicitly enabled that sort behavior). </li>
</ul>
</dd></dl>

<p>Reimplemented from <a class="el" href="classwxBaseEnumProperty.htm#a6bd6d1bd40730256e42b95d8724e9bc6">wxBaseEnumProperty</a>.</p>

</div>
</div>
<a class="anchor" id="a9951df68b356ad59a51f3cf8910c88fc"></a><!-- doxytag: member="wxSystemColourProperty::OnCustomPaint" ref="a9951df68b356ad59a51f3cf8910c88fc" args="(wxDC &amp;dc, const wxRect &amp;rect, wxPGPaintData &amp;paintdata)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void wxSystemColourProperty::OnCustomPaint </td>
          <td>(</td>
          <td class="paramtype">wxDC &amp;&nbsp;</td>
          <td class="paramname"> <em>dc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxRect &amp;&nbsp;</td>
          <td class="paramname"> <em>rect</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structwxPGPaintData.htm">wxPGPaintData</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>paintdata</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Override to paint an image in front of the property value text or drop-down list item (but only if <a class="el" href="classwxPGProperty.htm#a8c4008c4d7d148bd06f9db590301df76" title="Returns size of the custom painted image in front of property.">wxPGProperty::OnMeasureImage</a> is overridden as well). </p>
<p>If property's <a class="el" href="classwxSystemColourProperty.htm#a9db3715eaa7e33fad4d901813f7a5d9e" title="Returns size of the custom painted image in front of property.">OnMeasureImage()</a> returns size that has height != 0 but less than row height ( &lt; 0 has special meanings), <a class="el" href="classwxPropertyGrid.htm" title="wxPropertyGrid is a specialized two-column grid for editing properties such as strings...">wxPropertyGrid</a> calls this method to draw a custom image in a limited area in front of the editor control or value text/graphics, and if control has drop-down list, then the image is drawn there as well (even in the case <a class="el" href="classwxSystemColourProperty.htm#a9db3715eaa7e33fad4d901813f7a5d9e" title="Returns size of the custom painted image in front of property.">OnMeasureImage()</a> returned higher height than row height).</p>
<p>NOTE: Following applies when <a class="el" href="classwxSystemColourProperty.htm#a9db3715eaa7e33fad4d901813f7a5d9e" title="Returns size of the custom painted image in front of property.">OnMeasureImage()</a> returns a "flexible" height ( using wxPG_FLEXIBLE_SIZE(W,H) macro), which implies variable height items: If rect.x is &lt; 0, then this is a measure item call, which means that dc is invalid and only thing that should be done is to set paintdata.m_drawnHeight to the height of the image of item at index paintdata.m_choiceItem. This call may be done even as often as once every drop-down popup show.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>dc</em>&nbsp;</td><td>wxDC to paint on. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>rect</em>&nbsp;</td><td>Box reserved for custom graphics. Includes surrounding rectangle, if any. If x is &lt; 0, then this is a measure item call (see above). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>paintdata</em>&nbsp;</td><td><a class="el" href="structwxPGPaintData.htm" title="Contains information relayed to property&#39;s OnCustomPaint.">wxPGPaintData</a> structure with much useful data.</td></tr>
  </table>
  </dd>
</dl>
<dl class="remark"><dt><b>Remarks:</b></dt><dd><ul>
<li>You can actually exceed rect width, but if you do so then paintdata.m_drawnWidth must be set to the full width drawn in pixels.</li>
<li>Due to technical reasons, rect's height will be default even if custom height was reported during measure call.</li>
<li>Brush is guaranteed to be default background colour. It has been already used to clear the background of area being painted. It can be modified.</li>
<li>Pen is guaranteed to be 1-wide 'black' (or whatever is the proper colour) pen for drawing framing rectangle. It can be changed as well. </li>
</ul>
</dd></dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="classwxSystemColourProperty.htm#a92e1bbcbd610ee118cb7ca1e4c3bdd83">GetValueAsString</a> </dd></dl>

<p>Reimplemented from <a class="el" href="classwxPGProperty.htm#ad0b00df4a3916cb80adfa1227c70baf4">wxPGProperty</a>.</p>

</div>
</div>
<a class="anchor" id="ab00d87fa2c6dee99480849180b70ab4e"></a><!-- doxytag: member="wxSystemColourProperty::OnEvent" ref="ab00d87fa2c6dee99480849180b70ab4e" args="(wxPropertyGrid *propgrid, wxWindow *primary, wxEvent &amp;event)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool wxSystemColourProperty::OnEvent </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *&nbsp;</td>
          <td class="paramname"> <em>propgrid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxWindow *&nbsp;</td>
          <td class="paramname"> <em>wnd_primary</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxEvent &amp;&nbsp;</td>
          <td class="paramname"> <em>event</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Events received by editor widgets are processed here. </p>
<p>Note that editor class usually processes most events. Some, such as button press events of TextCtrlAndButton class, should be handled here. Also, if custom handling for regular events is desired, then that can also be done (for example, <a class="el" href="classwxSystemColourProperty.htm" title="Has dropdown list of wxWidgets system colours.">wxSystemColourProperty</a> custom handles wxEVT_COMMAND_CHOICE_SELECTED).</p>
<p>If the event causes value to be changed, wxPropertyGrid::ValueChangeInEvent(value) should be used.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>event</em>&nbsp;</td><td>Associated wxEvent. </td></tr>
  </table>
  </dd>
</dl>
<dl><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Should</em>&nbsp;</td><td>return true if any changes in value should be reported. </td></tr>
  </table>
  </dd>
</dl>
<dl class="remark"><dt><b>Remarks:</b></dt><dd><ul>
<li>If property uses choice control, and displays a dialog on some choice items, then it is preferred to display that dialog in IntToValue instead of OnEvent. </li>
</ul>
</dd></dl>

<p>Reimplemented from <a class="el" href="classwxPGProperty.htm#a16fbe26240bf47ab0a9a02d21781da73">wxPGProperty</a>.</p>

</div>
</div>
<a class="anchor" id="a9db3715eaa7e33fad4d901813f7a5d9e"></a><!-- doxytag: member="wxSystemColourProperty::OnMeasureImage" ref="a9db3715eaa7e33fad4d901813f7a5d9e" args="(int item) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual wxSize wxSystemColourProperty::OnMeasureImage </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>item</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns size of the custom painted image in front of property. </p>
<p>This method must be overridden to return non-default value if OnCustomPaint is to be called. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>item</em>&nbsp;</td><td>Normally -1, but can be an index to the property's list of items. </td></tr>
  </table>
  </dd>
</dl>
<dl class="remark"><dt><b>Remarks:</b></dt><dd><ul>
<li>Default behavior is to return wxSize(0,0), which means no image.</li>
<li>Default image width or height is indicated with dimension -1.</li>
<li>You can also return wxPG_DEFAULT_IMAGE_SIZE which equals wxSize(-1, -1). </li>
</ul>
</dd></dl>

<p>Reimplemented from <a class="el" href="classwxPGProperty.htm#a8c4008c4d7d148bd06f9db590301df76">wxPGProperty</a>.</p>

</div>
</div>
<a class="anchor" id="ab5a97bd1acae0a58fa96f8282d89b4e9"></a><!-- doxytag: member="wxSystemColourProperty::OnSetValue" ref="ab5a97bd1acae0a58fa96f8282d89b4e9" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void wxSystemColourProperty::OnSetValue </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This virtual function is called after m_value has been set. </p>
<dl class="remark"><dt><b>Remarks:</b></dt><dd><ul>
<li>If m_value was set to Null variant (ie. unspecified value), <a class="el" href="classwxSystemColourProperty.htm#ab5a97bd1acae0a58fa96f8282d89b4e9" title="This virtual function is called after m_value has been set.">OnSetValue()</a> will not be called.</li>
<li>m_value may be of any variant type. Typically properties internally support only one variant type, and as such <a class="el" href="classwxSystemColourProperty.htm#ab5a97bd1acae0a58fa96f8282d89b4e9" title="This virtual function is called after m_value has been set.">OnSetValue()</a> provides a good opportunity to convert supported values into internal type.</li>
<li>Default implementation does nothing. </li>
</ul>
</dd></dl>

<p>Reimplemented from <a class="el" href="classwxBaseEnumProperty.htm#a04c13f797615778c3359e81c8155200c">wxBaseEnumProperty</a>.</p>

</div>
</div>
<a class="anchor" id="ac32c042d219650b6f720ac30dba21d7d"></a><!-- doxytag: member="wxSystemColourProperty::StringToValue" ref="ac32c042d219650b6f720ac30dba21d7d" args="(wxVariant &amp;variant, const wxString &amp;text, int argFlags=0) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool wxSystemColourProperty::StringToValue </td>
          <td>(</td>
          <td class="paramtype">wxVariant &amp;&nbsp;</td>
          <td class="paramname"> <em>variant</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>text</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>argFlags</em> = <code>0</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Converts 'text' into proper value 'variant'. </p>
<p>Returns true if new (different than m_value) value could be interpreted from the text. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>argFlags</em>&nbsp;</td><td>If wxPG_FULL_VALUE is set, returns complete, storable value instead of displayable one (they may be different). If wxPG_COMPOSITE_FRAGMENT is set, text is interpreted as a part of composite property string value (as generated by <a class="el" href="classwxSystemColourProperty.htm#a92e1bbcbd610ee118cb7ca1e4c3bdd83" title="Returns text representation of property&#39;s value.">GetValueAsString()</a> called with this same flag).</td></tr>
  </table>
  </dd>
</dl>
<dl class="remark"><dt><b>Remarks:</b></dt><dd><ul>
<li>Default implementation converts semicolon delimited tokens into child values. Only works for properties with children.</li>
<li>You might want to take into account that m_value is Null variant if property value is unspecified (which is usually only case if you explicitly enabled that sort behavior). </li>
</ul>
</dd></dl>

<p>Reimplemented from <a class="el" href="classwxBaseEnumProperty.htm#ae66f1522fd28f71a079b1d79bdfc4fd3">wxBaseEnumProperty</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>advprops.h</li>
</ul>
</div>
<!--- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&nbsp;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&nbsp;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&nbsp;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&nbsp;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&nbsp;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&nbsp;</span>Enumerator</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<hr class="footer"/><address style="text-align: right;"><small>Generated on Sun Feb 27 10:26:00 2011 for wxPropertyGrid by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.3 </small></address>
</body>
</html>
