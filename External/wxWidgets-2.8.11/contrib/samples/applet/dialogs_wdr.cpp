//------------------------------------------------------------------------------
// Source code generated by wxDesigner from file: dialogs.wdr
// Do not modify this file, all changes will be lost!
//------------------------------------------------------------------------------

// For compilers that support precompilation
#include "wx/wxprec.h"

#ifdef __BORLANDC__
    #pragma hdrstop
#endif

// Include private header
#include "dialogs_wdr.h"


// Implement window functions

wxSizer *MonitorDialogFunc( wxPanel *parent, bool call_fit, bool set_sizer )
{
    wxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxSizer *item1 = new wxFlexGridSizer( 2, 0, 0 );

    wxSizer *item2 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticText *item3 = new wxStaticText( parent, ID_TEXT_MANUFACTURER, "Manufacturer:", wxDefaultPosition, wxSize(180,-1), 0 );
    item3->SetForegroundColour( *wxBLACK );
    item3->SetBackgroundColour( *wxWHITE );
    item2->Add( item3, 0, wxALIGN_CENTRE, 5 );

    item2->Add( 10, 20, 0, wxALIGN_CENTRE, 5 );

    item1->Add( item2, 0, wxALIGN_CENTER_VERTICAL, 5 );

    wxSizer *item4 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticText *item5 = new wxStaticText( parent, ID_TEXT_MODEL, "Model:", wxDefaultPosition, wxSize(250,-1), 0 );
    item5->SetForegroundColour( *wxBLACK );
    item5->SetBackgroundColour( *wxWHITE );
    item4->Add( item5, 0, wxALIGN_CENTRE, 5 );

    item1->Add( item4, 0, wxALIGN_CENTER_VERTICAL, 5 );

    wxSizer *item6 = new wxBoxSizer( wxHORIZONTAL );

    wxTextCtrl *item7 = new wxTextCtrl( parent, ID_TEXTCTRL_MFTR, "", wxDefaultPosition, wxSize(190,-1), wxTE_READONLY );
    item7->SetForegroundColour( *wxBLACK );
    item7->SetBackgroundColour( *wxWHITE );
    item6->Add( item7, 0, wxALIGN_CENTRE, 5 );

    item6->Add( 15, 20, 0, wxALIGN_CENTRE, 5 );

    item1->Add( item6, 0, wxALIGN_CENTRE, 5 );

    wxSizer *item8 = new wxBoxSizer( wxHORIZONTAL );

    wxTextCtrl *item9 = new wxTextCtrl( parent, ID_TEXTCTRL_MDL, "", wxDefaultPosition, wxSize(260,-1), wxTE_READONLY );
    item8->Add( item9, 0, wxALIGN_CENTRE, 5 );

    item1->Add( item8, 0, wxALIGN_CENTRE, 5 );

    wxSizer *item10 = new wxBoxSizer( wxHORIZONTAL );

    wxString *strs11 = (wxString*) NULL;
    wxListBox *item11 = new wxListBox( parent, ID_LISTBOX_MFTR, wxDefaultPosition, wxSize(190,150), 0, strs11, wxLB_SORT|wxLB_ALWAYS_SB );
    item10->Add( item11, 0, wxALIGN_CENTRE, 5 );

    item10->Add( 15, 20, 0, wxALIGN_CENTRE, 5 );

    item1->Add( item10, 0, wxALIGN_CENTRE, 5 );

    wxSizer *item12 = new wxBoxSizer( wxHORIZONTAL );

    wxString *strs13 = (wxString*) NULL;
    wxListBox *item13 = new wxListBox( parent, ID_LISTBOX_MDL, wxDefaultPosition, wxSize(260,150), 0, strs13, wxLB_SORT|wxLB_NEEDED_SB );
    item13->SetForegroundColour( *wxBLACK );
    item13->SetBackgroundColour( *wxWHITE );
    item12->Add( item13, 0, wxALIGN_CENTRE, 5 );

    item1->Add( item12, 0, wxALIGN_CENTRE, 5 );

    item0->Add( item1, 0, wxALIGN_CENTRE, 15 );

    if (set_sizer)
    {
        parent->SetAutoLayout( TRUE );
        parent->SetSizer( item0 );
        if (call_fit)
        {
            item0->Fit( parent );
            item0->SetSizeHints( parent );
        }
    }
    
    return item0;
}

// Implement bitmap functions


// End of generated file
